Shader "Cibbis shaders/toony standard" {
	Properties {
		_Color ("Color", Vector) = (1,1,1,1)
		_MainTex ("Albedo (RGB)", 2D) = "white" {}
		[Normal] _BumpMap ("Normal Map", 2D) = "bump" {}
		_BumpScale ("Normal Scale", Float) = 1
		_EmissionMap ("Emission Map", 2D) = "white" {}
		[HDR] _EmissionColor ("Emission Color", Vector) = (0,0,0,1)
		_OcclusionMap ("Occlusion Map", 2D) = "white" {}
		_Occlusion ("Occlusion", Range(0, 1)) = 1
		_Ramp ("Ramp Texture", 2D) = "white" {}
		_RampColor ("Ramp Color", Vector) = (1,1,1,1)
		_ShadowIntensity ("Shadow Intensity", Range(0, 1)) = 0.4
		_RampOffset ("Ramp Offset", Range(-1, 1)) = 0
		_OcclusionOffsetIntensity ("Occlusion Offset", Range(0, 1)) = 0
		_FakeLightColor ("Fake Light Color", Vector) = (1,1,1,1)
		_FakeLightX ("Fake Light X", Range(-1, 1)) = 1
		_FakeLightY ("Fake Light Y", Range(-1, 1)) = 0.7
		_FakeLightZ ("Fake Light Z", Range(-1, 1)) = 0
		_RimStrength ("Rim Strength", Range(0, 1)) = 0
		_RimSharpness ("Rim Sharpness", Range(0, 1)) = 0
		_RimIntensity ("Rim Intensity", Range(-1, 1)) = 0
		_Metallic ("Metallic", Range(0, 1)) = 0
		_MetallicMap ("Metallic Map", 2D) = "white" {}
		_Glossiness ("Smoothness", Range(0, 1)) = 0
		_GlossinessMap ("Smoothness Map", 2D) = "white" {}
		_TangentMap ("Tangent Map", 2D) = "white" {}
		_Anisotropy ("Anisotropy", Range(0, 1)) = 0
		_AnisotropyMap ("Anisotropy Map", 2D) = "white" {}
		_FakeHighlights ("Fake Highlights", 2D) = "black" {}
		_Matcap ("Matcap", 2D) = "white" {}
		_Cubemap ("Cubemap", Cube) = "" {}
		_IndirectColor ("Color", Vector) = (0.7,0.7,0.7,1)
		_HighlightPattern ("Highlight Pattern", 2D) = "white" {}
		_HighlightRamp ("Highlight Ramp Texture", 2D) = "white" {}
		_HighlightRampColor ("Highlight Ramp Color", Vector) = (1,1,1,1)
		_HighlightRampOffset ("Highlight Ramp Offset", Range(-1, 1)) = 0
		_HighlightIntensity ("Highlight Intensity", Range(0, 1)) = 1
		_FakeHighlightIntensity ("Fake Highlight Intensity", Range(0, 1)) = 0.5
		_DetailMask ("Detail Mask", 2D) = "white" {}
		_DetailIntensity ("Detail Intensity", Range(0, 1)) = 1
		_DetailTexture ("Albedo (RGB)", 2D) = "white" {}
		_DetailColor ("Color", Vector) = (1,1,1,1)
		[Normal] _DetailBumpMap ("Detail Normal Map", 2D) = "bump" {}
		_DetailBumpScale ("Detail Normal Scale", Float) = 1
		_Cutoff ("Alpha cutoff", Range(0, 1)) = 0.5
		[Enum(UnityEngine.Rendering.CullMode)] _Cull ("Cull Mode", Float) = 2
		[HideInInspector] _Mode ("__Mode", Float) = 0
		[HideInInspector] _SpMode ("__SpMode", Float) = 0
		[HideInInspector] _IndirectSpecular ("__IndirectSpecular", Float) = 0
		[HideInInspector] _Workflow ("__Workflow", Float) = 0
		[HideInInspector] _SrcBlend ("__src", Float) = 1
		[HideInInspector] _DstBlend ("__dst", Float) = 0
		[HideInInspector] _ZWrite ("__zw", Float) = 1
		[HideInInspector] _ToonyHighlights ("__ToonyHighlights", Float) = 0
		[HideInInspector] _FakeLight ("__FakeLight", Float) = 0
		[HideInInspector] _OcclusionOffset ("_-OcclusionOffset", Float) = 0
		[HideInInspector] _EnableSpecular ("__EnableSpecular", Float) = 0
		[HideInInspector] _DetailMap ("__DetailMap", Float) = 0
		[HideInInspector] _ToonRampBox ("__ToonRampBox", Float) = 0
		[HideInInspector] _RimLightBox ("__RimLightBox", Float) = 0
		[HideInInspector] _SpecularBox ("__SpecularBox", Float) = 0
		[HideInInspector] _DetailBox ("__DetailBox", Float) = 0
	}
	SubShader {
		LOD 200
		Tags { "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			LOD 200
			Tags { "LIGHTMODE" = "FORWARDBASE" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 7469
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o4.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o4.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb3[4].xyzx
					dp3 r1.y, v2.xyzx, cb3[5].xyzx
					dp3 r1.z, v2.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o2.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o4.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.x + 25].xyzw
					mad r2.xyzw, cb4[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb4[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb3[4].xyzx
					dp3 r1.y, v2.xyzx, cb3[5].xyzx
					dp3 r1.z, v2.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o2.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o4.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb5[0].x
					mul r1.yz, r0.wwww, cb4[r1.x + 66].zzwz
					mad o5.xy, r0.xyxx, cb4[r1.x + 66].xyxx, r1.yzyy
					mov o5.zw, r0.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r1.xyzx
					mov o3.xyz, r0.xyzx
					add r2.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb1[8].xyzx
					mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o4.xyz, r0.xyzx, r1.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r1.xyzx
					mov o3.xyz, r0.xyzx
					add r2.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb1[8].xyzx
					mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o4.xyz, r0.xyzx, r1.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r2.x, v2.xyzx, cb3[4].xyzx
					dp3 r2.y, v2.xyzx, cb3[5].xyzx
					dp3 r2.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.xyz, r2.xyzx
					mov o3.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o4.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r2.x, v2.xyzx, cb3[4].xyzx
					dp3 r2.y, v2.xyzx, cb3[5].xyzx
					dp3 r2.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.xyz, r2.xyzx
					mov o3.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o4.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					add r2.w, -cb0[4].x, l(1.000000)
					dp3 r3.w, -r1.xyzx, v2.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, v2.xyzx, -r3.wwww, -r1.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb3[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v3.xyzx, cb3[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v3.xyzx, cb3[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v3.xyzx, -cb3[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r2.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r1.w
					add r3.w, r6.w, l(-1.000000)
					mad r3.w, cb3[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb3[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb3[3].x
					mul r7.xyz, r6.xyzx, r3.wwww
					lt r4.w, cb3[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb3[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v3.xyzx, cb3[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v3.xyzx, cb3[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v3.xyzx, -cb3[6].xyzx
					    mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb3[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb3[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb3[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r6.xyz, r3.wwww, r6.xyzx, -r4.xyzx
					  mad r7.xyz, cb3[1].wwww, r6.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r2.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r3.w, r1.z, r1.z
					mul r3.w, r3.w, r3.w
					mul r1.z, r1.z, r3.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r2.w, r2.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, l(1.000000)
					add_sat r1.x, r1.x, cb0[4].x
					mul r4.xyz, r0.yyyy, r5.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r7.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					mov r0.x, cb3[0].x
					add r0.xyz, -v3.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					add r2.w, -cb0[4].x, l(1.000000)
					dp3 r3.w, -r1.xyzx, v2.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, v2.xyzx, -r3.wwww, -r1.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v3.xyzx, cb4[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v3.xyzx, cb4[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v3.xyzx, -cb4[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r2.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r1.w
					add r3.w, r6.w, l(-1.000000)
					mad r3.w, cb4[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb4[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb4[3].x
					mul r7.xyz, r6.xyzx, r3.wwww
					lt r4.w, cb4[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb4[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v3.xyzx, cb4[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v3.xyzx, cb4[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v3.xyzx, -cb4[6].xyzx
					    mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r6.xyz, r3.wwww, r6.xyzx, -r4.xyzx
					  mad r7.xyz, cb4[1].wwww, r6.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r2.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r3.w, r1.z, r1.z
					mul r3.w, r3.w, r3.w
					mul r1.z, r1.z, r3.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r2.w, r2.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, cb0[4].x
					add_sat r1.x, r1.x, l(1.000000)
					mul r4.xyz, r0.yyyy, r5.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r7.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					add r3.w, -cb0[4].x, l(1.000000)
					dp3 r4.x, -r1.xyzx, v2.xyzx
					add r4.x, r4.x, r4.x
					mad r4.xyz, v2.xyzx, -r4.xxxx, -r1.xyzx
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb4[2].xyzx
					  mad r6.xyz, cb4[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb4[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb4[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb4[6].xyzx
					  mul r6.yzw, r6.xxyz, cb4[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb4[0].z, l(0.500000)
					  mad r4.w, -cb4[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r4.w, r1.w
					  sample r7.xyzw, r6.xzwx, t3.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t3.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t3.xyzw, s1
					  mov r9.xyz, v2.xyzx
					  mov r9.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r9.xyzw
					  dp4 r7.y, r8.xyzw, r9.xyzw
					  dp4 r7.z, r6.xyzw, r9.xyzw
					else 
					  mov r6.xyz, v2.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r6.xyzw
					  dp4 r7.y, cb2[40].xyzw, r6.xyzw
					  dp4 r7.z, cb2[41].xyzw, r6.xyzw
					endif 
					add r6.xyz, r7.xyzx, v4.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb3[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r8.xyz, -v3.xyzx, cb3[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v3.xyzx, cb3[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v3.xyzx, -cb3[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb3[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb3[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb3[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r4.w, cb3[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb3[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r4.xyzx
					    add r10.xyz, -v3.xyzx, cb3[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v3.xyzx, cb3[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r4.w, r10.y, r10.x
					    min r4.w, r10.z, r4.w
					    add r10.xyz, v3.xyzx, -cb3[6].xyzx
					    mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb3[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb3[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb3[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb3[1].wwww, r7.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r3.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r3.w, r3.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, cb0[4].x
					add_sat r1.x, r1.x, l(1.000000)
					mad r4.xyz, r5.xyzx, r0.yyyy, r6.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r8.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, cb3[0].x
					add r0.xyz, -v3.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					add r3.w, -cb0[4].x, l(1.000000)
					dp3 r4.x, -r1.xyzx, v2.xyzx
					add r4.x, r4.x, r4.x
					mad r4.xyz, v2.xyzx, -r4.xxxx, -r1.xyzx
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb5[6].xyzx
					  mul r6.yzw, r6.xxyz, cb5[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb5[0].z, l(0.500000)
					  mad r4.w, -cb5[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r4.w, r1.w
					  sample r7.xyzw, r6.xzwx, t3.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t3.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t3.xyzw, s1
					  mov r9.xyz, v2.xyzx
					  mov r9.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r9.xyzw
					  dp4 r7.y, r8.xyzw, r9.xyzw
					  dp4 r7.z, r6.xyzw, r9.xyzw
					else 
					  mov r6.xyz, v2.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r7.x, cb1[39].xyzw, r6.xyzw
					  dp4 r7.y, cb1[40].xyzw, r6.xyzw
					  dp4 r7.z, cb1[41].xyzw, r6.xyzw
					endif 
					add r6.xyz, r7.xyzx, v4.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r8.xyz, -v3.xyzx, cb4[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v3.xyzx, cb4[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v3.xyzx, -cb4[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r4.w, cb4[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb4[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r4.xyzx
					    add r10.xyz, -v3.xyzx, cb4[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v3.xyzx, cb4[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r4.w, r10.y, r10.x
					    min r4.w, r10.z, r4.w
					    add r10.xyz, v3.xyzx, -cb4[6].xyzx
					    mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb4[1].wwww, r7.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r3.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r3.w, r3.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, cb0[4].x
					add_sat r1.x, r1.x, l(1.000000)
					mad r4.xyz, r5.xyzx, r0.yyyy, r6.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r8.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xy w
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v4.xyxx, v4.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					add r2.w, -cb0[4].x, l(1.000000)
					dp3 r3.w, -r1.xyzx, v2.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, v2.xyzx, -r3.wwww, -r1.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v3.xyzx, cb5[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v3.xyzx, cb5[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v3.xyzx, -cb5[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r2.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r1.w
					add r3.w, r6.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb5[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb5[3].x
					mul r7.xyz, r6.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v3.xyzx, cb5[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v3.xyzx, cb5[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v3.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb5[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r6.xyz, r3.wwww, r6.xyzx, -r4.xyzx
					  mad r7.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r2.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r3.w, r1.z, r1.z
					mul r3.w, r3.w, r3.w
					mul r1.z, r1.z, r3.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r2.w, r2.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, cb0[4].x
					add_sat r1.x, r1.x, l(1.000000)
					mul r4.xyz, r0.yyyy, r5.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r7.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xy w
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 12
					mov r0.x, cb4[0].x
					add r0.xyz, -v3.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r4.x, cb3[r1.w + 8].z
					mov r4.y, cb3[r1.w + 9].z
					mov r4.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
					div r4.xy, v4.xyxx, v4.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					add r2.w, -cb0[4].x, l(1.000000)
					dp3 r3.w, -r1.xyzx, v2.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, v2.xyzx, -r3.wwww, -r1.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v3.xyzx, cb5[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v3.xyzx, cb5[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v3.xyzx, -cb5[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r2.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r1.w
					add r3.w, r6.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb5[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb5[3].x
					mul r7.xyz, r6.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v3.xyzx, cb5[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v3.xyzx, cb5[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v3.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb5[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r6.xyz, r3.wwww, r6.xyzx, -r4.xyzx
					  mad r7.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r2.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r3.w, r1.z, r1.z
					mul r3.w, r3.w, r3.w
					mul r1.z, r1.z, r3.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r2.w, r2.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, cb0[4].x
					add_sat r1.x, r1.x, l(1.000000)
					mul r4.xyz, r0.yyyy, r5.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r7.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v5.xyxx, v5.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					add r3.w, -cb0[4].x, l(1.000000)
					dp3 r4.x, -r1.xyzx, v2.xyzx
					add r4.x, r4.x, r4.x
					mad r4.xyz, v2.xyzx, -r4.xxxx, -r1.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb6[0].z, l(0.500000)
					  mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r4.w, r1.w
					  sample r7.xyzw, r6.xzwx, t4.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t4.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t4.xyzw, s1
					  mov r9.xyz, v2.xyzx
					  mov r9.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r9.xyzw
					  dp4 r7.y, r8.xyzw, r9.xyzw
					  dp4 r7.z, r6.xyzw, r9.xyzw
					else 
					  mov r6.xyz, v2.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r6.xyzw
					  dp4 r7.y, cb2[40].xyzw, r6.xyzw
					  dp4 r7.z, cb2[41].xyzw, r6.xyzw
					endif 
					add r6.xyz, r7.xyzx, v4.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r8.xyz, -v3.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v3.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v3.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb5[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb5[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r4.xyzx
					    add r10.xyz, -v3.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v3.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r4.w, r10.y, r10.x
					    min r4.w, r10.z, r4.w
					    add r10.xyz, v3.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb5[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r7.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r3.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r3.w, r3.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, cb0[4].x
					add_sat r1.x, r1.x, l(1.000000)
					mad r4.xyz, r5.xyzx, r0.yyyy, r6.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r8.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, cb4[0].x
					add r0.xyz, -v3.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r4.x, cb3[r1.w + 8].z
					mov r4.y, cb3[r1.w + 9].z
					mov r4.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
					div r4.xy, v5.xyxx, v5.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					add r3.w, -cb0[4].x, l(1.000000)
					dp3 r4.x, -r1.xyzx, v2.xyzx
					add r4.x, r4.x, r4.x
					mad r4.xyz, v2.xyzx, -r4.xxxx, -r1.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb6[0].z, l(0.500000)
					  mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r4.w, r1.w
					  sample r7.xyzw, r6.xzwx, t4.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t4.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t4.xyzw, s1
					  mov r9.xyz, v2.xyzx
					  mov r9.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r9.xyzw
					  dp4 r7.y, r8.xyzw, r9.xyzw
					  dp4 r7.z, r6.xyzw, r9.xyzw
					else 
					  mov r6.xyz, v2.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r7.x, cb1[39].xyzw, r6.xyzw
					  dp4 r7.y, cb1[40].xyzw, r6.xyzw
					  dp4 r7.z, cb1[41].xyzw, r6.xyzw
					endif 
					add r6.xyz, r7.xyzx, v4.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r8.xyz, -v3.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v3.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v3.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb5[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb5[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r4.xyzx
					    add r10.xyz, -v3.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v3.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r4.w, r10.y, r10.x
					    min r4.w, r10.z, r4.w
					    add r10.xyz, v3.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
					  add r1.w, r4.w, l(-1.000000)
					  mad r1.w, cb5[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r7.xyzx, r4.xyzx
					endif 
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r3.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r3.w, r3.w
					max r0.z, r0.z, l(0.002000)
					add r2.w, -r0.z, l(1.000000)
					mad r3.w, |r0.w|, r2.w, r0.z
					mad r2.w, r1.x, r2.w, r0.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r1.x, r3.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r0.z, r0.z
					mad r3.w, r1.y, r2.w, -r1.y
					mad r1.y, r3.w, r1.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r2.w, r1.y
					mul r0.w, r0.w, r1.y
					mul r0.w, r0.w, l(3.141593)
					mul r0.yw, r1.xxxx, r0.yyyw
					max r0.w, r0.w, l(0.000000)
					mad r0.z, r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					ne r1.x, r1.x, l(0.000000)
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					add r1.x, -r1.w, l(1.000000)
					add_sat r1.x, r1.x, cb0[4].x
					mad r4.xyz, r5.xyzx, r0.yyyy, r6.xyzx
					mul r5.xyz, r5.xyzx, r0.wwww
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
					mul r0.xyw, r0.xyxw, r5.xyxz
					mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
					mul r3.xyz, r8.xyzx, r0.zzzz
					add r1.xyw, -r2.xyxz, r1.xxxx
					mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			LOD 200
			Tags { "LIGHTMODE" = "FORWARDADD" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend One One, One One
			ZWrite Off
			GpuProgramID 104387
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[15].xyxx, cb0[15].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[15].xyxx, cb0[15].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyz, r3.xyzx, cb0[9].xyzx
					mul r5.xyz, v3.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t2.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.wwww, t1.xyzw, s1
					mul r1.w, r1.w, r5.x
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r2.xyzx
					dp3_sat r2.x, r6.xyzx, r1.xyzx
					dp3_sat r2.y, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r3.xyzx, r3.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v3.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyz, r3.xyzx, cb0[9].xyzx
					mul r5.xyz, v3.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb4[2].xyzx
					  mad r6.xyz, cb4[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb4[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb4[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb4[6].xyzx
					  mul r6.yzw, r6.xxyz, cb4[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t2.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb1[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.wwww, t1.xyzw, s1
					mul r1.w, r1.w, r5.x
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r2.xyzx
					dp3_sat r2.x, r6.xyzx, r1.xyzx
					dp3_sat r2.y, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r3.xyzx, r3.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[4].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.x, cb3[0].x
					add r0.xyz, -v3.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[4].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyz, r3.xyzx, cb0[9].xyzx
					mul r5.xyzw, v3.yyyy, cb0[5].xyzw
					mad r5.xyzw, cb0[4].xyzw, v3.xxxx, r5.xyzw
					mad r5.xyzw, cb0[6].xyzw, v3.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[7].xyzw
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t3.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					lt r2.w, l(0.000000), r5.z
					and r2.w, r2.w, l(0x3f800000)
					div r6.xy, r5.xyxx, r5.wwww
					add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r6.xyzw, r6.xyxx, t1.xyzw, s1
					mul r2.w, r2.w, r6.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r3.wwww, t2.xyzw, s2
					mul r2.w, r2.w, r5.x
					mul r1.w, r1.w, r2.w
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r2.xyzx
					dp3_sat r2.x, r6.xyzx, r1.xyzx
					dp3_sat r2.y, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r3.xyzx, r3.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v3.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyz, r3.xyzx, cb0[9].xyzx
					mul r5.xyzw, v3.yyyy, cb0[5].xyzw
					mad r5.xyzw, cb0[4].xyzw, v3.xxxx, r5.xyzw
					mad r5.xyzw, cb0[6].xyzw, v3.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[7].xyzw
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb4[2].xyzx
					  mad r6.xyz, cb4[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb4[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb4[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb4[6].xyzx
					  mul r6.yzw, r6.xxyz, cb4[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t3.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r5.z
					and r2.w, r2.w, l(0x3f800000)
					div r6.xy, r5.xyxx, r5.wwww
					add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r6.xyzw, r6.xyxx, t1.xyzw, s1
					mul r2.w, r2.w, r6.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r3.wwww, t2.xyzw, s2
					mul r2.w, r2.w, r5.x
					mul r1.w, r1.w, r2.w
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r2.xyzx
					dp3_sat r2.x, r6.xyzx, r1.xyzx
					dp3_sat r2.y, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r3.xyzx, r3.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyz, r3.xyzx, cb0[9].xyzx
					mul r5.xyz, v3.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t3.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r6.xyzw, r2.wwww, t1.xyzw, s2
					sample r5.xyzw, r5.xyzx, t2.xyzw, s1
					mul r2.w, r5.w, r6.x
					mul r1.w, r1.w, r2.w
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r2.xyzx
					dp3_sat r2.x, r6.xyzx, r1.xyzx
					dp3_sat r2.y, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r3.xyzx, r3.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v3.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyz, r3.xyzx, cb0[9].xyzx
					mul r5.xyz, v3.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r6.xyz, v3.yyyy, cb4[2].xyzx
					  mad r6.xyz, cb4[1].xyzx, v3.xxxx, r6.xyzx
					  mad r6.xyz, cb4[3].xyzx, v3.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb4[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
					  add r6.xyz, r6.xyzx, -cb4[6].xyzx
					  mul r6.yzw, r6.xxyz, cb4[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t3.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb1[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r6.xyzw, r2.wwww, t1.xyzw, s2
					sample r5.xyzw, r5.xyzx, t2.xyzw, s1
					mul r2.w, r5.w, r6.x
					mul r1.w, r1.w, r2.w
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r2.xyzx
					dp3_sat r2.x, r6.xyzx, r1.xyzx
					dp3_sat r2.y, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r3.xyzx, r3.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[9].xyzx
					mul r4.xy, v3.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v3.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v3.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v3.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v3.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v3.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					sample r4.xyzw, r4.xyxx, t1.xyzw, s1
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.x, cb3[0].x
					add r0.xyz, -v3.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[9].xyzx
					mul r4.xy, v3.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v3.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v3.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v3.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v3.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v3.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v3.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t1.xyzw, s1
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyzw, v3.yyyy, cb0[5].xyzw
					mad r6.xyzw, cb0[4].xyzw, v3.xxxx, r6.xyzw
					mad r6.xyzw, cb0[6].xyzw, v3.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[7].xyzw
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
					mul r7.xyzw, v3.yyyy, cb3[9].xyzw
					mad r7.xyzw, cb3[8].xyzw, v3.xxxx, r7.xyzw
					mad r7.xyzw, cb3[10].xyzw, v3.zzzz, r7.xyzw
					add r7.xyzw, r7.xyzw, cb3[11].xyzw
					div r7.xyz, r7.xyzx, r7.wwww
					sample_c_lz r2.z, r7.xyxx, t4.xxxx, s1, r7.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t1.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t2.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v3.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyzw, v3.yyyy, cb0[5].xyzw
					mad r6.xyzw, cb0[4].xyzw, v3.xxxx, r6.xyzw
					mad r6.xyzw, cb0[6].xyzw, v3.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[7].xyzw
					ishl r1.w, cb4[0].x, l(2)
					mov r7.x, cb3[r1.w + 8].z
					mov r7.y, cb3[r1.w + 9].z
					mov r7.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb1[46].xyzw
					mul r7.xyzw, v3.yyyy, cb2[9].xyzw
					mad r7.xyzw, cb2[8].xyzw, v3.xxxx, r7.xyzw
					mad r7.xyzw, cb2[10].xyzw, v3.zzzz, r7.xyzw
					add r7.xyzw, r7.xyzw, cb2[11].xyzw
					div r7.xyz, r7.xyzx, r7.wwww
					sample_c_lz r2.z, r7.xyxx, t4.xxxx, s1, r7.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t1.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t2.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[14].xyzx
					mul r6.xyzw, v3.yyyy, cb0[10].xyzw
					mad r6.xyzw, cb0[9].xyzw, v3.xxxx, r6.xyzw
					mad r6.xyzw, cb0[11].xyzw, v3.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[12].xyzw
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  mul r7.xyzw, v3.yyyy, cb3[9].xyzw
					  mad r7.xyzw, cb3[8].xyzw, v3.xxxx, r7.xyzw
					  mad r7.xyzw, cb3[10].xyzw, v3.zzzz, r7.xyzw
					  add r7.xyzw, r7.xyzw, cb3[11].xyzw
					  div r7.xyz, r7.xyzx, r7.wwww
					  mad r2.zw, r7.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r2.zw, r2.zzzw
					  mad r7.xy, r7.xyxx, cb0[8].zwzz, -r2.zwzz
					  add r8.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r9.xw, r8.xxxz, r8.xxxz
					  mad r8.xz, r9.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
					  add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r10.xy, -r10.zwzz, r10.zwzz, r10.xyxx
					  max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xy, -r7.xyxx, r7.xyxx, r8.ywyy
					  mov r11.x, r8.x
					  mov r11.y, r10.x
					  mov r11.z, r7.x
					  mov r11.w, r9.x
					  mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r9.x, r8.z
					  mov r9.y, r10.y
					  mov r9.z, r7.y
					  mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r9.xyzw, r11.ywyw, r11.xzxz
					  add r10.xyzw, r8.yyww, r8.xxzz
					  div r7.xy, r11.ywyy, r9.zwzz
					  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r8.xy, r8.ywyy, r10.ywyy
					  add r8.xy, r8.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r11.xy, r7.xyxx, cb0[8].xxxx
					  mul r11.zw, r8.xxxy, cb0[8].yyyy
					  mul r8.xyzw, r9.xyzw, r10.xyzw
					  mad r9.xyzw, r2.zwzw, cb0[8].xyxy, r11.xzyz
					  sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r7.z
					  sample_c_lz r4.w, r9.zwzz, t4.xxxx, s1, r7.z
					  mul r4.w, r4.w, r8.y
					  mad r3.w, r8.x, r3.w, r4.w
					  mad r9.xyzw, r2.zwzw, cb0[8].xyxy, r11.xwyw
					  sample_c_lz r2.z, r9.xyxx, t4.xxxx, s1, r7.z
					  mad r2.z, r8.z, r2.z, r3.w
					  sample_c_lz r2.w, r9.zwzz, t4.xxxx, s1, r7.z
					  mad r2.z, r8.w, r2.w, r2.z
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t1.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t2.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[14].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[13].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[13].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[13].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v3.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[14].xyzx
					mul r6.xyzw, v3.yyyy, cb0[10].xyzw
					mad r6.xyzw, cb0[9].xyzw, v3.xxxx, r6.xyzw
					mad r6.xyzw, cb0[11].xyzw, v3.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[12].xyzw
					ishl r1.w, cb4[0].x, l(2)
					mov r7.x, cb3[r1.w + 8].z
					mov r7.y, cb3[r1.w + 9].z
					mov r7.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  mul r7.xyzw, v3.yyyy, cb2[9].xyzw
					  mad r7.xyzw, cb2[8].xyzw, v3.xxxx, r7.xyzw
					  mad r7.xyzw, cb2[10].xyzw, v3.zzzz, r7.xyzw
					  add r7.xyzw, r7.xyzw, cb2[11].xyzw
					  div r7.xyz, r7.xyzx, r7.wwww
					  mad r2.zw, r7.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r2.zw, r2.zzzw
					  mad r7.xy, r7.xyxx, cb0[8].zwzz, -r2.zwzz
					  add r8.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r9.xw, r8.xxxz, r8.xxxz
					  mad r8.xz, r9.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
					  add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r10.xy, -r10.zwzz, r10.zwzz, r10.xyxx
					  max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xy, -r7.xyxx, r7.xyxx, r8.ywyy
					  mov r11.x, r8.x
					  mov r11.y, r10.x
					  mov r11.z, r7.x
					  mov r11.w, r9.x
					  mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r9.x, r8.z
					  mov r9.y, r10.y
					  mov r9.z, r7.y
					  mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r9.xyzw, r11.ywyw, r11.xzxz
					  add r10.xyzw, r8.yyww, r8.xxzz
					  div r7.xy, r11.ywyy, r9.zwzz
					  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r8.xy, r8.ywyy, r10.ywyy
					  add r8.xy, r8.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r11.xy, r7.xyxx, cb0[8].xxxx
					  mul r11.zw, r8.xxxy, cb0[8].yyyy
					  mul r8.xyzw, r9.xyzw, r10.xyzw
					  mad r9.xyzw, r2.zwzw, cb0[8].xyxy, r11.xzyz
					  sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r7.z
					  sample_c_lz r4.w, r9.zwzz, t4.xxxx, s1, r7.z
					  mul r4.w, r4.w, r8.y
					  mad r3.w, r8.x, r3.w, r4.w
					  mad r9.xyzw, r2.zwzw, cb0[8].xyxy, r11.xwyw
					  sample_c_lz r2.z, r9.xyxx, t4.xxxx, s1, r7.z
					  mad r2.z, r8.z, r2.z, r3.w
					  sample_c_lz r2.w, r9.zwzz, t4.xxxx, s1, r7.z
					  mad r2.z, r8.w, r2.w, r2.z
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t1.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t2.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[14].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[13].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[13].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[13].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v4.xyxx, v4.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s1
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[4].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.x, cb4[0].x
					add r0.xyz, -v3.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[5].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r4.x, cb3[r1.w + 8].z
					mov r4.y, cb3[r1.w + 9].z
					mov r4.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v3.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v3.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v3.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v3.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
					div r4.xy, v4.xyxx, v4.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s1
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[4].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyz, r2.xyzx, cb0[9].xyzx
					mul r4.xy, v3.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v3.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v3.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r5.xyzx
					add r5.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v3.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v3.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v3.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v3.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v4.xxxy, v4.wwww
					sample r5.xyzw, r4.zwzz, t1.xyzw, s1
					add_sat r1.w, r1.w, r5.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.x, cb4[0].x
					add r0.xyz, -v3.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyz, r2.xyzx, cb0[9].xyzx
					mul r4.xy, v3.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v3.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v3.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					ishl r1.w, cb4[0].x, l(2)
					mov r5.x, cb3[r1.w + 8].z
					mov r5.y, cb3[r1.w + 9].z
					mov r5.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r5.xyzx
					add r5.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v3.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v3.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v3.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v3.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb1[46].xyzw
					div r4.zw, v4.xxxy, v4.wwww
					sample r5.xyzw, r4.zwzz, t1.xyzw, s1
					add_sat r1.w, r1.w, r5.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v2.xyzx
					mad r2.xyz, r2.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r3.xyz, r1.wwww, r3.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r5.xyzx, cb1[0].xyzx
					dp3_sat r1.y, r5.xyzx, r0.xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.w, r1.z, r1.z
					mul r2.w, r2.w, r2.w
					mul r1.z, r1.z, r2.w
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r1.xxxx, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t2.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
					add r7.xyz, v3.xyzx, -cb2[1].xyzx
					max r2.z, |r7.y|, |r7.x|
					max r2.z, |r7.z|, r2.z
					add r2.z, r2.z, -cb2[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb2[2].w
					div r2.z, cb2[2].y, r2.z
					add r2.z, r2.z, -cb2[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r7.xyzx, t3.xxxx, s1, r2.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v3.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r7.x, cb3[r1.w + 8].z
					mov r7.y, cb3[r1.w + 9].z
					mov r7.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t2.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb1[46].xyzw
					add r7.xyz, v3.xyzx, -cb1[1].xyzx
					max r2.z, |r7.y|, |r7.x|
					max r2.z, |r7.z|, r2.z
					add r2.z, r2.z, -cb1[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb1[2].w
					div r2.z, cb1[2].y, r2.z
					add r2.z, r2.z, -cb1[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r7.xyzx, t3.xxxx, s1, r2.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t2.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r7.xyz, v3.xyzx, -cb2[1].xyzx
					  max r2.z, |r7.y|, |r7.x|
					  max r2.z, |r7.z|, r2.z
					  add r2.z, r2.z, -cb2[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb2[2].w
					  div r2.z, cb2[2].y, r2.z
					  add r2.z, r2.z, -cb2[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.x, r8.xyzx, t3.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.y, r9.xyzx, t3.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.z, r9.xyzx, t3.xxxx, s1, r2.z
					  add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.w, r7.xyzx, t3.xxxx, s1, r2.z
					  dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v3.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r7.x, cb3[r1.w + 8].z
					mov r7.y, cb3[r1.w + 9].z
					mov r7.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t2.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r7.xyz, v3.xyzx, -cb1[1].xyzx
					  max r2.z, |r7.y|, |r7.x|
					  max r2.z, |r7.z|, r2.z
					  add r2.z, r2.z, -cb1[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb1[2].w
					  div r2.z, cb1[2].y, r2.z
					  add r2.z, r2.z, -cb1[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.x, r8.xyzx, t3.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.y, r9.xyzx, t3.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.z, r9.xyzx, t3.xxxx, s1, r2.z
					  add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.w, r7.xyzx, t3.xxxx, s1, r2.z
					  dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
					add r7.xyz, v3.xyzx, -cb2[1].xyzx
					max r2.z, |r7.y|, |r7.x|
					max r2.z, |r7.z|, r2.z
					add r2.z, r2.z, -cb2[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb2[2].w
					div r2.z, cb2[2].y, r2.z
					add r2.z, r2.z, -cb2[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r7.xyzx, t4.xxxx, s1, r2.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s3
					sample r6.xyzw, r6.xyzx, t2.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v3.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r7.x, cb3[r1.w + 8].z
					mov r7.y, cb3[r1.w + 9].z
					mov r7.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb1[46].xyzw
					add r7.xyz, v3.xyzx, -cb1[1].xyzx
					max r2.z, |r7.y|, |r7.x|
					max r2.z, |r7.z|, r2.z
					add r2.z, r2.z, -cb1[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb1[2].w
					div r2.z, cb1[2].y, r2.z
					add r2.z, r2.z, -cb1[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r7.xyzx, t4.xxxx, s1, r2.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s3
					sample r6.xyzw, r6.xyzx, t2.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v3.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v3.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r7.xyz, v3.xyzx, -cb2[1].xyzx
					  max r2.z, |r7.y|, |r7.x|
					  max r2.z, |r7.z|, r2.z
					  add r2.z, r2.z, -cb2[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb2[2].w
					  div r2.z, cb2[2].y, r2.z
					  add r2.z, r2.z, -cb2[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.x, r8.xyzx, t4.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.y, r9.xyzx, t4.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.z, r9.xyzx, t4.xxxx, s1, r2.z
					  add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.w, r7.xyzx, t4.xxxx, s1, r2.z
					  dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s3
					sample r6.xyzw, r6.xyzx, t2.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v3.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v3.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					sample r4.xyzw, v1.xyxx, t0.xyzw, s4
					mul r5.xyz, r4.xyzx, cb0[9].xyzx
					mul r6.xyz, v3.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r7.x, cb3[r1.w + 8].z
					mov r7.y, cb3[r1.w + 9].z
					mov r7.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v3.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r7.xyz, v3.yyyy, cb5[2].xyzx
					  mad r7.xyz, cb5[1].xyzx, v3.xxxx, r7.xyzx
					  mad r7.xyz, cb5[3].xyzx, v3.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r7.xxyz, v3.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r7.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r7.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r7.x, r2.z, r2.y
					  sample r7.xyzw, r7.xzwx, t3.xyzw, s0
					else 
					  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r7.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r7.xyz, v3.xyzx, -cb1[1].xyzx
					  max r2.z, |r7.y|, |r7.x|
					  max r2.z, |r7.z|, r2.z
					  add r2.z, r2.z, -cb1[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb1[2].w
					  div r2.z, cb1[2].y, r2.z
					  add r2.z, r2.z, -cb1[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.x, r8.xyzx, t4.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r8.y, r9.xyzx, t4.xxxx, s1, r2.z
					  add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.z, r9.xyzx, t4.xxxx, s1, r2.z
					  add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r8.w, r7.xyzx, t4.xxxx, s1, r2.z
					  dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s3
					sample r6.xyzw, r6.xyzx, t2.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, v2.xyzx
					mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r1.w, -cb0[8].y, l(0.960000), l(0.960000)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[8].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r1.xyzx
					dp3_sat r3.x, r6.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r3.x, r0.z, -r3.x
					mad r1.x, r1.x, r3.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					mul r0.yz, r2.wwww, r0.yyzy
					max r0.z, r0.z, l(0.000000)
					dp3 r0.w, r4.xyzx, r4.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			LOD 200
			Tags { "LIGHTMODE" = "DEFERRED" "RenderType" = "Opaque" }
			GpuProgramID 182721
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o2.xyz, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o2.xyz, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o2.xyz, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o2.xyz, r0.xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					mad r0.x, -cb0[4].y, l(0.960000), l(0.960000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[5].xxyz
					mad r1.xyz, r1.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad o1.xyz, cb0[4].yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					mov o1.w, cb0[4].x
					mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					mad r0.x, -cb0[4].y, l(0.960000), l(0.960000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[5].xxyz
					mad r1.xyz, r1.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad o1.xyz, cb0[4].yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					mov o1.w, cb0[4].x
					mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v3.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.w, cb2[0].z, l(0.500000)
					  mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.w
					  min r2.x, r2.y, r0.w
					  sample r3.xyzw, r2.xzwx, t1.xyzw, s0
					  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t1.xyzw, s0
					  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r2.xyzw, r2.xyzx, t1.xyzw, s0
					  mov r5.xyz, v2.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v2.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r2.xyz, r3.xyzx, v5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.x, -cb0[4].y, l(0.960000), l(0.960000)
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.xyz, r2.xyzx, r0.xyzx
					exp o3.xyz, -r1.xyzx
					mov o0.xyz, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.w, cb0[4].x
					mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v3.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.w, cb2[0].z, l(0.500000)
					  mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.w
					  min r2.x, r2.y, r0.w
					  sample r3.xyzw, r2.xzwx, t1.xyzw, s0
					  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t1.xyzw, s0
					  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r2.xyzw, r2.xyzx, t1.xyzw, s0
					  mov r5.xyz, v2.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v2.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r2.xyz, r3.xyzx, v5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.x, -cb0[4].y, l(0.960000), l(0.960000)
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.xyz, r2.xyzx, r0.xyzx
					exp o3.xyz, -r1.xyzx
					mov o0.xyz, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.w, cb0[4].x
					mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v3.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.w, cb2[0].z, l(0.500000)
					  mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.w
					  min r2.x, r2.y, r0.w
					  sample r3.xyzw, r2.xzwx, t1.xyzw, s0
					  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t1.xyzw, s0
					  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r2.xyzw, r2.xyzx, t1.xyzw, s0
					  mov r5.xyz, v2.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v2.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r2.xyz, r3.xyzx, v5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.x, -cb0[4].y, l(0.960000), l(0.960000)
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o3.xyz, r2.xyzx, r0.xyzx
					mov o0.xyz, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.w, cb0[4].x
					mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v3.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.w, cb2[0].z, l(0.500000)
					  mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.w
					  min r2.x, r2.y, r0.w
					  sample r3.xyzw, r2.xzwx, t1.xyzw, s0
					  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t1.xyzw, s0
					  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r2.xyzw, r2.xyzx, t1.xyzw, s0
					  mov r5.xyz, v2.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v2.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r2.xyz, r3.xyzx, v5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.x, -cb0[4].y, l(0.960000), l(0.960000)
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o3.xyz, r2.xyzx, r0.xyzx
					mov o0.xyz, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.w, cb0[4].x
					mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			LOD 200
			Tags { "LIGHTMODE" = "META" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 213813
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_temps 3
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[5].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[6].x
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[6].yyyy
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[5].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[6].x
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[6].yyyy
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	CustomEditor "ToonyStandardGUI"
}