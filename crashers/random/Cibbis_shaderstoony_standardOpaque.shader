Shader "Cibbis shaders/toony standard/Opaque" {
	Properties {
		_Color ("Color", Vector) = (1,1,1,1)
		_MainTex ("Albedo (RGB)", 2D) = "white" {}
		[Normal] _BumpMap ("Normal Map", 2D) = "bump" {}
		_BumpScale ("Normal Scale", Float) = 1
		_EmissionMap ("Emission Map", 2D) = "white" {}
		[HDR] _EmissionColor ("Emission Color", Vector) = (0,0,0,1)
		_Ramp ("Ramp Texture", 2D) = "white" {}
		_RampColor ("Ramp Color", Vector) = (1,1,1,1)
		_ShadowIntensity ("Shadow Intensity", Range(0, 1)) = 0.4
		_RampOffset ("Ramp Offset", Range(-1, 1)) = 0
		_FakeLightColor ("Fake Light Color", Vector) = (1,1,1,1)
		_FakeLightX ("Fake Light X", Range(-1, 1)) = 1
		_FakeLightY ("Fake Light Y", Range(-1, 1)) = 0.7
		_FakeLightZ ("Fake Light Z", Range(-1, 1)) = 0
		_RimStrength ("Rim Strength", Range(0, 1)) = 0
		_RimSharpness ("Rim Sharpness", Range(0, 1)) = 0
		_RimIntensity ("Rim Intensity", Range(-1, 1)) = 0
		_Metallic ("Metallic", Range(0, 1)) = 0
		_MetallicMap ("Metallic Map", 2D) = "white" {}
		_Glossiness ("Smoothness", Range(0, 1)) = 0
		_GlossinessMap ("Smoothness Map", 2D) = "white" {}
		_Matcap ("Matcap", 2D) = "white" {}
		_Cubemap ("Cubemap", Cube) = "" {}
		_HighlightPattern ("Highlight Pattern", 2D) = "white" {}
		_HighlightRamp ("Highlight Ramp Texture", 2D) = "white" {}
		_HighlightRampColor ("Highlight Ramp Color", Vector) = (1,1,1,1)
		_HighlightRampOffset ("Highlight Ramp Offset", Range(-1, 1)) = 0
		_HighlightIntensity ("Highlight Intensity", Range(0, 10)) = 1
		_DetailMask ("Detail Mask", 2D) = "white" {}
		_DetailTexture ("Albedo (RGB)", 2D) = "white" {}
		_DetailColor ("Color", Vector) = (1,1,1,1)
		[Normal] _DetailBumpMap ("Detail Normal Map", 2D) = "bump" {}
		_DetailBumpScale ("Detail Normal Scale", Float) = 1
		_Cutoff ("Alpha cutoff", Range(0, 1)) = 0.5
		[Enum(UnityEngine.Rendering.CullMode)] _Cull ("Cull Mode", Float) = 2
		[HideInInspector] _Mode ("__mode", Float) = 0
		[HideInInspector] _IndirectSpecular ("__IndirectSpecular", Float) = 0
		[HideInInspector] _Workflow ("__Workflow", Float) = 0
		[HideInInspector] _SrcBlend ("__src", Float) = 1
		[HideInInspector] _DstBlend ("__dst", Float) = 0
		[HideInInspector] _ZWrite ("__zw", Float) = 1
	}
	SubShader {
		LOD 100
		Tags { "QUEUE" = "Geometry" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			LOD 100
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Cull Off
			GpuProgramID 43983
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[21].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					eq r0.x, cb3[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r0.xyz, r0.xxxx, r4.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb3[6].xyzx
					  mul r0.yzw, r0.xxyz, cb3[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t3.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r4.xxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb2[0].xyzx
					movc r3.xyz, r1.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.x, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r0.x, r0.x, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.x, r0.x, r3.y, r3.x
					sample r3.xyzw, r0.xxxx, t2.xyzw, s3
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.x, -cb0[17].x, l(1.000000)
					add r3.w, -r0.x, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r1.xyzx
					dp2 r1.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r2.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb3[0].x
					add r1.xyz, -r0.yzwy, cb2[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[21].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					eq r0.x, cb4[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r0.xyz, r0.xxxx, r4.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb4[6].xyzx
					  mul r0.yzw, r0.xxyz, cb4[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t3.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb1[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r4.xxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb1[0].xyzx
					movc r3.xyz, r1.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.x, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r0.x, r0.x, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.x, r0.x, r3.y, r3.x
					sample r3.xyzw, r0.xxxx, t2.xyzw, s3
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.x, -cb0[17].x, l(1.000000)
					add r3.w, -r0.x, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r1.xyzx
					dp2 r1.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb1[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r2.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb4[2].xxyz
					  mad r6.yzw, cb4[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb4[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb4[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r6.yyzw, cb4[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb2[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb3[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb3[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb3[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb3[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb3[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb3[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb3[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb3[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb3[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb3[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t5.xyzw, s5
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t6.xyzw, s2
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb5[2].xxyz
					  mad r6.yzw, cb5[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb5[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb5[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r6.yyzw, cb5[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb1[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb4[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb4[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb4[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb4[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb4[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb4[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb4[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb4[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb4[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb4[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb4[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t5.xyzw, s5
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t6.xyzw, s2
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb4[2].xxyz
					  mad r7.yzw, cb4[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb4[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb4[4].xxyz
					  movc r7.yzw, r2.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r7.yyzw, cb4[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb2[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb3[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb3[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb3[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb3[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb3[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb3[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb3[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb3[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb3[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb3[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t5.xyzw, s4
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t6.xyzw, s5
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					mad r0.y, r7.x, cb0[18].x, -r0.y
					add_sat r0.y, r0.y, l(1.000000)
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r7.yzw, r2.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb1[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb4[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb4[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb4[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb4[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb4[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb4[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb4[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb4[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb4[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb4[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb4[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t5.xyzw, s4
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t6.xyzw, s5
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					mad r0.y, r7.x, cb0[18].x, -r0.y
					add_sat r0.y, r0.y, l(1.000000)
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[21].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					eq r0.x, cb3[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r0.xyz, r0.xxxx, r4.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb3[6].xyzx
					  mul r0.yzw, r0.xxyz, cb3[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t3.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r4.xxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb2[0].xyzx
					movc r3.xyz, r1.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.x, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r0.x, r0.x, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.x, r0.x, r3.y, r3.x
					sample r3.xyzw, r0.xxxx, t2.xyzw, s3
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.x, -cb0[17].x, l(1.000000)
					add r3.w, -r0.x, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r1.xyzx
					dp2 r1.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r2.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb3[0].x
					add r1.xyz, -r0.yzwy, cb2[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[21].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					eq r0.x, cb4[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r0.xyz, r0.xxxx, r4.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb4[6].xyzx
					  mul r0.yzw, r0.xxyz, cb4[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t3.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb1[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r4.xxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb1[0].xyzx
					movc r3.xyz, r1.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.x, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r0.x, r0.x, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.x, r0.x, r3.y, r3.x
					sample r3.xyzw, r0.xxxx, t2.xyzw, s3
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.x, -cb0[17].x, l(1.000000)
					add r3.w, -r0.x, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r1.xyzx
					dp2 r1.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb1[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r2.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r6.yzw, r0.xxyz, -cb3[25].xxyz
					dp3 r3.w, r6.yzwy, r6.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb6[2].xxyz
					  mad r6.yzw, cb6[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb6[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb6[4].xxyz
					  movc r6.yzw, r5.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r6.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r6.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r6.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb2[46].xyzw
					div r6.yz, v5.xxyx, v5.wwww
					sample r9.xyzw, r6.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb5[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t6.xyzw, s6
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					mad r0.y, r7.x, cb0[18].x, -r0.y
					add_sat r0.y, r0.y, l(1.000000)
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb4[0].x
					add r1.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					ishl r2.w, cb4[0].x, l(2)
					mov r9.x, cb3[r2.w + 8].z
					mov r9.y, cb3[r2.w + 9].z
					mov r9.z, cb3[r2.w + 10].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r6.yzw, r0.xxyz, -cb2[25].xxyz
					dp3 r3.w, r6.yzwy, r6.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb2[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb6[2].xxyz
					  mad r6.yzw, cb6[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb6[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb6[4].xxyz
					  movc r6.yzw, r5.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r6.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r6.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r6.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb1[46].xyzw
					div r6.yz, v5.xxyx, v5.wwww
					sample r9.xyzw, r6.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb5[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t6.xyzw, s6
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r7.yzw, r0.xxyz, -cb3[25].xxyz
					dp3 r3.w, r7.yzwy, r7.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb6[2].xxyz
					  mad r7.yzw, cb6[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb6[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb6[4].xxyz
					  movc r7.yzw, r5.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r7.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r7.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r7.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb2[46].xyzw
					div r7.yz, v5.xxyx, v5.wwww
					sample r9.xyzw, r7.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb5[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t6.xyzw, s5
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t7.xyzw, s6
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb4[0].x
					add r1.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					ishl r2.w, cb4[0].x, l(2)
					mov r9.x, cb3[r2.w + 8].z
					mov r9.y, cb3[r2.w + 9].z
					mov r9.z, cb3[r2.w + 10].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r7.yzw, r0.xxyz, -cb2[25].xxyz
					dp3 r3.w, r7.yzwy, r7.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb2[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb6[2].xxyz
					  mad r7.yzw, cb6[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb6[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb6[4].xxyz
					  movc r7.yzw, r5.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r7.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r7.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r7.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb1[46].xyzw
					div r7.yz, v5.xxyx, v5.wwww
					sample r9.xyzw, r7.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb5[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t6.xyzw, s5
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t7.xyzw, s6
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r3.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r0.x, r4.xyxx, r4.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r4.z, r0.x
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r0.x, r1.xyzx, r5.xyzx
					add r1.xyz, r0.yzwy, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.x, r1.x
					mad r0.x, cb3[25].w, r1.x, r0.x
					mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v3.wwww, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.wwww, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v4.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r0.yzw, r1.yyyy, r5.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r0.yyzw, cb5[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb2[46].xyzw
					div r0.zw, v5.xxxy, v5.wwww
					sample r5.xyzw, r0.zwzz, t2.xyzw, s1
					add_sat r0.x, r0.x, r5.x
					min r0.y, r0.x, r0.y
					movc r0.x, r1.x, r0.y, r0.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.xxyz
					mul r1.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r1.xyz, r1.xyzx, r4.xyzx
					max r0.x, r1.y, r1.x
					max r0.x, r1.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.x, cb2[0].xyzx, cb2[0].xyzx
					ne r1.x, r1.x, l(0.000000)
					ieq r1.x, r1.x, l(0)
					eq r1.y, cb0[4].y, l(1.000000)
					and r1.x, r1.y, r1.x
					mov r1.yzw, cb2[0].xxyz
					movc r1.yzw, r1.xxxx, cb0[23].xxyz, r1.yyzw
					movc r0.x, r1.x, l(1.000000), r0.x
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r1.y, r0.yzwy, r1.yzwy
					min r0.x, r0.x, r1.y
					max r1.y, cb0[17].y, l(0.000000)
					add r1.z, cb0[17].y, l(1.000000)
					max r1.z, r1.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r1.z, -r1.y, r1.z
					mad r0.x, r0.x, r1.z, r1.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s4
					mul r1.yzw, r4.xxyz, cb0[19].xxyz
					add r0.x, -cb0[17].x, l(1.000000)
					add r2.w, -r0.x, l(1.000000)
					mad r1.yzw, r1.yyzw, r2.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb2[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r1.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r3.xxyz
					mul r1.yzw, r0.yyzw, cb0[22].xxyz
					movc r0.yzw, r1.xxxx, r1.yyzw, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb4[0].x
					add r1.xyz, -r0.yzwy, cb3[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r3.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r0.x, r4.xyxx, r4.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r4.z, r0.x
					ishl r0.x, cb4[0].x, l(2)
					mov r5.x, cb3[r0.x + 8].z
					mov r5.y, cb3[r0.x + 9].z
					mov r5.z, cb3[r0.x + 10].z
					dp3 r0.x, r1.xyzx, r5.xyzx
					add r1.xyz, r0.yzwy, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.x, r1.x
					mad r0.x, cb2[25].w, r1.x, r0.x
					mad_sat r0.x, r0.x, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v3.wwww, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.wwww, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v4.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r0.yzw, r1.yyyy, r5.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r0.yyzw, cb5[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					div r0.zw, v5.xxxy, v5.wwww
					sample r5.xyzw, r0.zwzz, t2.xyzw, s1
					add_sat r0.x, r0.x, r5.x
					min r0.y, r0.x, r0.y
					movc r0.x, r1.x, r0.y, r0.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.xxyz
					mul r1.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r1.xyz, r1.xyzx, r4.xyzx
					max r0.x, r1.y, r1.x
					max r0.x, r1.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.x, cb1[0].xyzx, cb1[0].xyzx
					ne r1.x, r1.x, l(0.000000)
					ieq r1.x, r1.x, l(0)
					eq r1.y, cb0[4].y, l(1.000000)
					and r1.x, r1.y, r1.x
					mov r1.yzw, cb1[0].xxyz
					movc r1.yzw, r1.xxxx, cb0[23].xxyz, r1.yyzw
					movc r0.x, r1.x, l(1.000000), r0.x
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r1.y, r0.yzwy, r1.yzwy
					min r0.x, r0.x, r1.y
					max r1.y, cb0[17].y, l(0.000000)
					add r1.z, cb0[17].y, l(1.000000)
					max r1.z, r1.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r1.z, -r1.y, r1.z
					mad r0.x, r0.x, r1.z, r1.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s4
					mul r1.yzw, r4.xxyz, cb0[19].xxyz
					add r0.x, -cb0[17].x, l(1.000000)
					add r2.w, -r0.x, l(1.000000)
					mad r1.yzw, r1.yyzw, r2.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb1[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r1.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r3.xxyz
					mul r1.yzw, r0.yyzw, cb0[22].xxyz
					movc r0.yzw, r1.xxxx, r1.yyzw, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r6.yzw, r0.xxyz, -cb3[25].xxyz
					dp3 r3.w, r6.yzwy, r6.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb6[2].xxyz
					  mad r6.yzw, cb6[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb6[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb6[4].xxyz
					  movc r6.yzw, r5.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r6.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r6.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r6.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb2[46].xyzw
					div r6.yz, v6.xxyx, v6.wwww
					sample r9.xyzw, r6.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb5[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t6.xyzw, s6
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb4[0].x
					add r1.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					ishl r2.w, cb4[0].x, l(2)
					mov r9.x, cb3[r2.w + 8].z
					mov r9.y, cb3[r2.w + 9].z
					mov r9.z, cb3[r2.w + 10].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r6.yzw, r0.xxyz, -cb2[25].xxyz
					dp3 r3.w, r6.yzwy, r6.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb2[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb6[2].xxyz
					  mad r6.yzw, cb6[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb6[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb6[4].xxyz
					  movc r6.yzw, r5.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r6.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r6.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r6.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb1[46].xyzw
					div r6.yz, v6.xxyx, v6.wwww
					sample r9.xyzw, r6.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb5[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t6.xyzw, s6
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r7.yzw, r0.xxyz, -cb3[25].xxyz
					dp3 r3.w, r7.yzwy, r7.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb6[2].xxyz
					  mad r7.yzw, cb6[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb6[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb6[4].xxyz
					  movc r7.yzw, r5.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r7.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r7.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r7.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb2[46].xyzw
					div r7.yz, v6.xxyx, v6.wwww
					sample r9.xyzw, r7.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb5[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t6.xyzw, s5
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t7.xyzw, s6
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb4[0].x
					add r1.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					ishl r2.w, cb4[0].x, l(2)
					mov r9.x, cb3[r2.w + 8].z
					mov r9.y, cb3[r2.w + 9].z
					mov r9.z, cb3[r2.w + 10].z
					dp3 r2.w, r1.xyzx, r9.xyzx
					add r7.yzw, r0.xxyz, -cb2[25].xxyz
					dp3 r3.w, r7.yzwy, r7.yzwy
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb2[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.w, cb6[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb6[2].xxyz
					  mad r7.yzw, cb6[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb6[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb6[4].xxyz
					  movc r7.yzw, r5.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb6[6].xxyz
					  mul r9.yzw, r7.yyzw, cb6[5].xxyz
					  mad r5.w, r9.y, l(0.250000), l(0.750000)
					  mad r7.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r9.x, r5.w, r7.y
					  sample r9.xyzw, r9.xzwx, t10.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r9.xyzw, cb1[46].xyzw
					div r7.yz, v6.xxyx, v6.wwww
					sample r9.xyzw, r7.yzyy, t5.xyzw, s2
					add_sat r2.w, r2.w, r9.x
					min r5.w, r2.w, r5.w
					movc r2.w, r3.w, r5.w, r2.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t8.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb5[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb5[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb5[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t9.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb5[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t6.xyzw, s5
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t7.xyzw, s6
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r3.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r0.x, r4.xyxx, r4.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r4.z, r0.x
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r0.x, r1.xyzx, r5.xyzx
					add r1.xyz, r0.yzwy, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.x, r1.x
					mad r0.x, cb3[25].w, r1.x, r0.x
					mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v3.wwww, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.wwww, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v4.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r0.yzw, r1.yyyy, r5.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r0.yyzw, cb5[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb2[46].xyzw
					div r0.zw, v6.xxxy, v6.wwww
					sample r5.xyzw, r0.zwzz, t2.xyzw, s1
					add_sat r0.x, r0.x, r5.x
					min r0.y, r0.x, r0.y
					movc r0.x, r1.x, r0.y, r0.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.xxyz
					mul r1.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r1.xyz, r1.xyzx, r4.xyzx
					max r0.x, r1.y, r1.x
					max r0.x, r1.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.x, cb2[0].xyzx, cb2[0].xyzx
					ne r1.x, r1.x, l(0.000000)
					ieq r1.x, r1.x, l(0)
					eq r1.y, cb0[4].y, l(1.000000)
					and r1.x, r1.y, r1.x
					mov r1.yzw, cb2[0].xxyz
					movc r1.yzw, r1.xxxx, cb0[23].xxyz, r1.yyzw
					movc r0.x, r1.x, l(1.000000), r0.x
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r1.y, r0.yzwy, r1.yzwy
					min r0.x, r0.x, r1.y
					max r1.y, cb0[17].y, l(0.000000)
					add r1.z, cb0[17].y, l(1.000000)
					max r1.z, r1.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r1.z, -r1.y, r1.z
					mad r0.x, r0.x, r1.z, r1.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s4
					mul r1.yzw, r4.xxyz, cb0[19].xxyz
					add r0.x, -cb0[17].x, l(1.000000)
					add r2.w, -r0.x, l(1.000000)
					mad r1.yzw, r1.yyzw, r2.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb2[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r1.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r3.xxyz
					mul r1.yzw, r0.yyzw, cb0[22].xxyz
					movc r0.yzw, r1.xxxx, r1.yyzw, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb4[0].x
					add r1.xyz, -r0.yzwy, cb3[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r3.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r0.x, r4.xyxx, r4.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r4.z, r0.x
					ishl r0.x, cb4[0].x, l(2)
					mov r5.x, cb3[r0.x + 8].z
					mov r5.y, cb3[r0.x + 9].z
					mov r5.z, cb3[r0.x + 10].z
					dp3 r0.x, r1.xyzx, r5.xyzx
					add r1.xyz, r0.yzwy, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.x, r1.x
					mad r0.x, cb2[25].w, r1.x, r0.x
					mad_sat r0.x, r0.x, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v3.wwww, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.wwww, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v4.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r0.yzw, r1.yyyy, r5.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r0.yyzw, cb5[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					div r0.zw, v6.xxxy, v6.wwww
					sample r5.xyzw, r0.zwzz, t2.xyzw, s1
					add_sat r0.x, r0.x, r5.x
					min r0.y, r0.x, r0.y
					movc r0.x, r1.x, r0.y, r0.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.xxyz
					mul r1.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r1.xyz, r1.xyzx, r4.xyzx
					max r0.x, r1.y, r1.x
					max r0.x, r1.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.x, cb1[0].xyzx, cb1[0].xyzx
					ne r1.x, r1.x, l(0.000000)
					ieq r1.x, r1.x, l(0)
					eq r1.y, cb0[4].y, l(1.000000)
					and r1.x, r1.y, r1.x
					mov r1.yzw, cb1[0].xxyz
					movc r1.yzw, r1.xxxx, cb0[23].xxyz, r1.yyzw
					movc r0.x, r1.x, l(1.000000), r0.x
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r1.y, r0.yzwy, r1.yzwy
					min r0.x, r0.x, r1.y
					max r1.y, cb0[17].y, l(0.000000)
					add r1.z, cb0[17].y, l(1.000000)
					max r1.z, r1.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r1.z, -r1.y, r1.z
					mad r0.x, r0.x, r1.z, r1.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s4
					mul r1.yzw, r4.xxyz, cb0[19].xxyz
					add r0.x, -cb0[17].x, l(1.000000)
					add r2.w, -r0.x, l(1.000000)
					mad r1.yzw, r1.yyzw, r2.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb1[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r1.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r3.xxyz
					mul r1.yzw, r0.yyzw, cb0[22].xxyz
					movc r0.yzw, r1.xxxx, r1.yyzw, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb4[2].xxyz
					  mad r6.yzw, cb4[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb4[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb4[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r6.yyzw, cb4[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb2[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb3[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb3[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb3[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb3[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb3[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb3[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb3[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb3[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb3[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb3[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t5.xyzw, s5
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t6.xyzw, s2
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r6.yzw, v3.wwww, cb5[2].xxyz
					  mad r6.yzw, cb5[1].xxyz, v2.wwww, r6.yyzw
					  mad r6.yzw, cb5[3].xxyz, v4.wwww, r6.yyzw
					  add r6.yzw, r6.yyzw, cb5[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, r0.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r6.yyzw, cb5[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb1[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r6.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r7.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb4[2].w
					if_nz r2.w
					  dp3 r2.w, r6.yzwy, r6.yzwy
					  rsq r2.w, r2.w
					  mul r8.yzw, r2.wwww, r6.yyzw
					  add r9.xyz, -r0.xyzx, cb4[0].xyzx
					  div r9.xyz, r9.xyzx, r8.yzwy
					  add r10.xyz, -r0.xyzx, cb4[1].xyzx
					  div r10.xyz, r10.xyzx, r8.yzwy
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.yzwy
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r8.yzw, r8.yyzw, r2.wwww, r9.xxyz
					else 
					  mov r8.yzw, r6.yyzw
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r8.yzwy, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb4[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb4[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb4[3].x
					mul r8.yzw, r9.xxyz, r5.wwww
					lt r9.w, cb4[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb4[6].w
					  if_nz r9.w
					    dp3 r9.w, r6.yzwy, r6.yzwy
					    rsq r9.w, r9.w
					    mul r10.xyz, r6.yzwy, r9.wwww
					    add r11.xyz, -r0.xyzx, cb4[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb4[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r9.w, r11.y, r11.x
					    min r9.w, r11.z, r9.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r6.yzw, r10.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r10.xyzw, r6.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r10.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r10.xyzx, r0.xxxx
					  mad r6.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r8.yzw, cb4[1].wwww, r6.yyzw, r0.xxyz
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r7.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r6.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r10.xyz, cb0[23].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r2.w, cb0[17].y, l(0.000000)
					add r5.w, cb0[17].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r5.w, -r2.w, r5.w
					mad r0.z, r0.z, r5.w, r2.w
					sample r9.xyzw, r0.zzzz, t5.xyzw, s5
					mul r7.yzw, r9.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r7.yzw, r7.yyzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r6.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					max r2.y, cb0[8].x, l(0.000000)
					add r2.z, cb0[8].x, l(1.000000)
					max r2.z, r2.z, l(0.000000)
					min r2.w, r2.x, l(2.000000)
					mul r2.w, r2.w, l(0.500000)
					add r2.z, -r2.y, r2.z
					mad r2.y, r2.w, r2.z, r2.y
					sample r5.xyzw, r2.yyyy, t6.xyzw, s2
					mul r2.yzw, r5.xxyz, cb0[8].yyzw
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r8.yzwy
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r7.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r7.yyzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r7.yzwy, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb4[2].xxyz
					  mad r7.yzw, cb4[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb4[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb4[4].xxyz
					  movc r7.yzw, r2.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r7.yyzw, cb4[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb2[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb3[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb3[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb3[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb3[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb3[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb3[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb3[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb3[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb3[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb3[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb2[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t5.xyzw, s4
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t6.xyzw, s5
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[21].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r6.x, cb0[18].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r7.yzw, v3.wwww, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v2.wwww, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v4.wwww, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r7.yzw, r2.wwww, r7.yyzw, r0.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r3.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb1[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r3.w, r9.xyzx, r9.xyzx
					rsq r3.w, r3.w
					mul r5.xyz, r3.wwww, r9.xyzx
					mad r3.w, -r7.x, cb0[18].x, l(1.000000)
					dp3 r5.w, -r2.xyzx, r5.xyzx
					add r5.w, r5.w, r5.w
					mad r7.yzw, r5.xxyz, -r5.wwww, -r2.xxyz
					mul r8.yzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb4[2].w
					if_nz r2.w
					  dp3 r2.w, r7.yzwy, r7.yzwy
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r7.yzwy
					  add r10.xyz, -r0.xyzx, cb4[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb4[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r7.yzwy
					endif 
					mad r2.w, -r3.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r3.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t7.xyzw, s0, r2.w
					add r5.w, r9.w, l(-1.000000)
					mad r5.w, cb4[3].w, r5.w, l(1.000000)
					log r5.w, r5.w
					mul r5.w, r5.w, cb4[3].y
					exp r5.w, r5.w
					mul r5.w, r5.w, cb4[3].x
					mul r10.xyz, r9.xyzx, r5.wwww
					lt r9.w, cb4[1].w, l(0.999990)
					if_nz r9.w
					  lt r9.w, l(0.000000), cb4[6].w
					  if_nz r9.w
					    dp3 r9.w, r7.yzwy, r7.yzwy
					    rsq r9.w, r9.w
					    mul r11.xyz, r7.yzwy, r9.wwww
					    add r12.xyz, -r0.xyzx, cb4[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb4[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r9.w, r12.y, r12.x
					    min r9.w, r12.z, r9.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r7.yzw, r11.xxyz, r9.wwww, r0.xxyz
					  endif 
					  sample_l r11.xyzw, r7.yzwy, t8.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r7.yzw, r5.wwww, r9.xxyz, -r0.xxyz
					  mad r10.xyz, cb4[1].wwww, r7.yzwy, r0.xyzx
					endif 
					add r0.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.xyz, r8.yzwy, r0.xyzx
					max r0.x, r0.y, r0.x
					max r0.x, r0.z, r0.x
					round_ne r9.w, r0.x
					dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
					ne r0.x, r0.x, l(0.000000)
					ieq r0.x, r0.x, l(0)
					eq r0.y, cb0[4].y, l(1.000000)
					and r0.x, r0.y, r0.x
					movc r7.yzw, r0.xxxx, cb0[23].xxyz, cb1[0].xxyz
					mov r11.xyz, cb0[23].xyzx
					mov r11.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r0.xxxx, r11.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r0.y, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r0.yyyy, r4.xyzx
					dp3 r0.z, r5.xyzx, r9.xyzx
					min r0.z, r9.w, r0.z
					max r8.yz, cb0[17].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.z, r0.z, l(1.000000)
					mul r0.z, r0.z, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r0.z, r0.z, r9.x, r8.y
					sample r11.xyzw, r0.zzzz, t5.xyzw, s4
					mul r9.xzw, r11.xxyz, cb0[19].xxyz
					add r0.z, -cb0[17].x, l(1.000000)
					add r2.w, -r0.z, l(1.000000)
					mad r9.xzw, r9.xxzw, r2.wwww, r0.zzzz
					mad r1.xyz, r1.xyzx, r0.wwww, r7.yzwy
					dp3 r0.z, r1.xyzx, r1.xyzx
					max r0.z, r0.z, l(0.001000)
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r5.xyzx, r2.xyzx
					dp3_sat r0.w, r5.xyzx, r7.yzwy
					dp3_sat r2.x, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.w, r3.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.y, |r0.z|, r1.z, r1.y
					mad r1.z, r0.w, r1.z, r1.y
					mul r1.z, |r0.z|, r1.z
					mad r1.z, r0.w, r2.y, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.y, r1.y, r1.y
					mad r2.z, r2.x, r2.y, -r2.x
					mad r2.x, r2.z, r2.x, l(1.000000)
					mul r2.y, r2.y, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r2.y, r2.x
					min r2.y, r2.x, l(2.000000)
					mul r2.y, r2.y, l(0.500000)
					mad r2.y, r2.y, r9.y, r8.z
					sample r5.xyzw, r2.yyyy, t6.xyzw, s5
					mul r2.yzw, r6.yyzw, r5.xxyz
					mad r3.w, -r6.x, cb0[18].y, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r3.w
					mad r2.yzw, r2.yyzw, r1.wwww, -r2.xxxx
					mad r2.xyz, cb0[4].xxxx, r2.yzwy, r2.xxxx
					mul r2.xyz, r8.xxxx, r2.xyzx
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.w, r1.y, r1.y, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					dp3 r1.y, r3.xyzx, r3.xyzx
					ne r1.y, r1.y, l(0.000000)
					and r1.y, r1.y, l(0x3f800000)
					mul r1.yzw, r1.yyyy, r2.xxyz
					add r0.y, -r0.y, l(1.000000)
					mad_sat r0.y, r7.x, cb0[18].x, r0.y
					lt r2.x, l(0.000000), cb0[4].z
					movc r2.xyz, r2.xxxx, cb0[7].xyzx, r10.xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xzwx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r2.w, r5.y, r5.x
					add r2.w, r5.z, r2.w
					mul r2.w, r2.w, l(0.333333)
					mul r5.xyz, r2.wwww, cb0[22].xyzx
					mul r6.xyz, r4.xyzx, cb0[22].xyzx
					movc r5.xyz, r0.xxxx, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r0.xxxx, r6.xyzx, r4.xyzx
					mul r1.yzw, r9.xxzw, r1.yyzw
					mul r1.yzw, r5.xxyz, r1.yyzw
					add r0.x, -r1.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r3.xyzx
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r2.xyz, r9.xzwx, r2.xyzx
					add r0.x, -|r0.z|, l(1.000000)
					mul r0.z, r0.x, r0.x
					mul r0.z, r0.z, r0.z
					mul r0.z, r0.x, r0.z
					add r6.xyz, -r3.xyzx, r0.yyyy
					mad r0.yzw, r0.zzzz, r6.xxyz, r3.xxyz
					mad r1.xyz, r1.yzwy, r5.xyzx, r4.xyzx
					mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			LOD 100
			Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Geometry" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend One One, One One
			ZWrite Off
			Cull Off
			GpuProgramID 83025
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[38], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mad o1.zw, v3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[38], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mad o1.zw, v3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[38], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mad o1.zw, v3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[38], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mad o1.zw, v3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[37], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[37], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					mad o1.zw, v3.xxxy, cb0[28].xxxy, cb0[28].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[27].xyxx, cb0[27].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[31].xyxx, cb0[31].zwzz
					mad o1.zw, v3.xxxy, cb0[32].xxxy, cb0[32].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t2.xyzw, s1
					mul r0.w, r0.w, r4.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r3.w, r1.w, l(1.000000), r0.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r3.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s4
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r3.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb2[45].xyzx
					mad r3.xyz, cb0[2].xyzx, r0.wwww, r3.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t2.xyzw, s1
					mul r0.w, r0.w, r4.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r3.w, r1.w, l(1.000000), r0.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r3.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s4
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r3.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb1[45].xyzx
					mad r3.xyz, cb0[2].xyzx, r0.wwww, r3.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s5
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s6
					sample r7.xyzw, v1.zwzz, t4.xyzw, s7
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r5.yzw, v5.yyyy, cb3[2].xxyz
					  mad r5.yzw, cb3[1].xxyz, v5.xxxx, r5.yyzw
					  mad r5.yzw, cb3[3].xxyz, v5.zzzz, r5.yyzw
					  add r5.yzw, r5.yyzw, cb3[4].xxyz
					  movc r5.yzw, r2.wwww, r5.yyzw, v5.xxyz
					  add r5.yzw, r5.yyzw, -cb3[6].xxyz
					  mul r8.yzw, r5.yyzw, cb3[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t7.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb2[46].xyzw
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r2.w, r5.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r5.yzw, r2.wwww, cb0[23].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r6.y, r4.xyzx, r8.xyzx
					min r6.y, r8.w, r6.y
					max r6.z, cb0[17].y, l(0.000000)
					add r6.w, cb0[17].y, l(1.000000)
					max r6.w, r6.w, l(0.000000)
					add r6.y, r6.y, l(1.000000)
					mul r6.y, r6.y, l(0.500000)
					add r6.w, -r6.z, r6.w
					mad r6.y, r6.y, r6.w, r6.z
					sample r8.xyzw, r6.yyyy, t5.xyzw, s4
					mul r6.yzw, r8.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r6.yzw, r6.yyzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[8].x, l(0.000000)
					add r4.x, cb0[8].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r8.xyzw, r1.zzzz, t6.xyzw, s1
					mul r4.xyz, r8.xyzx, cb0[8].yzwy
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[18].x, r0.z
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r7.xyz, r6.yzwy, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r7.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r6.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r6.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s5
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s6
					sample r7.xyzw, v1.zwzz, t4.xyzw, s7
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r5.yzw, v5.yyyy, cb4[2].xxyz
					  mad r5.yzw, cb4[1].xxyz, v5.xxxx, r5.yyzw
					  mad r5.yzw, cb4[3].xxyz, v5.zzzz, r5.yyzw
					  add r5.yzw, r5.yyzw, cb4[4].xxyz
					  movc r5.yzw, r2.wwww, r5.yyzw, v5.xxyz
					  add r5.yzw, r5.yyzw, -cb4[6].xxyz
					  mul r8.yzw, r5.yyzw, cb4[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t7.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb1[46].xyzw
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r2.w, r5.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r5.yzw, r2.wwww, cb0[23].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r6.y, r4.xyzx, r8.xyzx
					min r6.y, r8.w, r6.y
					max r6.z, cb0[17].y, l(0.000000)
					add r6.w, cb0[17].y, l(1.000000)
					max r6.w, r6.w, l(0.000000)
					add r6.y, r6.y, l(1.000000)
					mul r6.y, r6.y, l(0.500000)
					add r6.w, -r6.z, r6.w
					mad r6.y, r6.y, r6.w, r6.z
					sample r8.xyzw, r6.yyyy, t5.xyzw, s4
					mul r6.yzw, r8.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r6.yzw, r6.yyzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[8].x, l(0.000000)
					add r4.x, cb0[8].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r8.xyzw, r1.zzzz, t6.xyzw, s1
					mul r4.xyz, r8.xyzx, cb0[8].yzwy
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[18].x, r0.z
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r7.xyz, r6.yzwy, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r7.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r6.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r6.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s5
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s6
					sample r7.xyzw, v1.zwzz, t4.xyzw, s7
					mul r5.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb3[2].xxyz
					  mad r6.yzw, cb3[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb3[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb3[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb3[6].xxyz
					  mul r8.yzw, r6.yyzw, cb3[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t7.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb2[46].xyzw
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r2.w, r6.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[23].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r8.xyzx
					min r7.y, r8.w, r7.y
					max r7.zw, cb0[17].yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r8.xy, -r7.zwzz, r8.xyxx
					mad r7.y, r7.y, r8.x, r7.z
					sample r9.xyzw, r7.yyyy, t5.xyzw, s3
					mul r8.xzw, r9.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r8.xzw, r8.xxzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r8.y, r7.w
					sample r9.xyzw, r1.zzzz, t6.xyzw, s4
					mul r4.xyz, r5.yzwy, r9.xyzx
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[18].x, r0.z
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r8.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r6.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r8.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r8.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s1
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s5
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s6
					sample r7.xyzw, v1.zwzz, t4.xyzw, s7
					mul r5.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb4[2].xxyz
					  mad r6.yzw, cb4[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb4[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb4[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb4[6].xxyz
					  mul r8.yzw, r6.yyzw, cb4[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t7.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb1[46].xyzw
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r2.w, r6.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[23].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r8.xyzx
					min r7.y, r8.w, r7.y
					max r7.zw, cb0[17].yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r8.xy, -r7.zwzz, r8.xyxx
					mad r7.y, r7.y, r8.x, r7.z
					sample r9.xyzw, r7.yyyy, t5.xyzw, s3
					mul r8.xzw, r9.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r8.xzw, r8.xxzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r8.y, r7.w
					sample r9.xyzw, r1.zzzz, t6.xyzw, s4
					mul r4.xyz, r5.yzwy, r9.xyzx
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[18].x, r0.z
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r8.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r6.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r8.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r8.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[21].xyzw
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[15].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r2.w
					  sample r3.xyzw, r3.xzwx, t3.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb2[46].xyzw
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r0.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.w, r3.y, r3.x
					max r0.w, r3.z, r0.w
					round_ne r0.w, r0.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r3.x
					mov r3.xyz, cb2[0].xyzx
					movc r3.xyz, r2.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.w, r2.w, l(1.000000), r0.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r2.xyzx, r3.xyzx
					min r0.w, r0.w, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.w, r0.w, l(1.000000)
					mul r0.w, r0.w, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.w, r0.w, r3.y, r3.x
					sample r3.xyzw, r0.wwww, t2.xyzw, s3
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.w, -cb0[17].x, l(1.000000)
					add r3.w, -r0.w, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb2[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r2.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[21].xyzw
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[15].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb4[2].xyzx
					  mad r3.xyz, cb4[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb4[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb4[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb4[6].xyzx
					  mul r3.yzw, r3.xxyz, cb4[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r2.w
					  sample r3.xyzw, r3.xzwx, t3.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r0.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.w, r3.y, r3.x
					max r0.w, r3.z, r0.w
					round_ne r0.w, r0.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r3.x
					mov r3.xyz, cb1[0].xyzx
					movc r3.xyz, r2.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.w, r2.w, l(1.000000), r0.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r2.xyzx, r3.xyzx
					min r0.w, r0.w, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.w, r0.w, l(1.000000)
					mul r0.w, r0.w, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.w, r0.w, r3.y, r3.x
					sample r3.xyzw, r0.wwww, t2.xyzw, s3
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.w, -cb0[17].x, l(1.000000)
					add r3.w, -r0.w, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb1[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r2.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb3[2].xxyz
					  mad r6.yzw, cb3[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb3[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb3[4].xxyz
					  movc r6.yzw, r3.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb3[6].xxyz
					  mul r10.yzw, r6.yyzw, cb3[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r5.w
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb2[46].xyzw
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r6.yz, r9.xxyx, r9.wwww
					add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r6.yzyy, t5.xyzw, s1
					mul r5.w, r5.w, r10.w
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t6.xyzw, s2
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb4[2].xxyz
					  mad r6.yzw, cb4[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb4[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb4[4].xxyz
					  movc r6.yzw, r3.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb4[6].xxyz
					  mul r10.yzw, r6.yyzw, cb4[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r5.w
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb1[46].xyzw
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r6.yz, r9.xxyx, r9.wwww
					add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r6.yzyy, t5.xyzw, s1
					mul r5.w, r5.w, r10.w
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t6.xyzw, s2
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb3[2].xxyz
					  mad r7.yzw, cb3[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb3[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb3[4].xxyz
					  movc r7.yzw, r3.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb3[6].xxyz
					  mul r10.yzw, r7.yyzw, cb3[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r5.w
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb2[46].xyzw
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r7.yz, r9.xxyx, r9.wwww
					add r7.yz, r7.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r7.yzyy, t5.xyzw, s1
					mul r5.w, r5.w, r10.w
					dp3 r7.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r7.yyyy, t6.xyzw, s2
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb4[2].xxyz
					  mad r7.yzw, cb4[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb4[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb4[4].xxyz
					  movc r7.yzw, r3.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb4[6].xxyz
					  mul r10.yzw, r7.yyzw, cb4[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r5.w
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb1[46].xyzw
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r7.yz, r9.xxyx, r9.wwww
					add r7.yz, r7.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r7.yzyy, t5.xyzw, s1
					mul r5.w, r5.w, r10.w
					dp3 r7.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r7.yyyy, t6.xyzw, s2
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xyzw, v5.yyyy, cb0[5].xyzw
					mad r4.xyzw, cb0[4].xyzw, v5.xxxx, r4.xyzw
					mad r4.xyzw, cb0[6].xyzw, v5.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[7].xyzw
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s1
					mul r1.w, r1.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t3.xyzw, s2
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r3.w, r1.w, l(1.000000), r0.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r3.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r3.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb2[45].xyzx
					mad r3.xyz, cb0[2].xyzx, r0.wwww, r3.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xyzw, v5.yyyy, cb0[5].xyzw
					mad r4.xyzw, cb0[4].xyzw, v5.xxxx, r4.xyzw
					mad r4.xyzw, cb0[6].xyzw, v5.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[7].xyzw
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s1
					mul r1.w, r1.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t3.xyzw, s2
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r3.w, r1.w, l(1.000000), r0.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r3.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r3.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb1[45].xyzx
					mad r3.xyz, cb0[2].xyzx, r0.wwww, r3.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb3[2].xxyz
					  mad r7.yzw, cb3[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb3[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb3[4].xxyz
					  movc r7.yzw, r3.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb3[6].xxyz
					  mul r9.yzw, r7.yyzw, cb3[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb2[46].xyzw
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					sample r10.xyzw, r6.yzwy, t6.xyzw, s1
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb4[2].xxyz
					  mad r7.yzw, cb4[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb4[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb4[4].xxyz
					  movc r7.yzw, r3.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r7.yyzw, cb4[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb1[46].xyzw
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					sample r10.xyzw, r6.yzwy, t6.xyzw, s1
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb3[2].xxyz
					  mad r8.yzw, cb3[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb3[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb3[4].xxyz
					  movc r8.yzw, r3.wwww, r8.yyzw, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb3[6].xxyz
					  mul r9.yzw, r8.yyzw, cb3[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb2[46].xyzw
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					sample r10.xyzw, r7.yzwy, t6.xyzw, s1
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb4[2].xxyz
					  mad r8.yzw, cb4[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb4[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb4[4].xxyz
					  movc r8.yzw, r3.wwww, r8.yyzw, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r8.yyzw, cb4[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb1[46].xyzw
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					sample r10.xyzw, r7.yzwy, t6.xyzw, s1
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t2.xyzw, s2
					sample r4.xyzw, r4.xyzx, t3.xyzw, s1
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r3.w, r1.w, l(1.000000), r0.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r3.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r3.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb2[45].xyzx
					mad r3.xyz, cb0[2].xyzx, r0.wwww, r3.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t2.xyzw, s2
					sample r4.xyzw, r4.xyzx, t3.xyzw, s1
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r3.w, r1.w, l(1.000000), r0.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r3.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r3.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb1[45].xyzx
					mad r3.xyz, cb0[2].xyzx, r0.wwww, r3.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					mul r5.yz, v5.yyyy, cb0[5].xxyx
					mad r5.yz, cb0[4].xxyx, v5.xxxx, r5.yyzy
					mad r5.yz, cb0[6].xxyx, v5.zzzz, r5.yyzy
					add r5.yz, r5.yyzy, cb0[7].xxyx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb3[2].xxyz
					  mad r6.yzw, cb3[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb3[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb3[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb3[6].xxyz
					  mul r8.yzw, r6.yyzw, cb3[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb2[46].xyzw
					sample r8.xyzw, r5.yzyy, t5.xyzw, s1
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r8.w, r5.w, r2.w
					mul r5.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[27].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r9.xyzx
					min r7.y, r9.w, r7.y
					max r7.z, cb0[21].y, l(0.000000)
					add r7.w, cb0[21].y, l(1.000000)
					max r7.w, r7.w, l(0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r7.w, -r7.z, r7.w
					mad r7.y, r7.y, r7.w, r7.z
					sample r9.xyzw, r7.yyyy, t6.xyzw, s5
					mul r7.yzw, r9.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r7.yzw, r7.yyzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[12].x, l(0.000000)
					add r4.x, cb0[12].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r9.xyzw, r1.zzzz, t7.xyzw, s2
					mul r4.xyz, r9.xyzx, cb0[12].yzwy
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[22].x, r0.z
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r6.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xyz, r6.xyzx, -cb2[45].xyzx
					mad r6.xyz, cb0[2].xyzx, r8.wwww, r6.xyzx
					mul r8.xyz, r7.yzwy, r6.xyzx
					mul r3.xyz, r3.xyzx, r8.xyzx
					add r1.w, r6.y, r6.x
					add r1.w, r6.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r6.xyz, r1.wwww, cb0[26].xyzx
					mul r8.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r6.xyzx, r5.yzwy
					movc r3.xyz, r2.wwww, r8.xyzx, r3.xyzx
					mul r1.xyz, r7.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r7.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					mul r5.yz, v5.yyyy, cb0[5].xxyx
					mad r5.yz, cb0[4].xxyx, v5.xxxx, r5.yyzy
					mad r5.yz, cb0[6].xxyx, v5.zzzz, r5.yyzy
					add r5.yz, r5.yyzy, cb0[7].xxyx
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb4[2].xxyz
					  mad r6.yzw, cb4[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb4[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb4[4].xxyz
					  movc r6.yzw, r2.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb4[6].xxyz
					  mul r8.yzw, r6.yyzw, cb4[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb1[46].xyzw
					sample r8.xyzw, r5.yzyy, t5.xyzw, s1
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r8.w, r5.w, r2.w
					mul r5.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[27].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r9.xyzx
					min r7.y, r9.w, r7.y
					max r7.z, cb0[21].y, l(0.000000)
					add r7.w, cb0[21].y, l(1.000000)
					max r7.w, r7.w, l(0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r7.w, -r7.z, r7.w
					mad r7.y, r7.y, r7.w, r7.z
					sample r9.xyzw, r7.yyyy, t6.xyzw, s5
					mul r7.yzw, r9.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r7.yzw, r7.yyzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[12].x, l(0.000000)
					add r4.x, cb0[12].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r9.xyzw, r1.zzzz, t7.xyzw, s2
					mul r4.xyz, r9.xyzx, cb0[12].yzwy
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[22].x, r0.z
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r6.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xyz, r6.xyzx, -cb1[45].xyzx
					mad r6.xyz, cb0[2].xyzx, r8.wwww, r6.xyzx
					mul r8.xyz, r7.yzwy, r6.xyzx
					mul r3.xyz, r3.xyzx, r8.xyzx
					add r1.w, r6.y, r6.x
					add r1.w, r6.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r6.xyz, r1.wwww, cb0[26].xyzx
					mul r8.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r6.xyzx, r5.yzwy
					movc r3.xyz, r2.wwww, r8.xyzx, r3.xyzx
					mul r1.xyz, r7.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r7.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					mul r5.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r6.yz, v5.yyyy, cb0[5].xxyx
					mad r6.yz, cb0[4].xxyx, v5.xxxx, r6.yyzy
					mad r6.yz, cb0[6].xxyx, v5.zzzz, r6.yyzy
					add r6.yz, r6.yyzy, cb0[7].xxyx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb3[2].xxyz
					  mad r7.yzw, cb3[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb3[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb3[4].xxyz
					  movc r7.yzw, r2.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb3[6].xxyz
					  mul r8.yzw, r7.yyzw, cb3[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb2[46].xyzw
					sample r8.xyzw, r6.yzyy, t5.xyzw, s1
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r8.w, r6.w, r2.w
					mul r6.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r7.yzw, r2.wwww, cb0[27].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r8.x, r4.xyzx, r9.xyzx
					min r8.x, r9.w, r8.x
					max r8.yz, cb0[21].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[21].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.x, r8.x, l(1.000000)
					mul r8.x, r8.x, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r8.x, r8.x, r9.x, r8.y
					sample r10.xyzw, r8.xxxx, t6.xyzw, s4
					mul r9.xzw, r10.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r9.xzw, r9.xxzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r7.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r7.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r7.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r9.y, r8.z
					sample r10.xyzw, r1.zzzz, t7.xyzw, s5
					mul r4.xyz, r5.yzwy, r10.xyzx
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[22].x, r0.z
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r8.wwww, r5.xyzx
					mul r7.xyz, r9.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[26].xyzx
					mul r7.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, r6.yzwy
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r9.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r9.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					mul r5.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r6.yz, v5.yyyy, cb0[5].xxyx
					mad r6.yz, cb0[4].xxyx, v5.xxxx, r6.yyzy
					mad r6.yz, cb0[6].xxyx, v5.zzzz, r6.yyzy
					add r6.yz, r6.yyzy, cb0[7].xxyx
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb4[2].xxyz
					  mad r7.yzw, cb4[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb4[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb4[4].xxyz
					  movc r7.yzw, r2.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb4[6].xxyz
					  mul r8.yzw, r7.yyzw, cb4[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r4.w
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb1[46].xyzw
					sample r8.xyzw, r6.yzyy, t5.xyzw, s1
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r8.w, r6.w, r2.w
					mul r6.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r7.yzw, r2.wwww, cb0[27].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r8.x, r4.xyzx, r9.xyzx
					min r8.x, r9.w, r8.x
					max r8.yz, cb0[21].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[21].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.x, r8.x, l(1.000000)
					mul r8.x, r8.x, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r8.x, r8.x, r9.x, r8.y
					sample r10.xyzw, r8.xxxx, t6.xyzw, s4
					mul r9.xzw, r10.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r9.xzw, r9.xxzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r7.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r7.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r7.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r9.y, r8.z
					sample r10.xyzw, r1.zzzz, t7.xyzw, s5
					mul r4.xyz, r5.yzwy, r10.xyzx
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r4.w, l(1.000000)
					mad_sat r0.z, r6.x, cb0[22].x, r0.z
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r8.wwww, r5.xyzx
					mul r7.xyz, r9.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[26].xyzx
					mul r7.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, r6.yzwy
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r9.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r9.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyzw, r1.xyzw, cb0[25].xyzw
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[19].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					mul r3.xy, v5.yyyy, cb0[5].xyxx
					mad r3.xy, cb0[4].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[6].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[7].xyxx
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r0.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r4.xyzw, cb2[46].xyzw
					sample r3.xyzw, r3.xyxx, t2.xyzw, s1
					mul r0.w, r0.w, r3.w
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r0.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.w, r3.y, r3.x
					max r0.w, r3.z, r0.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r3.x, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r3.x
					mov r3.xyz, cb2[0].xyzx
					movc r3.xyz, r2.wwww, cb0[27].xyzx, r3.xyzx
					movc r3.w, r2.w, l(1.000000), r0.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r2.xyzx, r3.xyzx
					min r3.x, r3.w, r3.x
					max r3.y, cb0[21].y, l(0.000000)
					add r3.z, cb0[21].y, l(1.000000)
					max r3.z, r3.z, l(0.000000)
					add r3.x, r3.x, l(1.000000)
					mul r3.x, r3.x, l(0.500000)
					add r3.z, -r3.y, r3.z
					mad r3.x, r3.x, r3.z, r3.y
					sample r3.xyzw, r3.xxxx, t3.xyzw, s4
					mul r3.xyz, r3.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r3.xyz, r3.xyzx, r4.xxxx, r3.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r0.yzw, cb0[2].xxyz, r0.wwww, r2.xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[26].xyzx
					movc r0.yzw, r2.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyzw, r1.xyzw, cb0[25].xyzw
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[19].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					mul r3.xy, v5.yyyy, cb0[5].xyxx
					mad r3.xy, cb0[4].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[6].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[7].xyxx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r0.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r0.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
					sample r3.xyzw, r3.xyxx, t2.xyzw, s1
					mul r0.w, r0.w, r3.w
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r0.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.w, r3.y, r3.x
					max r0.w, r3.z, r0.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r3.x, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r3.x
					mov r3.xyz, cb1[0].xyzx
					movc r3.xyz, r2.wwww, cb0[27].xyzx, r3.xyzx
					movc r3.w, r2.w, l(1.000000), r0.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r2.xyzx, r3.xyzx
					min r3.x, r3.w, r3.x
					max r3.y, cb0[21].y, l(0.000000)
					add r3.z, cb0[21].y, l(1.000000)
					max r3.z, r3.z, l(0.000000)
					add r3.x, r3.x, l(1.000000)
					mul r3.x, r3.x, l(0.500000)
					add r3.z, -r3.y, r3.z
					mad r3.x, r3.x, r3.z, r3.y
					sample r3.xyzw, r3.xxxx, t3.xyzw, s4
					mul r3.xyz, r3.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r3.xyz, r3.xyzx, r4.xxxx, r3.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb1[45].xyzx
					mad r0.yzw, cb0[2].xxyz, r0.wwww, r2.xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[26].xyzx
					movc r0.yzw, r2.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					mov r10.x, cb4[9].z
					mov r10.y, cb4[10].z
					mov r10.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r6.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r6.yzwy, r6.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r6.y, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r6.yzw, r6.yyyy, r7.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r6.yyzw, cb5[5].xxyz
					  mad r6.y, r10.y, l(0.250000), l(0.750000)
					  mad r6.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r6.z, r6.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.y, r10.xyzw, cb2[46].xyzw
					mul r10.xyzw, v5.yyyy, cb3[9].xyzw
					mad r10.xyzw, cb3[8].xyzw, v5.xxxx, r10.xyzw
					mad r10.xyzw, cb3[10].xyzw, v5.zzzz, r10.xyzw
					add r10.xyzw, r10.xyzw, cb3[11].xyzw
					div r7.yzw, r10.xxyz, r10.wwww
					sample_c_lz r6.z, r7.yzyy, t10.xxxx, s1, r7.w
					add r6.w, -cb3[24].x, l(1.000000)
					mad r6.z, r6.z, r6.w, cb3[24].x
					add_sat r3.w, r3.w, r6.z
					min r6.y, r3.w, r6.y
					movc r3.w, r5.w, r6.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r6.yz, r9.xxyx, r9.wwww
					add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r6.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					ishl r3.w, cb4[0].x, l(2)
					mov r10.x, cb3[r3.w + 8].z
					mov r10.y, cb3[r3.w + 9].z
					mov r10.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r6.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r6.yzwy, r6.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r6.y, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r6.yzw, r6.yyyy, r7.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r6.yyzw, cb5[5].xxyz
					  mad r6.y, r10.y, l(0.250000), l(0.750000)
					  mad r6.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r6.z, r6.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.y, r10.xyzw, cb1[46].xyzw
					mul r10.xyzw, v5.yyyy, cb2[9].xyzw
					mad r10.xyzw, cb2[8].xyzw, v5.xxxx, r10.xyzw
					mad r10.xyzw, cb2[10].xyzw, v5.zzzz, r10.xyzw
					add r10.xyzw, r10.xyzw, cb2[11].xyzw
					div r7.yzw, r10.xxyz, r10.wwww
					sample_c_lz r6.z, r7.yzyy, t10.xxxx, s1, r7.w
					add r6.w, -cb2[24].x, l(1.000000)
					mad r6.z, r6.z, r6.w, cb2[24].x
					add_sat r3.w, r3.w, r6.z
					min r6.y, r3.w, r6.y
					movc r3.w, r5.w, r6.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r6.yz, r9.xxyx, r9.wwww
					add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r6.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					mov r10.x, cb4[9].z
					mov r10.y, cb4[10].z
					mov r10.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r7.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r10.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r7.z, r7.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r10.xyzw, cb2[46].xyzw
					mul r10.xyzw, v5.yyyy, cb3[9].xyzw
					mad r10.xyzw, cb3[8].xyzw, v5.xxxx, r10.xyzw
					mad r10.xyzw, cb3[10].xyzw, v5.zzzz, r10.xyzw
					add r10.xyzw, r10.xyzw, cb3[11].xyzw
					div r8.yzw, r10.xxyz, r10.wwww
					sample_c_lz r7.z, r8.yzyy, t10.xxxx, s1, r8.w
					add r7.w, -cb3[24].x, l(1.000000)
					mad r7.z, r7.z, r7.w, cb3[24].x
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r7.yz, r9.xxyx, r9.wwww
					add r7.yz, r7.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r7.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r7.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r7.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					ishl r3.w, cb4[0].x, l(2)
					mov r10.x, cb3[r3.w + 8].z
					mov r10.y, cb3[r3.w + 9].z
					mov r10.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r7.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r10.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r7.z, r7.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r10.xyzw, cb1[46].xyzw
					mul r10.xyzw, v5.yyyy, cb2[9].xyzw
					mad r10.xyzw, cb2[8].xyzw, v5.xxxx, r10.xyzw
					mad r10.xyzw, cb2[10].xyzw, v5.zzzz, r10.xyzw
					add r10.xyzw, r10.xyzw, cb2[11].xyzw
					div r8.yzw, r10.xxyz, r10.wwww
					sample_c_lz r7.z, r8.yzyy, t10.xxxx, s1, r8.w
					add r7.w, -cb2[24].x, l(1.000000)
					mad r7.z, r7.z, r7.w, cb2[24].x
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r7.yz, r9.xxyx, r9.wwww
					add r7.yz, r7.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r7.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r7.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r7.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyzw, v5.yyyy, cb0[5].xyzw
					mad r5.xyzw, cb0[4].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[6].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[7].xyzw
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb3[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb2[46].xyzw
					mul r6.xyzw, v5.yyyy, cb3[9].xyzw
					mad r6.xyzw, cb3[8].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb3[10].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb3[11].xyzw
					div r6.xyz, r6.xyzx, r6.wwww
					sample_c_lz r1.z, r6.xyxx, t6.xxxx, s1, r6.z
					add r1.w, -cb3[24].x, l(1.000000)
					mad r1.z, r1.z, r1.w, cb3[24].x
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					lt r1.x, l(0.000000), r5.z
					and r1.x, r1.x, l(0x3f800000)
					div r1.yz, r5.xxyx, r5.wwww
					add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r1.yzyy, t2.xyzw, s2
					mul r1.x, r1.x, r6.w
					dp3 r1.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r1.yyyy, t3.xyzw, s3
					mul r1.x, r1.x, r5.x
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyzw, v5.yyyy, cb0[5].xyzw
					mad r5.xyzw, cb0[4].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[6].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[7].xyzw
					ishl r0.w, cb4[0].x, l(2)
					mov r6.x, cb3[r0.w + 8].z
					mov r6.y, cb3[r0.w + 9].z
					mov r6.z, cb3[r0.w + 10].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb2[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb1[46].xyzw
					mul r6.xyzw, v5.yyyy, cb2[9].xyzw
					mad r6.xyzw, cb2[8].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb2[10].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb2[11].xyzw
					div r6.xyz, r6.xyzx, r6.wwww
					sample_c_lz r1.z, r6.xyxx, t6.xxxx, s1, r6.z
					add r1.w, -cb2[24].x, l(1.000000)
					mad r1.z, r1.z, r1.w, cb2[24].x
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					lt r1.x, l(0.000000), r5.z
					and r1.x, r1.x, l(0x3f800000)
					div r1.yz, r5.xxyx, r5.wwww
					add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r1.yzyy, t2.xyzw, s2
					mul r1.x, r1.x, r6.w
					dp3 r1.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r1.yyyy, t3.xyzw, s3
					mul r1.x, r1.x, r5.x
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb1[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[30].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[24].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[27].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r9.xyzw, v5.yyyy, cb0[10].xyzw
					mad r9.xyzw, cb0[9].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[11].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[12].xyzw
					mov r10.x, cb4[9].z
					mov r10.y, cb4[10].z
					mov r10.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r6.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r6.yzwy, r6.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r6.y, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r6.yzw, r6.yyyy, r7.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r6.yyzw, cb5[5].xxyz
					  mad r6.y, r10.y, l(0.250000), l(0.750000)
					  mad r6.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r6.z, r6.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.y, r10.xyzw, cb2[46].xyzw
					lt r6.z, r3.w, l(0.990000)
					if_nz r6.z
					  mul r10.xyzw, v5.yyyy, cb3[9].xyzw
					  mad r10.xyzw, cb3[8].xyzw, v5.xxxx, r10.xyzw
					  mad r10.xyzw, cb3[10].xyzw, v5.zzzz, r10.xyzw
					  add r10.xyzw, r10.xyzw, cb3[11].xyzw
					  div r7.yzw, r10.xxyz, r10.wwww
					  mad r6.zw, r7.yyyz, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r6.zw, r6.zzzw
					  mad r7.yz, r7.yyzy, cb0[8].zzwz, -r6.zzwz
					  add r10.xyzw, r7.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r11.xw, r10.xxxz, r10.xxxz
					  mad r8.yz, r11.xxwx, l(0.000000, 0.500000, 0.500000, 0.000000), -r7.yyzy
					  add r10.xz, -r7.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r12.xy, r7.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r10.xz, -r12.xxyx, r12.xxyx, r10.xxzx
					  max r7.yz, r7.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.yz, -r7.yyzy, r7.yyzy, r10.yywy
					  mov r12.x, r8.y
					  mov r12.y, r10.x
					  mov r12.z, r7.y
					  mov r12.w, r11.x
					  mul r12.xyzw, r12.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r11.x, r8.z
					  mov r11.y, r10.z
					  mov r11.z, r7.z
					  mul r10.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r11.xyzw, r12.ywyw, r12.xzxz
					  add r13.xyzw, r10.yyww, r10.xxzz
					  div r7.yz, r12.yywy, r11.zzwz
					  add r7.yz, r7.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r8.yz, r10.yywy, r13.yywy
					  add r8.yz, r8.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  mul r10.xy, r7.yzyy, cb0[8].xxxx
					  mul r10.zw, r8.yyyz, cb0[8].yyyy
					  mul r11.xyzw, r11.xyzw, r13.xyzw
					  mad r12.xyzw, r6.zwzw, cb0[8].xyxy, r10.xzyz
					  sample_c_lz r7.y, r12.xyxx, t10.xxxx, s1, r7.w
					  sample_c_lz r7.z, r12.zwzz, t10.xxxx, s1, r7.w
					  mul r7.z, r7.z, r11.y
					  mad r7.y, r11.x, r7.y, r7.z
					  mad r10.xyzw, r6.zwzw, cb0[8].xyxy, r10.xwyw
					  sample_c_lz r6.z, r10.xyxx, t10.xxxx, s1, r7.w
					  mad r6.z, r11.z, r6.z, r7.y
					  sample_c_lz r6.w, r10.zwzz, t10.xxxx, s1, r7.w
					  mad r6.z, r11.w, r6.w, r6.z
					  add r6.w, -cb3[24].x, l(1.000000)
					  mad r6.z, r6.z, r6.w, cb3[24].x
					else 
					  mov r6.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r6.z
					min r6.y, r3.w, r6.y
					movc r3.w, r5.w, r6.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r6.yz, r9.xxyx, r9.wwww
					add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r6.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[13].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[32].xxyz, r0.xxyz
					mov r9.xyz, cb0[32].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[30].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[26].y, l(0.000000)
					add r5.w, cb0[26].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[28].xxyz
					add r3.y, -cb0[26].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[27].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[17].x, l(0.000000)
					add r3.y, cb0[17].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[17].yzwy
					mad r2.z, -r6.x, cb0[27].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[13].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[27].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[13].z
					and r3.xyz, r2.wwww, cb0[16].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[31].xyzx
					mul r7.xyz, r4.xyzx, cb0[31].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[32].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[33].x, l(1.000000)
					mad r0.w, -cb0[33].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[33].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[30].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[24].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[27].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r9.xyzw, v5.yyyy, cb0[10].xyzw
					mad r9.xyzw, cb0[9].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[11].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[12].xyzw
					ishl r3.w, cb4[0].x, l(2)
					mov r10.x, cb3[r3.w + 8].z
					mov r10.y, cb3[r3.w + 9].z
					mov r10.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r6.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r6.yzwy, r6.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r6.y, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r6.yzw, r6.yyyy, r7.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r6.yyzw, cb5[5].xxyz
					  mad r6.y, r10.y, l(0.250000), l(0.750000)
					  mad r6.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r6.z, r6.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.y, r10.xyzw, cb1[46].xyzw
					lt r6.z, r3.w, l(0.990000)
					if_nz r6.z
					  mul r10.xyzw, v5.yyyy, cb2[9].xyzw
					  mad r10.xyzw, cb2[8].xyzw, v5.xxxx, r10.xyzw
					  mad r10.xyzw, cb2[10].xyzw, v5.zzzz, r10.xyzw
					  add r10.xyzw, r10.xyzw, cb2[11].xyzw
					  div r7.yzw, r10.xxyz, r10.wwww
					  mad r6.zw, r7.yyyz, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r6.zw, r6.zzzw
					  mad r7.yz, r7.yyzy, cb0[8].zzwz, -r6.zzwz
					  add r10.xyzw, r7.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r11.xw, r10.xxxz, r10.xxxz
					  mad r8.yz, r11.xxwx, l(0.000000, 0.500000, 0.500000, 0.000000), -r7.yyzy
					  add r10.xz, -r7.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r12.xy, r7.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r10.xz, -r12.xxyx, r12.xxyx, r10.xxzx
					  max r7.yz, r7.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.yz, -r7.yyzy, r7.yyzy, r10.yywy
					  mov r12.x, r8.y
					  mov r12.y, r10.x
					  mov r12.z, r7.y
					  mov r12.w, r11.x
					  mul r12.xyzw, r12.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r11.x, r8.z
					  mov r11.y, r10.z
					  mov r11.z, r7.z
					  mul r10.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r11.xyzw, r12.ywyw, r12.xzxz
					  add r13.xyzw, r10.yyww, r10.xxzz
					  div r7.yz, r12.yywy, r11.zzwz
					  add r7.yz, r7.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r8.yz, r10.yywy, r13.yywy
					  add r8.yz, r8.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  mul r10.xy, r7.yzyy, cb0[8].xxxx
					  mul r10.zw, r8.yyyz, cb0[8].yyyy
					  mul r11.xyzw, r11.xyzw, r13.xyzw
					  mad r12.xyzw, r6.zwzw, cb0[8].xyxy, r10.xzyz
					  sample_c_lz r7.y, r12.xyxx, t10.xxxx, s1, r7.w
					  sample_c_lz r7.z, r12.zwzz, t10.xxxx, s1, r7.w
					  mul r7.z, r7.z, r11.y
					  mad r7.y, r11.x, r7.y, r7.z
					  mad r10.xyzw, r6.zwzw, cb0[8].xyxy, r10.xwyw
					  sample_c_lz r6.z, r10.xyxx, t10.xxxx, s1, r7.w
					  mad r6.z, r11.z, r6.z, r7.y
					  sample_c_lz r6.w, r10.zwzz, t10.xxxx, s1, r7.w
					  mad r6.z, r11.w, r6.w, r6.z
					  add r6.w, -cb2[24].x, l(1.000000)
					  mad r6.z, r6.z, r6.w, cb2[24].x
					else 
					  mov r6.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r6.z
					min r6.y, r3.w, r6.y
					movc r3.w, r5.w, r6.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r6.yz, r9.xxyx, r9.wwww
					add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r6.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[13].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[32].xxyz, r0.xxyz
					mov r9.xyz, cb0[32].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[30].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[26].y, l(0.000000)
					add r5.w, cb0[26].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[28].xxyz
					add r3.y, -cb0[26].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[27].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[17].x, l(0.000000)
					add r3.y, cb0[17].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[17].yzwy
					mad r2.z, -r6.x, cb0[27].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[13].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[27].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[13].z
					and r3.xyz, r2.wwww, cb0[16].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[31].xyzx
					mul r7.xyz, r4.xyzx, cb0[31].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[32].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[33].x, l(1.000000)
					mad r0.w, -cb0[33].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[33].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[30].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[24].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[27].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[26].wwww, cb0[29].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[10].xyzw
					mad r9.xyzw, cb0[9].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[11].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[12].xyzw
					mov r10.x, cb4[9].z
					mov r10.y, cb4[10].z
					mov r10.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r7.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r10.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r7.z, r7.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r10.xyzw, cb2[46].xyzw
					lt r7.z, r3.w, l(0.990000)
					if_nz r7.z
					  mul r10.xyzw, v5.yyyy, cb3[9].xyzw
					  mad r10.xyzw, cb3[8].xyzw, v5.xxxx, r10.xyzw
					  mad r10.xyzw, cb3[10].xyzw, v5.zzzz, r10.xyzw
					  add r10.xyzw, r10.xyzw, cb3[11].xyzw
					  div r8.yzw, r10.xxyz, r10.wwww
					  mad r7.zw, r8.yyyz, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r7.zw, r7.zzzw
					  mad r8.yz, r8.yyzy, cb0[8].zzwz, -r7.zzwz
					  add r10.xyzw, r8.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r11.xw, r10.xxxz, r10.xxxz
					  mad r10.xz, r11.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.yyzy
					  add r12.xy, -r8.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r12.zw, r8.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r12.xy, -r12.zwzz, r12.zwzz, r12.xyxx
					  max r8.yz, r8.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r8.yz, -r8.yyzy, r8.yyzy, r10.yywy
					  mov r13.x, r10.x
					  mov r13.y, r12.x
					  mov r13.z, r8.y
					  mov r13.w, r11.x
					  mul r13.xyzw, r13.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r11.x, r10.z
					  mov r11.y, r12.y
					  mov r11.z, r8.z
					  mul r10.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r11.xyzw, r13.ywyw, r13.xzxz
					  add r12.xyzw, r10.yyww, r10.xxzz
					  div r8.yz, r13.yywy, r11.zzwz
					  add r8.yz, r8.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r10.xy, r10.ywyy, r12.ywyy
					  add r10.xy, r10.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r13.xy, r8.yzyy, cb0[8].xxxx
					  mul r13.zw, r10.xxxy, cb0[8].yyyy
					  mul r10.xyzw, r11.xyzw, r12.xyzw
					  mad r11.xyzw, r7.zwzw, cb0[8].xyxy, r13.xzyz
					  sample_c_lz r8.y, r11.xyxx, t10.xxxx, s1, r8.w
					  sample_c_lz r8.z, r11.zwzz, t10.xxxx, s1, r8.w
					  mul r8.z, r8.z, r10.y
					  mad r8.y, r10.x, r8.y, r8.z
					  mad r11.xyzw, r7.zwzw, cb0[8].xyxy, r13.xwyw
					  sample_c_lz r7.z, r11.xyxx, t10.xxxx, s1, r8.w
					  mad r7.z, r10.z, r7.z, r8.y
					  sample_c_lz r7.w, r11.zwzz, t10.xxxx, s1, r8.w
					  mad r7.z, r10.w, r7.w, r7.z
					  add r7.w, -cb3[24].x, l(1.000000)
					  mad r7.z, r7.z, r7.w, cb3[24].x
					else 
					  mov r7.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r7.yz, r9.xxyx, r9.wwww
					add r7.yz, r7.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r7.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r7.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r7.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[13].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[32].xxyz, r0.xxyz
					mov r9.xyz, cb0[32].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[30].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[26].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[26].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[28].xyzx
					add r3.y, -cb0[26].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[27].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[27].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[13].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[27].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[13].z
					and r3.xyz, r2.wwww, cb0[16].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[31].xyzx
					mul r6.xyz, r4.xyzx, cb0[31].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[32].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[33].x, l(1.000000)
					mad r0.w, -cb0[33].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[33].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[30].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[24].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[27].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[26].wwww, cb0[29].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[10].xyzw
					mad r9.xyzw, cb0[9].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[11].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[12].xyzw
					ishl r3.w, cb4[0].x, l(2)
					mov r10.x, cb3[r3.w + 8].z
					mov r10.y, cb3[r3.w + 9].z
					mov r10.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r10.xyzx
					add r7.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r10.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r10.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r10.x, r7.z, r7.y
					  sample r10.xyzw, r10.xzwx, t9.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r10.xyzw, cb1[46].xyzw
					lt r7.z, r3.w, l(0.990000)
					if_nz r7.z
					  mul r10.xyzw, v5.yyyy, cb2[9].xyzw
					  mad r10.xyzw, cb2[8].xyzw, v5.xxxx, r10.xyzw
					  mad r10.xyzw, cb2[10].xyzw, v5.zzzz, r10.xyzw
					  add r10.xyzw, r10.xyzw, cb2[11].xyzw
					  div r8.yzw, r10.xxyz, r10.wwww
					  mad r7.zw, r8.yyyz, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r7.zw, r7.zzzw
					  mad r8.yz, r8.yyzy, cb0[8].zzwz, -r7.zzwz
					  add r10.xyzw, r8.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r11.xw, r10.xxxz, r10.xxxz
					  mad r10.xz, r11.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.yyzy
					  add r12.xy, -r8.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r12.zw, r8.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r12.xy, -r12.zwzz, r12.zwzz, r12.xyxx
					  max r8.yz, r8.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r8.yz, -r8.yyzy, r8.yyzy, r10.yywy
					  mov r13.x, r10.x
					  mov r13.y, r12.x
					  mov r13.z, r8.y
					  mov r13.w, r11.x
					  mul r13.xyzw, r13.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r11.x, r10.z
					  mov r11.y, r12.y
					  mov r11.z, r8.z
					  mul r10.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r11.xyzw, r13.ywyw, r13.xzxz
					  add r12.xyzw, r10.yyww, r10.xxzz
					  div r8.yz, r13.yywy, r11.zzwz
					  add r8.yz, r8.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r10.xy, r10.ywyy, r12.ywyy
					  add r10.xy, r10.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r13.xy, r8.yzyy, cb0[8].xxxx
					  mul r13.zw, r10.xxxy, cb0[8].yyyy
					  mul r10.xyzw, r11.xyzw, r12.xyzw
					  mad r11.xyzw, r7.zwzw, cb0[8].xyxy, r13.xzyz
					  sample_c_lz r8.y, r11.xyxx, t10.xxxx, s1, r8.w
					  sample_c_lz r8.z, r11.zwzz, t10.xxxx, s1, r8.w
					  mul r8.z, r8.z, r10.y
					  mad r8.y, r10.x, r8.y, r8.z
					  mad r11.xyzw, r7.zwzw, cb0[8].xyxy, r13.xwyw
					  sample_c_lz r7.z, r11.xyxx, t10.xxxx, s1, r8.w
					  mad r7.z, r10.z, r7.z, r8.y
					  sample_c_lz r7.w, r11.zwzz, t10.xxxx, s1, r8.w
					  mad r7.z, r10.w, r7.w, r7.z
					  add r7.w, -cb2[24].x, l(1.000000)
					  mad r7.z, r7.z, r7.w, cb2[24].x
					else 
					  mov r7.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					lt r5.w, l(0.000000), r9.z
					and r5.w, r5.w, l(0x3f800000)
					div r7.yz, r9.xxyx, r9.wwww
					add r7.yz, r7.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r10.xyzw, r7.yzyy, t5.xyzw, s2
					mul r5.w, r5.w, r10.w
					dp3 r7.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r7.yyyy, t6.xyzw, s3
					mul r5.w, r5.w, r9.x
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[13].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[32].xxyz, r0.xxyz
					mov r9.xyz, cb0[32].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[30].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[26].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[26].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[28].xyzx
					add r3.y, -cb0[26].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[27].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[27].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[13].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[27].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[13].z
					and r3.xyz, r2.wwww, cb0[16].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[31].xyzx
					mul r6.xyz, r4.xyzx, cb0[31].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[32].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[33].x, l(1.000000)
					mad r0.w, -cb0[33].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[33].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[30].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[24].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyzw, v5.yyyy, cb0[10].xyzw
					mad r5.xyzw, cb0[9].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[11].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[12].xyzw
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb3[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb2[46].xyzw
					lt r1.z, r0.w, l(0.990000)
					if_nz r1.z
					  mul r6.xyzw, v5.yyyy, cb3[9].xyzw
					  mad r6.xyzw, cb3[8].xyzw, v5.xxxx, r6.xyzw
					  mad r6.xyzw, cb3[10].xyzw, v5.zzzz, r6.xyzw
					  add r6.xyzw, r6.xyzw, cb3[11].xyzw
					  div r6.xyz, r6.xyzx, r6.wwww
					  mad r1.zw, r6.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r1.zw, r1.zzzw
					  mad r6.xy, r6.xyxx, cb0[8].zwzz, -r1.zwzz
					  add r7.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r7.xz, r8.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r6.xxyx
					  add r9.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r9.zw, r6.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r9.xy, -r9.zwzz, r9.zwzz, r9.xyxx
					  max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r6.xy, -r6.xyxx, r6.xyxx, r7.ywyy
					  mov r10.x, r7.x
					  mov r10.y, r9.x
					  mov r10.z, r6.x
					  mov r10.w, r8.x
					  mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r7.z
					  mov r8.y, r9.y
					  mov r8.z, r6.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r10.ywyw, r10.xzxz
					  add r9.xyzw, r7.yyww, r7.xxzz
					  div r6.xy, r10.ywyy, r8.zwzz
					  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r7.xy, r7.ywyy, r9.ywyy
					  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r10.xy, r6.xyxx, cb0[8].xxxx
					  mul r10.zw, r7.xxxy, cb0[8].yyyy
					  mul r7.xyzw, r8.xyzw, r9.xyzw
					  mad r8.xyzw, r1.zwzw, cb0[8].xyxy, r10.xzyz
					  sample_c_lz r2.w, r8.xyxx, t6.xxxx, s1, r6.z
					  sample_c_lz r4.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mul r4.w, r4.w, r7.y
					  mad r2.w, r7.x, r2.w, r4.w
					  mad r8.xyzw, r1.zwzw, cb0[8].xyxy, r10.xwyw
					  sample_c_lz r1.z, r8.xyxx, t6.xxxx, s1, r6.z
					  mad r1.z, r7.z, r1.z, r2.w
					  sample_c_lz r1.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mad r1.z, r7.w, r1.w, r1.z
					  add r1.w, -cb3[24].x, l(1.000000)
					  mad r1.z, r1.z, r1.w, cb3[24].x
					else 
					  mov r1.z, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					lt r1.x, l(0.000000), r5.z
					and r1.x, r1.x, l(0x3f800000)
					div r1.yz, r5.xxyx, r5.wwww
					add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r1.yzyy, t2.xyzw, s2
					mul r1.x, r1.x, r6.w
					dp3 r1.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r1.yyyy, t3.xyzw, s3
					mul r1.x, r1.x, r5.x
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[13].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[32].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[26].y, l(0.000000)
					add r0.z, cb0[26].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[28].xyzx
					add r2.w, -cb0[26].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[31].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[32].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[33].x, l(1.000000)
					mad r0.w, -cb0[33].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[33].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[30].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[24].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyzw, v5.yyyy, cb0[10].xyzw
					mad r5.xyzw, cb0[9].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[11].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[12].xyzw
					ishl r0.w, cb4[0].x, l(2)
					mov r6.x, cb3[r0.w + 8].z
					mov r6.y, cb3[r0.w + 9].z
					mov r6.z, cb3[r0.w + 10].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb2[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb1[46].xyzw
					lt r1.z, r0.w, l(0.990000)
					if_nz r1.z
					  mul r6.xyzw, v5.yyyy, cb2[9].xyzw
					  mad r6.xyzw, cb2[8].xyzw, v5.xxxx, r6.xyzw
					  mad r6.xyzw, cb2[10].xyzw, v5.zzzz, r6.xyzw
					  add r6.xyzw, r6.xyzw, cb2[11].xyzw
					  div r6.xyz, r6.xyzx, r6.wwww
					  mad r1.zw, r6.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r1.zw, r1.zzzw
					  mad r6.xy, r6.xyxx, cb0[8].zwzz, -r1.zwzz
					  add r7.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r7.xz, r8.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r6.xxyx
					  add r9.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r9.zw, r6.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r9.xy, -r9.zwzz, r9.zwzz, r9.xyxx
					  max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r6.xy, -r6.xyxx, r6.xyxx, r7.ywyy
					  mov r10.x, r7.x
					  mov r10.y, r9.x
					  mov r10.z, r6.x
					  mov r10.w, r8.x
					  mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r7.z
					  mov r8.y, r9.y
					  mov r8.z, r6.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r10.ywyw, r10.xzxz
					  add r9.xyzw, r7.yyww, r7.xxzz
					  div r6.xy, r10.ywyy, r8.zwzz
					  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r7.xy, r7.ywyy, r9.ywyy
					  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r10.xy, r6.xyxx, cb0[8].xxxx
					  mul r10.zw, r7.xxxy, cb0[8].yyyy
					  mul r7.xyzw, r8.xyzw, r9.xyzw
					  mad r8.xyzw, r1.zwzw, cb0[8].xyxy, r10.xzyz
					  sample_c_lz r2.w, r8.xyxx, t6.xxxx, s1, r6.z
					  sample_c_lz r4.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mul r4.w, r4.w, r7.y
					  mad r2.w, r7.x, r2.w, r4.w
					  mad r8.xyzw, r1.zwzw, cb0[8].xyxy, r10.xwyw
					  sample_c_lz r1.z, r8.xyxx, t6.xxxx, s1, r6.z
					  mad r1.z, r7.z, r1.z, r2.w
					  sample_c_lz r1.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mad r1.z, r7.w, r1.w, r1.z
					  add r1.w, -cb2[24].x, l(1.000000)
					  mad r1.z, r1.z, r1.w, cb2[24].x
					else 
					  mov r1.z, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					lt r1.x, l(0.000000), r5.z
					and r1.x, r1.x, l(0x3f800000)
					div r1.yz, r5.xxyx, r5.wwww
					add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r1.yzyy, t2.xyzw, s2
					mul r1.x, r1.x, r6.w
					dp3 r1.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r1.yyyy, t3.xyzw, s3
					mul r1.x, r1.x, r5.x
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[13].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[32].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[26].y, l(0.000000)
					add r0.z, cb0[26].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[28].xyzx
					add r2.w, -cb0[26].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb1[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[31].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[32].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[33].x, l(1.000000)
					mad r0.w, -cb0[33].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[33].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					mov r8.x, cb4[9].z
					mov r8.y, cb4[10].z
					mov r8.z, cb4[11].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r5.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r4.w, r5.yzwy, r5.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb3[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.y, cb5[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb5[2].xxyz
					  mad r6.yzw, cb5[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb5[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb5[4].xxyz
					  movc r5.yzw, r5.yyyy, r6.yyzw, v5.xxyz
					  add r5.yzw, r5.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r5.yyzw, cb5[5].xxyz
					  mad r5.y, r8.y, l(0.250000), l(0.750000)
					  mad r5.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r5.z, r5.y
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.y, r8.xyzw, cb2[46].xyzw
					div r5.zw, v6.xxxy, v6.wwww
					sample r8.xyzw, r5.zwzz, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r5.y, r2.w, r5.y
					movc r2.w, r4.w, r5.y, r2.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r2.w, r5.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r5.yzw, r2.wwww, cb0[23].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r6.y, r4.xyzx, r8.xyzx
					min r6.y, r8.w, r6.y
					max r6.z, cb0[17].y, l(0.000000)
					add r6.w, cb0[17].y, l(1.000000)
					max r6.w, r6.w, l(0.000000)
					add r6.y, r6.y, l(1.000000)
					mul r6.y, r6.y, l(0.500000)
					add r6.w, -r6.z, r6.w
					mad r6.y, r6.y, r6.w, r6.z
					sample r8.xyzw, r6.yyyy, t6.xyzw, s5
					mul r6.yzw, r8.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r6.yzw, r6.yyzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[8].x, l(0.000000)
					add r4.x, cb0[8].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r8.xyzw, r1.zzzz, t7.xyzw, s2
					mul r4.xyz, r8.xyzx, cb0[8].yzwy
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[18].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r7.xyz, r6.yzwy, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r7.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r6.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r6.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					ishl r2.w, cb4[0].x, l(2)
					mov r8.x, cb3[r2.w + 8].z
					mov r8.y, cb3[r2.w + 9].z
					mov r8.z, cb3[r2.w + 10].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r5.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r4.w, r5.yzwy, r5.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb2[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.y, cb5[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb5[2].xxyz
					  mad r6.yzw, cb5[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb5[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb5[4].xxyz
					  movc r5.yzw, r5.yyyy, r6.yyzw, v5.xxyz
					  add r5.yzw, r5.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r5.yyzw, cb5[5].xxyz
					  mad r5.y, r8.y, l(0.250000), l(0.750000)
					  mad r5.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r5.z, r5.y
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.y, r8.xyzw, cb1[46].xyzw
					div r5.zw, v6.xxxy, v6.wwww
					sample r8.xyzw, r5.zwzz, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r5.y, r2.w, r5.y
					movc r2.w, r4.w, r5.y, r2.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r2.w, r5.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r5.yzw, r2.wwww, cb0[23].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r6.y, r4.xyzx, r8.xyzx
					min r6.y, r8.w, r6.y
					max r6.z, cb0[17].y, l(0.000000)
					add r6.w, cb0[17].y, l(1.000000)
					max r6.w, r6.w, l(0.000000)
					add r6.y, r6.y, l(1.000000)
					mul r6.y, r6.y, l(0.500000)
					add r6.w, -r6.z, r6.w
					mad r6.y, r6.y, r6.w, r6.z
					sample r8.xyzw, r6.yyyy, t6.xyzw, s5
					mul r6.yzw, r8.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r6.yzw, r6.yyzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[8].x, l(0.000000)
					add r4.x, cb0[8].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r8.xyzw, r1.zzzz, t7.xyzw, s2
					mul r4.xyz, r8.xyzx, cb0[8].yzwy
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[18].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r7.xyz, r6.yzwy, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r7.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r6.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r6.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					mul r5.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mov r8.x, cb4[9].z
					mov r8.y, cb4[10].z
					mov r8.z, cb4[11].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r6.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r4.w, r6.yzwy, r6.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb3[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r6.y, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r6.yzw, r6.yyyy, r7.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r6.yyzw, cb5[5].xxyz
					  mad r6.y, r8.y, l(0.250000), l(0.750000)
					  mad r6.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r6.z, r6.y
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.y, r8.xyzw, cb2[46].xyzw
					div r6.zw, v6.xxxy, v6.wwww
					sample r8.xyzw, r6.zwzz, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r6.y, r2.w, r6.y
					movc r2.w, r4.w, r6.y, r2.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r2.w, r6.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[23].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r8.xyzx
					min r7.y, r8.w, r7.y
					max r7.zw, cb0[17].yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r8.xy, -r7.zwzz, r8.xyxx
					mad r7.y, r7.y, r8.x, r7.z
					sample r9.xyzw, r7.yyyy, t6.xyzw, s4
					mul r8.xzw, r9.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r8.xzw, r8.xxzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r8.y, r7.w
					sample r9.xyzw, r1.zzzz, t7.xyzw, s5
					mul r4.xyz, r5.yzwy, r9.xyzx
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[18].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r8.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r6.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r8.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r8.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[21].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s6
					mul r1.w, r5.x, cb0[18].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s7
					sample r7.xyzw, v1.zwzz, t4.xyzw, s8
					mul r5.yzw, cb0[17].wwww, cb0[20].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					ishl r2.w, cb4[0].x, l(2)
					mov r8.x, cb3[r2.w + 8].z
					mov r8.y, cb3[r2.w + 9].z
					mov r8.z, cb3[r2.w + 10].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r6.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r4.w, r6.yzwy, r6.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb2[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r6.y, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r6.yzw, r6.yyyy, r7.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r6.yyzw, cb5[5].xxyz
					  mad r6.y, r8.y, l(0.250000), l(0.750000)
					  mad r6.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r6.z, r6.y
					  sample r8.xyzw, r8.xzwx, t8.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.y, r8.xyzw, cb1[46].xyzw
					div r6.zw, v6.xxxy, v6.wwww
					sample r8.xyzw, r6.zwzz, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r6.y, r2.w, r6.y
					movc r2.w, r4.w, r6.y, r2.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r2.w, r6.w, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[4].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[23].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[23].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[21].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r8.xyzx
					min r7.y, r8.w, r7.y
					max r7.zw, cb0[17].yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.xy, cb0[17].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r8.xy, -r7.zwzz, r8.xyxx
					mad r7.y, r7.y, r8.x, r7.z
					sample r9.xyzw, r7.yyyy, t6.xyzw, s4
					mul r8.xzw, r9.xxyz, cb0[19].xxyz
					add r7.y, -cb0[17].x, l(1.000000)
					add r7.z, -r7.y, l(1.000000)
					mad r8.xzw, r8.xxzw, r7.zzzz, r7.yyyy
					mad r7.y, -r6.x, cb0[18].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r7.y, r7.y
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r8.y, r7.w
					sample r9.xyzw, r1.zzzz, t7.xyzw, s5
					mul r4.xyz, r5.yzwy, r9.xyzx
					mad r1.z, -r5.x, cb0[18].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[18].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r1.wwww, cb0[7].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r8.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[22].xyzx
					mul r6.xyz, r3.xyzx, cb0[22].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r8.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r8.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[24].x, l(1.000000)
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyzw, r2.xyzw, cb0[21].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.x, r0.xyzx, r4.xyzx
					add r0.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					sqrt r0.y, r0.y
					add r0.y, -r0.x, r0.y
					mad r0.x, cb3[25].w, r0.y, r0.x
					mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
					eq r0.y, cb5[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.z, cb5[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r0.zzzz, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r0.z, r4.y, l(0.250000), l(0.750000)
					  mad r0.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.w, r0.z
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r4.xyzw, cb2[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s1
					add_sat r0.x, r0.x, r4.x
					min r0.z, r0.x, r0.z
					movc r0.x, r0.y, r0.z, r0.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r4.xxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb2[0].xyzx
					movc r3.xyz, r1.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.x, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r0.x, r0.x, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.x, r0.x, r3.y, r3.x
					sample r3.xyzw, r0.xxxx, t3.xyzw, s4
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.x, -cb0[17].x, l(1.000000)
					add r3.w, -r0.x, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r1.xyzx
					dp2 r1.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r2.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[25], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyzw, r2.xyzw, cb0[21].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.x, r0.xyzx, r4.xyzx
					add r0.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					sqrt r0.y, r0.y
					add r0.y, -r0.x, r0.y
					mad r0.x, cb2[25].w, r0.y, r0.x
					mad_sat r0.x, r0.x, cb2[24].z, cb2[24].w
					eq r0.y, cb5[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.z, cb5[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r0.zzzz, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r0.z, r4.y, l(0.250000), l(0.750000)
					  mad r0.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.w, r0.z
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r4.xyzw, cb1[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s1
					add_sat r0.x, r0.x, r4.x
					min r0.z, r0.x, r0.z
					movc r0.x, r0.y, r0.z, r0.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r4.xxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					round_ne r0.x, r0.x
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[4].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb1[0].xyzx
					movc r3.xyz, r1.wwww, cb0[23].xyzx, r3.xyzx
					movc r0.x, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r0.x, r0.x, r3.x
					max r3.x, cb0[17].y, l(0.000000)
					add r3.y, cb0[17].y, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r3.y, -r3.x, r3.y
					mad r0.x, r0.x, r3.y, r3.x
					sample r3.xyzw, r0.xxxx, t3.xyzw, s4
					mul r3.xyz, r3.xyzx, cb0[19].xyzx
					add r0.x, -cb0[17].x, l(1.000000)
					add r3.w, -r0.x, l(1.000000)
					mad r3.xyz, r3.xyzx, r3.wwww, r0.xxxx
					dp3 r0.x, r0.yzwy, r1.xyzx
					dp2 r1.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb1[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.xxyz, r0.yyzw
					mul r0.yzw, r0.yyzw, r2.xxyz
					mul r1.xyz, r0.yzwy, cb0[22].xyzx
					movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[23].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[24].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[24].x, l(0.500000), r1.x
					mad r0.x, -cb0[24].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[24].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s8
					sample r7.xyzw, v1.zwzz, t4.xyzw, s9
					mul r5.yz, v5.yyyy, cb0[5].xxyx
					mad r5.yz, cb0[4].xxyx, v5.xxxx, r5.yyzy
					mad r5.yz, cb0[6].xxyx, v5.zzzz, r5.yyzy
					add r5.yz, r5.yyzy, cb0[7].xxyx
					mov r8.x, cb4[9].z
					mov r8.y, cb4[10].z
					mov r8.z, cb4[11].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r6.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r4.w, r6.yzwy, r6.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb3[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.w, cb5[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb5[2].xxyz
					  mad r6.yzw, cb5[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb5[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb5[4].xxyz
					  movc r6.yzw, r5.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r6.yyzw, cb5[5].xxyz
					  mad r5.w, r8.y, l(0.250000), l(0.750000)
					  mad r6.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r5.w, r6.y
					  sample r8.xyzw, r8.xzwx, t9.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r8.xyzw, cb2[46].xyzw
					div r6.yz, v6.xxyx, v6.wwww
					sample r8.xyzw, r6.yzyy, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r5.w, r2.w, r5.w
					movc r2.w, r4.w, r5.w, r2.w
					sample r8.xyzw, r5.yzyy, t6.xyzw, s2
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r8.w, r5.w, r2.w
					mul r5.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[27].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r9.xyzx
					min r7.y, r9.w, r7.y
					max r7.z, cb0[21].y, l(0.000000)
					add r7.w, cb0[21].y, l(1.000000)
					max r7.w, r7.w, l(0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r7.w, -r7.z, r7.w
					mad r7.y, r7.y, r7.w, r7.z
					sample r9.xyzw, r7.yyyy, t7.xyzw, s6
					mul r7.yzw, r9.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r7.yzw, r7.yyzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[12].x, l(0.000000)
					add r4.x, cb0[12].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r9.xyzw, r1.zzzz, t8.xyzw, s3
					mul r4.xyz, r9.xyzx, cb0[12].yzwy
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[22].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r6.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xyz, r6.xyzx, -cb2[45].xyzx
					mad r6.xyz, cb0[2].xyzx, r8.wwww, r6.xyzx
					mul r8.xyz, r7.yzwy, r6.xyzx
					mul r3.xyz, r3.xyzx, r8.xyzx
					add r1.w, r6.y, r6.x
					add r1.w, r6.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r6.xyz, r1.wwww, cb0[26].xyzx
					mul r8.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r6.xyzx, r5.yzwy
					movc r3.xyz, r2.wwww, r8.xyzx, r3.xyzx
					mul r1.xyz, r7.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r7.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s8
					sample r7.xyzw, v1.zwzz, t4.xyzw, s9
					mul r5.yz, v5.yyyy, cb0[5].xxyx
					mad r5.yz, cb0[4].xxyx, v5.xxxx, r5.yyzy
					mad r5.yz, cb0[6].xxyx, v5.zzzz, r5.yyzy
					add r5.yz, r5.yyzy, cb0[7].xxyx
					ishl r2.w, cb4[0].x, l(2)
					mov r8.x, cb3[r2.w + 8].z
					mov r8.y, cb3[r2.w + 9].z
					mov r8.z, cb3[r2.w + 10].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r6.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r4.w, r6.yzwy, r6.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb2[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.w, cb5[0].y, l(1.000000)
					  mul r6.yzw, v5.yyyy, cb5[2].xxyz
					  mad r6.yzw, cb5[1].xxyz, v5.xxxx, r6.yyzw
					  mad r6.yzw, cb5[3].xxyz, v5.zzzz, r6.yyzw
					  add r6.yzw, r6.yyzw, cb5[4].xxyz
					  movc r6.yzw, r5.wwww, r6.yyzw, v5.xxyz
					  add r6.yzw, r6.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r6.yyzw, cb5[5].xxyz
					  mad r5.w, r8.y, l(0.250000), l(0.750000)
					  mad r6.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r5.w, r6.y
					  sample r8.xyzw, r8.xzwx, t9.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.w, r8.xyzw, cb1[46].xyzw
					div r6.yz, v6.xxyx, v6.wwww
					sample r8.xyzw, r6.yzyy, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r5.w, r2.w, r5.w
					movc r2.w, r4.w, r5.w, r2.w
					sample r8.xyzw, r5.yzyy, t6.xyzw, s2
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r5.yzw, r2.wwww, cb0[2].xxyz
					add r6.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r5.yzw, r5.yyzw, r6.yyzw
					max r2.w, r5.z, r5.y
					max r8.w, r5.w, r2.w
					mul r5.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r6.yzw, r2.wwww, cb0[27].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r7.y, r4.xyzx, r9.xyzx
					min r7.y, r9.w, r7.y
					max r7.z, cb0[21].y, l(0.000000)
					add r7.w, cb0[21].y, l(1.000000)
					max r7.w, r7.w, l(0.000000)
					add r7.y, r7.y, l(1.000000)
					mul r7.y, r7.y, l(0.500000)
					add r7.w, -r7.z, r7.w
					mad r7.y, r7.y, r7.w, r7.z
					sample r9.xyzw, r7.yyyy, t7.xyzw, s6
					mul r7.yzw, r9.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r7.yzw, r7.yyzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r6.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r6.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[12].x, l(0.000000)
					add r4.x, cb0[12].x, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r9.xyzw, r1.zzzz, t8.xyzw, s3
					mul r4.xyz, r9.xyzx, cb0[12].yzwy
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[22].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r6.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xyz, r6.xyzx, -cb1[45].xyzx
					mad r6.xyz, cb0[2].xyzx, r8.wwww, r6.xyzx
					mul r8.xyz, r7.yzwy, r6.xyzx
					mul r3.xyz, r3.xyzx, r8.xyzx
					add r1.w, r6.y, r6.x
					add r1.w, r6.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r6.xyz, r1.wwww, cb0[26].xyzx
					mul r8.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r6.xyzx, r5.yzwy
					movc r3.xyz, r2.wwww, r8.xyzx, r3.xyzx
					mul r1.xyz, r7.yzwy, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r7.yzwy, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s8
					sample r7.xyzw, v1.zwzz, t4.xyzw, s9
					mul r5.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r6.yz, v5.yyyy, cb0[5].xxyx
					mad r6.yz, cb0[4].xxyx, v5.xxxx, r6.yyzy
					mad r6.yz, cb0[6].xxyx, v5.zzzz, r6.yyzy
					add r6.yz, r6.yyzy, cb0[7].xxyx
					mov r8.x, cb4[9].z
					mov r8.y, cb4[10].z
					mov r8.z, cb4[11].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r7.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r4.w, r7.yzwy, r7.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb3[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r6.w, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r7.yzw, r6.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r7.yyzw, cb5[5].xxyz
					  mad r6.w, r8.y, l(0.250000), l(0.750000)
					  mad r7.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r6.w, r7.y
					  sample r8.xyzw, r8.xzwx, t9.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.w, r8.xyzw, cb2[46].xyzw
					div r7.yz, v6.xxyx, v6.wwww
					sample r8.xyzw, r7.yzyy, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r6.w, r2.w, r6.w
					movc r2.w, r4.w, r6.w, r2.w
					sample r8.xyzw, r6.yzyy, t6.xyzw, s2
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r8.w, r6.w, r2.w
					mul r6.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r7.yzw, r2.wwww, cb0[27].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r8.x, r4.xyzx, r9.xyzx
					min r8.x, r9.w, r8.x
					max r8.yz, cb0[21].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[21].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.x, r8.x, l(1.000000)
					mul r8.x, r8.x, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r8.x, r8.x, r9.x, r8.y
					sample r10.xyzw, r8.xxxx, t7.xyzw, s5
					mul r9.xzw, r10.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r9.xzw, r9.xxzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r7.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r7.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r7.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r9.y, r8.z
					sample r10.xyzw, r1.zzzz, t8.xyzw, s6
					mul r4.xyz, r5.yzwy, r10.xyzx
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[22].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r8.wwww, r5.xyzx
					mul r7.xyz, r9.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[26].xyzx
					mul r7.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, r6.yzwy
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r9.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r9.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r2.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t2.xyzw, s7
					mul r1.w, r5.x, cb0[22].y
					sample r6.xyzw, v1.xyxx, t3.xyzw, s8
					sample r7.xyzw, v1.zwzz, t4.xyzw, s9
					mul r5.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r5.yzw, r5.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r6.yz, v5.yyyy, cb0[5].xxyx
					mad r6.yz, cb0[4].xxyx, v5.xxxx, r6.yyzy
					mad r6.yz, cb0[6].xxyx, v5.zzzz, r6.yyzy
					add r6.yz, r6.yyzy, cb0[7].xxyx
					ishl r2.w, cb4[0].x, l(2)
					mov r8.x, cb3[r2.w + 8].z
					mov r8.y, cb3[r2.w + 9].z
					mov r8.z, cb3[r2.w + 10].z
					dp3 r2.w, r0.xyzx, r8.xyzx
					add r7.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r4.w, r7.yzwy, r7.yzwy
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb2[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
					eq r4.w, cb5[0].x, l(1.000000)
					if_nz r4.w
					  eq r6.w, cb5[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb5[2].xxyz
					  mad r7.yzw, cb5[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb5[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb5[4].xxyz
					  movc r7.yzw, r6.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r8.yzw, r7.yyzw, cb5[5].xxyz
					  mad r6.w, r8.y, l(0.250000), l(0.750000)
					  mad r7.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r8.x, r6.w, r7.y
					  sample r8.xyzw, r8.xzwx, t9.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r6.w, r8.xyzw, cb1[46].xyzw
					div r7.yz, v6.xxyx, v6.wwww
					sample r8.xyzw, r7.yzyy, t5.xyzw, s1
					add_sat r2.w, r2.w, r8.x
					min r6.w, r2.w, r6.w
					movc r2.w, r4.w, r6.w, r2.w
					sample r8.xyzw, r6.yzyy, t6.xyzw, s2
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r6.yzw, r2.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r2.w, r6.z, r6.y
					max r8.w, r6.w, r2.w
					mul r6.yzw, r8.wwww, cb0[2].xxyz
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					eq r4.w, cb0[8].y, l(1.000000)
					and r2.w, r2.w, r4.w
					movc r7.yzw, r2.wwww, cb0[27].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r9.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r4.w, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r4.wwww
					dp3 r8.x, r4.xyzx, r9.xyzx
					min r8.x, r9.w, r8.x
					max r8.yz, cb0[21].yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.xy, cb0[21].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r9.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r8.x, r8.x, l(1.000000)
					mul r8.x, r8.x, l(0.500000)
					add r9.xy, -r8.yzyy, r9.xyxx
					mad r8.x, r8.x, r9.x, r8.y
					sample r10.xyzw, r8.xxxx, t7.xyzw, s5
					mul r9.xzw, r10.xxyz, cb0[23].xxyz
					add r8.x, -cb0[21].x, l(1.000000)
					add r8.y, -r8.x, l(1.000000)
					mad r9.xzw, r9.xxzw, r8.yyyy, r8.xxxx
					mad r8.x, -r6.x, cb0[22].x, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r7.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r7.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r7.yzwy, r0.xyzx
					mul r0.y, r8.x, r8.x
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					min r1.z, r1.y, l(2.000000)
					mul r1.z, r1.z, l(0.500000)
					mad r1.z, r1.z, r9.y, r8.z
					sample r10.xyzw, r1.zzzz, t8.xyzw, s6
					mul r4.xyz, r5.yzwy, r10.xyzx
					mad r1.z, -r5.x, cb0[22].y, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					mad r0.z, r6.x, cb0[22].x, -r4.w
					add_sat r0.z, r0.z, l(1.000000)
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r1.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r8.wwww, r5.xyzx
					mul r7.xyz, r9.xzwx, r5.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[26].xyzx
					mul r7.xyz, r3.xyzx, cb0[26].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, r6.yzwy
					movc r3.xyz, r2.wwww, r7.xyzx, r3.xyzx
					mul r1.xyz, r9.xzwx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r9.xzwx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.x, -cb0[28].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xy, v5.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v5.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v5.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r0.x, r0.xyzx, r5.xyzx
					add r0.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					sqrt r0.y, r0.y
					add r0.y, -r0.x, r0.y
					mad r0.x, cb3[25].w, r0.y, r0.x
					mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
					eq r0.y, cb5[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.z, cb5[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r0.zzzz, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r0.z, r5.y, l(0.250000), l(0.750000)
					  mad r0.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r0.z
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r5.xyzw, cb2[46].xyzw
					div r4.zw, v6.xxxy, v6.wwww
					sample r5.xyzw, r4.zwzz, t2.xyzw, s1
					add_sat r0.x, r0.x, r5.x
					min r0.z, r0.x, r0.z
					movc r0.x, r0.y, r0.z, r0.x
					sample r4.xyzw, r4.xyxx, t3.xyzw, s2
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.xyzw, r0.xyyy, r4.wxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb2[0].xyzx
					movc r3.xyz, r1.wwww, cb0[27].xyzx, r3.xyzx
					movc r3.w, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r3.x, r3.w, r3.x
					max r3.y, cb0[21].y, l(0.000000)
					add r3.z, cb0[21].y, l(1.000000)
					max r3.z, r3.z, l(0.000000)
					add r3.x, r3.x, l(1.000000)
					mul r3.x, r3.x, l(0.500000)
					add r3.z, -r3.y, r3.z
					mad r3.x, r3.x, r3.z, r3.y
					sample r3.xyzw, r3.xxxx, t4.xyzw, s5
					mul r3.xyz, r3.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r3.xyz, r3.xyzx, r4.xxxx, r3.wwww
					dp3 r0.y, r0.yzwy, r1.xyzx
					dp2 r1.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[45].xyzx
					mad r0.xzw, cb0[2].xxyz, r0.xxxx, r1.xxyz
					mul r0.xzw, r3.xxyz, r0.xxzw
					mul r0.xzw, r0.xxzw, r2.xxyz
					mul r1.xyz, r0.xzwx, cb0[26].xyzx
					movc r0.xzw, r1.wwww, r1.xxyz, r0.xxzw
					add r0.y, -|r0.y|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.y, r0.y
					mul r0.y, r0.y, r1.x
					exp r0.y, r0.y
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.y, -cb0[28].x, l(0.500000), r0.y
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.y, r0.y, r1.x
					mad r1.x, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.y, r1.x
					mad r0.y, r0.y, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.yyyy, r0.xzwx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[25].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					mul r4.xy, v5.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v5.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v5.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					ishl r0.w, cb4[0].x, l(2)
					mov r5.x, cb3[r0.w + 8].z
					mov r5.y, cb3[r0.w + 9].z
					mov r5.z, cb3[r0.w + 10].z
					dp3 r0.x, r0.xyzx, r5.xyzx
					add r0.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					sqrt r0.y, r0.y
					add r0.y, -r0.x, r0.y
					mad r0.x, cb2[25].w, r0.y, r0.x
					mad_sat r0.x, r0.x, cb2[24].z, cb2[24].w
					eq r0.y, cb5[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.z, cb5[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r0.zzzz, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r0.z, r5.y, l(0.250000), l(0.750000)
					  mad r0.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r0.z
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r5.xyzw, cb1[46].xyzw
					div r4.zw, v6.xxxy, v6.wwww
					sample r5.xyzw, r4.zwzz, t2.xyzw, s1
					add_sat r0.x, r0.x, r5.x
					min r0.z, r0.x, r0.z
					movc r0.x, r0.y, r0.z, r0.x
					sample r4.xyzw, r4.xyxx, t3.xyzw, s2
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.y, r4.xyzx, r4.xyzx
					rsq r0.y, r0.y
					mul r0.xyzw, r0.xyyy, r4.wxyz
					mul r3.xyz, r0.xxxx, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r0.x, r3.y, r3.x
					max r0.x, r3.z, r0.x
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r3.x, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r3.x
					mov r3.xyz, cb1[0].xyzx
					movc r3.xyz, r1.wwww, cb0[27].xyzx, r3.xyzx
					movc r3.w, r1.w, l(1.000000), r0.x
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.x, r0.yzwy, r3.xyzx
					min r3.x, r3.w, r3.x
					max r3.y, cb0[21].y, l(0.000000)
					add r3.z, cb0[21].y, l(1.000000)
					max r3.z, r3.z, l(0.000000)
					add r3.x, r3.x, l(1.000000)
					mul r3.x, r3.x, l(0.500000)
					add r3.z, -r3.y, r3.z
					mad r3.x, r3.x, r3.z, r3.y
					sample r3.xyzw, r3.xxxx, t4.xyzw, s5
					mul r3.xyz, r3.xyzx, cb0[23].xyzx
					add r3.w, -cb0[21].x, l(1.000000)
					add r4.x, -r3.w, l(1.000000)
					mad r3.xyz, r3.xyzx, r4.xxxx, r3.wwww
					dp3 r0.y, r0.yzwy, r1.xyzx
					dp2 r1.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb1[45].xyzx
					mad r0.xzw, cb0[2].xxyz, r0.xxxx, r1.xxyz
					mul r0.xzw, r3.xxyz, r0.xxzw
					mul r0.xzw, r0.xxzw, r2.xxyz
					mul r1.xyz, r0.xzwx, cb0[26].xyzx
					movc r0.xzw, r1.wwww, r1.xxyz, r0.xxzw
					add r0.y, -|r0.y|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.y, r0.y
					mul r0.y, r0.y, r1.x
					exp r0.y, r0.y
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.y, -cb0[28].x, l(0.500000), r0.y
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.y, r0.y, r1.x
					mad r1.x, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.y, r1.x
					mad r0.y, r0.y, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.yyyy, r0.xzwx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb2[46].xyzw
					add r8.yzw, v5.xxyz, -cb2[1].xxyz
					max r7.z, |r8.z|, |r8.y|
					max r7.z, |r8.w|, r7.z
					add r7.z, r7.z, -cb2[2].z
					max r7.z, r7.z, l(0.000010)
					mul r7.z, r7.z, cb2[2].w
					div r7.z, cb2[2].y, r7.z
					add r7.z, r7.z, -cb2[2].x
					add r7.z, -r7.z, l(1.000000)
					sample_c_lz r7.z, r8.yzwy, t9.xxxx, s1, r7.z
					add r7.w, -cb3[24].x, l(1.000000)
					mad r7.z, r7.z, r7.w, cb3[24].x
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t6.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t7.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb1[46].xyzw
					add r8.yzw, v5.xxyz, -cb1[1].xxyz
					max r7.z, |r8.z|, |r8.y|
					max r7.z, |r8.w|, r7.z
					add r7.z, r7.z, -cb1[2].z
					max r7.z, r7.z, l(0.000010)
					mul r7.z, r7.z, cb1[2].w
					div r7.z, cb1[2].y, r7.z
					add r7.z, r7.z, -cb1[2].x
					add r7.z, -r7.z, l(1.000000)
					sample_c_lz r7.z, r8.yzwy, t9.xxxx, s1, r7.z
					add r7.w, -cb2[24].x, l(1.000000)
					mad r7.z, r7.z, r7.w, cb2[24].x
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t6.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t7.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb2[46].xyzw
					add r9.xyz, v5.xyzx, -cb2[1].xyzx
					max r8.z, |r9.y|, |r9.x|
					max r8.z, |r9.z|, r8.z
					add r8.z, r8.z, -cb2[2].z
					max r8.z, r8.z, l(0.000010)
					mul r8.z, r8.z, cb2[2].w
					div r8.z, cb2[2].y, r8.z
					add r8.z, r8.z, -cb2[2].x
					add r8.z, -r8.z, l(1.000000)
					sample_c_lz r8.z, r9.xyzx, t9.xxxx, s1, r8.z
					add r8.w, -cb3[24].x, l(1.000000)
					mad r8.z, r8.z, r8.w, cb3[24].x
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t6.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t7.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb1[46].xyzw
					add r9.xyz, v5.xyzx, -cb1[1].xyzx
					max r8.z, |r9.y|, |r9.x|
					max r8.z, |r9.z|, r8.z
					add r8.z, r8.z, -cb1[2].z
					max r8.z, r8.z, l(0.000010)
					mul r8.z, r8.z, cb1[2].w
					div r8.z, cb1[2].y, r8.z
					add r8.z, r8.z, -cb1[2].x
					add r8.z, -r8.z, l(1.000000)
					sample_c_lz r8.z, r9.xyzx, t9.xxxx, s1, r8.z
					add r8.w, -cb2[24].x, l(1.000000)
					mad r8.z, r8.z, r8.w, cb2[24].x
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t6.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t7.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb3[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb2[46].xyzw
					add r6.xyz, v5.xyzx, -cb2[1].xyzx
					max r1.z, |r6.y|, |r6.x|
					max r1.z, |r6.z|, r1.z
					add r1.z, r1.z, -cb2[2].z
					max r1.z, r1.z, l(0.000010)
					mul r1.z, r1.z, cb2[2].w
					div r1.z, cb2[2].y, r1.z
					add r1.z, r1.z, -cb2[2].x
					add r1.z, -r1.z, l(1.000000)
					sample_c_lz r1.z, r6.xyzx, t5.xxxx, s1, r1.z
					add r1.w, -cb3[24].x, l(1.000000)
					mad r1.z, r1.z, r1.w, cb3[24].x
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s2
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r6.x, cb3[r0.w + 8].z
					mov r6.y, cb3[r0.w + 9].z
					mov r6.z, cb3[r0.w + 10].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb2[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb1[46].xyzw
					add r6.xyz, v5.xyzx, -cb1[1].xyzx
					max r1.z, |r6.y|, |r6.x|
					max r1.z, |r6.z|, r1.z
					add r1.z, r1.z, -cb1[2].z
					max r1.z, r1.z, l(0.000010)
					mul r1.z, r1.z, cb1[2].w
					div r1.z, cb1[2].y, r1.z
					add r1.z, r1.z, -cb1[2].x
					add r1.z, -r1.z, l(1.000000)
					sample_c_lz r1.z, r6.xyzx, t5.xxxx, s1, r1.z
					add r1.w, -cb2[24].x, l(1.000000)
					mad r1.z, r1.z, r1.w, cb2[24].x
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s2
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb1[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb2[46].xyzw
					lt r7.z, r3.w, l(0.990000)
					if_nz r7.z
					  add r8.yzw, v5.xxyz, -cb2[1].xxyz
					  max r7.z, |r8.z|, |r8.y|
					  max r7.z, |r8.w|, r7.z
					  add r7.z, r7.z, -cb2[2].z
					  max r7.z, r7.z, l(0.000010)
					  mul r7.z, r7.z, cb2[2].w
					  div r7.z, cb2[2].y, r7.z
					  add r7.z, r7.z, -cb2[2].x
					  add r7.z, -r7.z, l(1.000000)
					  add r9.xyz, r8.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.x, r9.xyzx, t9.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.y, r10.xyzx, t9.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r9.z, r10.xyzx, t9.xxxx, s1, r7.z
					  add r8.yzw, r8.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r9.w, r8.yzwy, t9.xxxx, s1, r7.z
					  dp4 r7.z, r9.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r7.w, -cb3[24].x, l(1.000000)
					  mad r7.z, r7.z, r7.w, cb3[24].x
					else 
					  mov r7.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t6.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t7.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb1[46].xyzw
					lt r7.z, r3.w, l(0.990000)
					if_nz r7.z
					  add r8.yzw, v5.xxyz, -cb1[1].xxyz
					  max r7.z, |r8.z|, |r8.y|
					  max r7.z, |r8.w|, r7.z
					  add r7.z, r7.z, -cb1[2].z
					  max r7.z, r7.z, l(0.000010)
					  mul r7.z, r7.z, cb1[2].w
					  div r7.z, cb1[2].y, r7.z
					  add r7.z, r7.z, -cb1[2].x
					  add r7.z, -r7.z, l(1.000000)
					  add r9.xyz, r8.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.x, r9.xyzx, t9.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.y, r10.xyzx, t9.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r9.z, r10.xyzx, t9.xxxx, s1, r7.z
					  add r8.yzw, r8.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r9.w, r8.yzwy, t9.xxxx, s1, r7.z
					  dp4 r7.z, r9.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r7.w, -cb2[24].x, l(1.000000)
					  mad r7.z, r7.z, r7.w, cb2[24].x
					else 
					  mov r7.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t6.xyzw, s6
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t7.xyzw, s3
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb2[46].xyzw
					lt r8.z, r3.w, l(0.990000)
					if_nz r8.z
					  add r9.xyz, v5.xyzx, -cb2[1].xyzx
					  max r8.z, |r9.y|, |r9.x|
					  max r8.z, |r9.z|, r8.z
					  add r8.z, r8.z, -cb2[2].z
					  max r8.z, r8.z, l(0.000010)
					  mul r8.z, r8.z, cb2[2].w
					  div r8.z, cb2[2].y, r8.z
					  add r8.z, r8.z, -cb2[2].x
					  add r8.z, -r8.z, l(1.000000)
					  add r10.xyz, r9.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.x, r10.xyzx, t9.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.y, r11.xyzx, t9.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.z, r11.xyzx, t9.xxxx, s1, r8.z
					  add r9.xyz, r9.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.w, r9.xyzx, t9.xxxx, s1, r8.z
					  dp4 r8.z, r10.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r8.w, -cb3[24].x, l(1.000000)
					  mad r8.z, r8.z, r8.w, cb3[24].x
					else 
					  mov r8.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t6.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t7.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s7
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s8
					sample r8.xyzw, v1.zwzz, t4.xyzw, s9
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb1[46].xyzw
					lt r8.z, r3.w, l(0.990000)
					if_nz r8.z
					  add r9.xyz, v5.xyzx, -cb1[1].xyzx
					  max r8.z, |r9.y|, |r9.x|
					  max r8.z, |r9.z|, r8.z
					  add r8.z, r8.z, -cb1[2].z
					  max r8.z, r8.z, l(0.000010)
					  mul r8.z, r8.z, cb1[2].w
					  div r8.z, cb1[2].y, r8.z
					  add r8.z, r8.z, -cb1[2].x
					  add r8.z, -r8.z, l(1.000000)
					  add r10.xyz, r9.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.x, r10.xyzx, t9.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.y, r11.xyzx, t9.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.z, r11.xyzx, t9.xxxx, s1, r8.z
					  add r9.xyz, r9.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.w, r9.xyzx, t9.xxxx, s1, r8.z
					  dp4 r8.z, r10.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r8.w, -cb2[24].x, l(1.000000)
					  mad r8.z, r8.z, r8.w, cb2[24].x
					else 
					  mov r8.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s2
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t6.xyzw, s5
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t7.xyzw, s6
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb3[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb2[46].xyzw
					lt r1.z, r0.w, l(0.990000)
					if_nz r1.z
					  add r6.xyz, v5.xyzx, -cb2[1].xyzx
					  max r1.z, |r6.y|, |r6.x|
					  max r1.z, |r6.z|, r1.z
					  add r1.z, r1.z, -cb2[2].z
					  max r1.z, r1.z, l(0.000010)
					  mul r1.z, r1.z, cb2[2].w
					  div r1.z, cb2[2].y, r1.z
					  add r1.z, r1.z, -cb2[2].x
					  add r1.z, -r1.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t5.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t5.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t5.xxxx, s1, r1.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t5.xxxx, s1, r1.z
					  dp4 r1.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r1.w, -cb3[24].x, l(1.000000)
					  mad r1.z, r1.z, r1.w, cb3[24].x
					else 
					  mov r1.z, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s2
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r6.x, cb3[r0.w + 8].z
					mov r6.y, cb3[r0.w + 9].z
					mov r6.z, cb3[r0.w + 10].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb2[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb1[46].xyzw
					lt r1.z, r0.w, l(0.990000)
					if_nz r1.z
					  add r6.xyz, v5.xyzx, -cb1[1].xyzx
					  max r1.z, |r6.y|, |r6.x|
					  max r1.z, |r6.z|, r1.z
					  add r1.z, r1.z, -cb1[2].z
					  max r1.z, r1.z, l(0.000010)
					  mul r1.z, r1.z, cb1[2].w
					  div r1.z, cb1[2].y, r1.z
					  add r1.z, r1.z, -cb1[2].x
					  add r1.z, -r1.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t5.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t5.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t5.xxxx, s1, r1.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t5.xxxx, s1, r1.z
					  dp4 r1.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r1.w, -cb2[24].x, l(1.000000)
					  mad r1.z, r1.z, r1.w, cb2[24].x
					else 
					  mov r1.z, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s2
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t3.xyzw, s5
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb1[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb2[46].xyzw
					add r8.yzw, v5.xxyz, -cb2[1].xxyz
					max r7.z, |r8.z|, |r8.y|
					max r7.z, |r8.w|, r7.z
					add r7.z, r7.z, -cb2[2].z
					max r7.z, r7.z, l(0.000010)
					mul r7.z, r7.z, cb2[2].w
					div r7.z, cb2[2].y, r7.z
					add r7.z, r7.z, -cb2[2].x
					add r7.z, -r7.z, l(1.000000)
					sample_c_lz r7.z, r8.yzwy, t10.xxxx, s1, r7.z
					add r7.w, -cb3[24].x, l(1.000000)
					mad r7.z, r7.z, r7.w, cb3[24].x
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r6.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb1[46].xyzw
					add r8.yzw, v5.xxyz, -cb1[1].xxyz
					max r7.z, |r8.z|, |r8.y|
					max r7.z, |r8.w|, r7.z
					add r7.z, r7.z, -cb1[2].z
					max r7.z, r7.z, l(0.000010)
					mul r7.z, r7.z, cb1[2].w
					div r7.z, cb1[2].y, r7.z
					add r7.z, r7.z, -cb1[2].x
					add r7.z, -r7.z, l(1.000000)
					sample_c_lz r7.z, r8.yzwy, t10.xxxx, s1, r7.z
					add r7.w, -cb2[24].x, l(1.000000)
					mad r7.z, r7.z, r7.w, cb2[24].x
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r6.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb2[46].xyzw
					add r9.xyz, v5.xyzx, -cb2[1].xyzx
					max r8.z, |r9.y|, |r9.x|
					max r8.z, |r9.z|, r8.z
					add r8.z, r8.z, -cb2[2].z
					max r8.z, r8.z, l(0.000010)
					mul r8.z, r8.z, cb2[2].w
					div r8.z, cb2[2].y, r8.z
					add r8.z, r8.z, -cb2[2].x
					add r8.z, -r8.z, l(1.000000)
					sample_c_lz r8.z, r9.xyzx, t10.xxxx, s1, r8.z
					add r8.w, -cb3[24].x, l(1.000000)
					mad r8.z, r8.z, r8.w, cb3[24].x
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r7.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb1[46].xyzw
					add r9.xyz, v5.xyzx, -cb1[1].xyzx
					max r8.z, |r9.y|, |r9.x|
					max r8.z, |r9.z|, r8.z
					add r8.z, r8.z, -cb1[2].z
					max r8.z, r8.z, l(0.000010)
					mul r8.z, r8.z, cb1[2].w
					div r8.z, cb1[2].y, r8.z
					add r8.z, r8.z, -cb1[2].x
					add r8.z, -r8.z, l(1.000000)
					sample_c_lz r8.z, r9.xyzx, t10.xxxx, s1, r8.z
					add r8.w, -cb2[24].x, l(1.000000)
					mad r8.z, r8.z, r8.w, cb2[24].x
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r7.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb3[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb2[46].xyzw
					add r6.xyz, v5.xyzx, -cb2[1].xyzx
					max r1.z, |r6.y|, |r6.x|
					max r1.z, |r6.z|, r1.z
					add r1.z, r1.z, -cb2[2].z
					max r1.z, r1.z, l(0.000010)
					mul r1.z, r1.z, cb2[2].w
					div r1.z, cb2[2].y, r1.z
					add r1.z, r1.z, -cb2[2].x
					add r1.z, -r1.z, l(1.000000)
					sample_c_lz r1.z, r6.xyzx, t6.xxxx, s1, r1.z
					add r1.w, -cb3[24].x, l(1.000000)
					mad r1.z, r1.z, r1.w, cb3[24].x
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s3
					sample r5.xyzw, r5.xyzx, t3.xyzw, s2
					mul r1.x, r1.x, r5.w
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r6.x, cb3[r0.w + 8].z
					mov r6.y, cb3[r0.w + 9].z
					mov r6.z, cb3[r0.w + 10].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb2[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb1[46].xyzw
					add r6.xyz, v5.xyzx, -cb1[1].xyzx
					max r1.z, |r6.y|, |r6.x|
					max r1.z, |r6.z|, r1.z
					add r1.z, r1.z, -cb1[2].z
					max r1.z, r1.z, l(0.000010)
					mul r1.z, r1.z, cb1[2].w
					div r1.z, cb1[2].y, r1.z
					add r1.z, r1.z, -cb1[2].x
					add r1.z, -r1.z, l(1.000000)
					sample_c_lz r1.z, r6.xyzx, t6.xxxx, s1, r1.z
					add r1.w, -cb2[24].x, l(1.000000)
					mad r1.z, r1.z, r1.w, cb2[24].x
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s3
					sample r5.xyzw, r5.xyzx, t3.xyzw, s2
					mul r1.x, r1.x, r5.w
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb1[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb2[46].xyzw
					lt r7.z, r3.w, l(0.990000)
					if_nz r7.z
					  add r8.yzw, v5.xxyz, -cb2[1].xxyz
					  max r7.z, |r8.z|, |r8.y|
					  max r7.z, |r8.w|, r7.z
					  add r7.z, r7.z, -cb2[2].z
					  max r7.z, r7.z, l(0.000010)
					  mul r7.z, r7.z, cb2[2].w
					  div r7.z, cb2[2].y, r7.z
					  add r7.z, r7.z, -cb2[2].x
					  add r7.z, -r7.z, l(1.000000)
					  add r9.xyz, r8.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.x, r9.xyzx, t10.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.y, r10.xyzx, t10.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r9.z, r10.xyzx, t10.xxxx, s1, r7.z
					  add r8.yzw, r8.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r9.w, r8.yzwy, t10.xxxx, s1, r7.z
					  dp4 r7.z, r9.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r7.w, -cb3[24].x, l(1.000000)
					  mad r7.z, r7.z, r7.w, cb3[24].x
					else 
					  mov r7.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r6.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s5
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s6
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r7.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r7.yzwy, r7.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r7.y, cb5[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb5[2].xxyz
					  mad r8.yzw, cb5[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb5[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb5[4].xxyz
					  movc r7.yzw, r7.yyyy, r8.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r7.yyzw, cb5[5].xxyz
					  mad r7.y, r9.y, l(0.250000), l(0.750000)
					  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r7.z, r7.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r7.y, r9.xyzw, cb1[46].xyzw
					lt r7.z, r3.w, l(0.990000)
					if_nz r7.z
					  add r8.yzw, v5.xxyz, -cb1[1].xxyz
					  max r7.z, |r8.z|, |r8.y|
					  max r7.z, |r8.w|, r7.z
					  add r7.z, r7.z, -cb1[2].z
					  max r7.z, r7.z, l(0.000010)
					  mul r7.z, r7.z, cb1[2].w
					  div r7.z, cb1[2].y, r7.z
					  add r7.z, r7.z, -cb1[2].x
					  add r7.z, -r7.z, l(1.000000)
					  add r9.xyz, r8.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.x, r9.xyzx, t10.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r9.y, r10.xyzx, t10.xxxx, s1, r7.z
					  add r10.xyz, r8.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r9.z, r10.xyzx, t10.xxxx, s1, r7.z
					  add r8.yzw, r8.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r9.w, r8.yzwy, t10.xxxx, s1, r7.z
					  dp4 r7.z, r9.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r7.w, -cb2[24].x, l(1.000000)
					  mad r7.z, r7.z, r7.w, cb2[24].x
					else 
					  mov r7.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r7.z
					min r7.y, r3.w, r7.y
					movc r3.w, r5.w, r7.y, r3.w
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r6.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t7.xyzw, s7
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t8.xyzw, s4
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					mov r9.x, cb4[9].z
					mov r9.y, cb4[10].z
					mov r9.z, cb4[11].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb3[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb3[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb2[46].xyzw
					lt r8.z, r3.w, l(0.990000)
					if_nz r8.z
					  add r9.xyz, v5.xyzx, -cb2[1].xyzx
					  max r8.z, |r9.y|, |r9.x|
					  max r8.z, |r9.z|, r8.z
					  add r8.z, r8.z, -cb2[2].z
					  max r8.z, r8.z, l(0.000010)
					  mul r8.z, r8.z, cb2[2].w
					  div r8.z, cb2[2].y, r8.z
					  add r8.z, r8.z, -cb2[2].x
					  add r8.z, -r8.z, l(1.000000)
					  add r10.xyz, r9.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.x, r10.xyzx, t10.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.y, r11.xyzx, t10.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.z, r11.xyzx, t10.xxxx, s1, r8.z
					  add r9.xyz, r9.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.w, r9.xyzx, t10.xxxx, s1, r8.z
					  dp4 r8.z, r10.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r8.w, -cb3[24].x, l(1.000000)
					  mad r8.z, r8.z, r8.w, cb3[24].x
					else 
					  mov r8.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r7.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s5
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s8
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s9
					sample r8.xyzw, v1.zwzz, t4.xyzw, s10
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					ishl r3.w, cb4[0].x, l(2)
					mov r9.x, cb3[r3.w + 8].z
					mov r9.y, cb3[r3.w + 9].z
					mov r9.z, cb3[r3.w + 10].z
					dp3 r3.w, r1.xyzx, r9.xyzx
					add r8.yzw, v5.xxyz, -cb2[25].xxyz
					dp3 r5.w, r8.yzwy, r8.yzwy
					sqrt r5.w, r5.w
					add r5.w, -r3.w, r5.w
					mad r3.w, cb2[25].w, r5.w, r3.w
					mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
					eq r5.w, cb5[0].x, l(1.000000)
					if_nz r5.w
					  eq r8.y, cb5[0].y, l(1.000000)
					  mul r9.xyz, v5.yyyy, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r8.yzw, r8.yyyy, r9.xxyz, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb5[6].xxyz
					  mul r9.yzw, r8.yyzw, cb5[5].xxyz
					  mad r8.y, r9.y, l(0.250000), l(0.750000)
					  mad r8.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r8.z, r8.y
					  sample r9.xyzw, r9.xzwx, t9.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r8.y, r9.xyzw, cb1[46].xyzw
					lt r8.z, r3.w, l(0.990000)
					if_nz r8.z
					  add r9.xyz, v5.xyzx, -cb1[1].xyzx
					  max r8.z, |r9.y|, |r9.x|
					  max r8.z, |r9.z|, r8.z
					  add r8.z, r8.z, -cb1[2].z
					  max r8.z, r8.z, l(0.000010)
					  mul r8.z, r8.z, cb1[2].w
					  div r8.z, cb1[2].y, r8.z
					  add r8.z, r8.z, -cb1[2].x
					  add r8.z, -r8.z, l(1.000000)
					  add r10.xyz, r9.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.x, r10.xyzx, t10.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r10.y, r11.xyzx, t10.xxxx, s1, r8.z
					  add r11.xyz, r9.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.z, r11.xyzx, t10.xxxx, s1, r8.z
					  add r9.xyz, r9.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r10.w, r9.xyzx, t10.xxxx, s1, r8.z
					  dp4 r8.z, r10.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r8.w, -cb2[24].x, l(1.000000)
					  mad r8.z, r8.z, r8.w, cb2[24].x
					else 
					  mov r8.z, l(1.000000)
					endif 
					add_sat r3.w, r3.w, r8.z
					min r8.y, r3.w, r8.y
					movc r3.w, r5.w, r8.y, r3.w
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s3
					sample r10.xyzw, r7.yzwy, t6.xyzw, s2
					mul r5.w, r9.x, r10.w
					mul r3.w, r3.w, r5.w
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t7.xyzw, s6
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t8.xyzw, s7
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].x, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb3[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb2[46].xyzw
					lt r1.z, r0.w, l(0.990000)
					if_nz r1.z
					  add r6.xyz, v5.xyzx, -cb2[1].xyzx
					  max r1.z, |r6.y|, |r6.x|
					  max r1.z, |r6.z|, r1.z
					  add r1.z, r1.z, -cb2[2].z
					  max r1.z, r1.z, l(0.000010)
					  mul r1.z, r1.z, cb2[2].w
					  div r1.z, cb2[2].y, r1.z
					  add r1.z, r1.z, -cb2[2].x
					  add r1.z, -r1.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t6.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t6.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t6.xxxx, s1, r1.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t6.xxxx, s1, r1.z
					  dp4 r1.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r1.w, -cb3[24].x, l(1.000000)
					  mad r1.z, r1.z, r1.w, cb3[24].x
					else 
					  mov r1.z, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s3
					sample r5.xyzw, r5.xyzx, t3.xyzw, s2
					mul r1.x, r1.x, r5.w
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb4[0].x
					add r1.xyz, -v5.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s4
					mul r3.xyzw, r3.xyzw, cb0[25].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r6.x, cb3[r0.w + 8].z
					mov r6.y, cb3[r0.w + 9].z
					mov r6.z, cb3[r0.w + 10].z
					dp3 r0.w, r1.xyzx, r6.xyzx
					add r1.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.x, r1.x
					add r1.x, -r0.w, r1.x
					mad r0.w, cb2[25].w, r1.x, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.x, cb5[0].x, l(1.000000)
					if_nz r1.x
					  eq r1.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r1.yzw, r1.yyyy, r6.xxyz, v5.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r6.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.z, r1.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r6.xyzw, cb1[46].xyzw
					lt r1.z, r0.w, l(0.990000)
					if_nz r1.z
					  add r6.xyz, v5.xyzx, -cb1[1].xyzx
					  max r1.z, |r6.y|, |r6.x|
					  max r1.z, |r6.z|, r1.z
					  add r1.z, r1.z, -cb1[2].z
					  max r1.z, r1.z, l(0.000010)
					  mul r1.z, r1.z, cb1[2].w
					  div r1.z, cb1[2].y, r1.z
					  add r1.z, r1.z, -cb1[2].x
					  add r1.z, -r1.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t6.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t6.xxxx, s1, r1.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t6.xxxx, s1, r1.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t6.xxxx, s1, r1.z
					  dp4 r1.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r1.w, -cb2[24].x, l(1.000000)
					  mad r1.z, r1.z, r1.w, cb2[24].x
					else 
					  mov r1.z, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r1.z
					min r1.y, r0.w, r1.y
					movc r0.w, r1.x, r1.y, r0.w
					dp3 r1.x, r5.xyzx, r5.xyzx
					sample r1.xyzw, r1.xxxx, t2.xyzw, s3
					sample r5.xyzw, r5.xyzx, t3.xyzw, s2
					mul r1.x, r1.x, r5.w
					mul r0.w, r0.w, r1.x
					dp3 r1.x, v2.xyzx, r4.xyzx
					dp3 r1.y, v3.xyzx, r4.xyzx
					dp3 r1.z, v4.xyzx, r4.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r0.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r0.w, r4.y, r4.x
					max r0.w, r4.z, r0.w
					dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
					ne r1.w, r1.w, l(0.000000)
					ieq r1.w, r1.w, l(0)
					eq r2.w, cb0[8].y, l(1.000000)
					and r1.w, r1.w, r2.w
					movc r0.xyz, r1.wwww, cb0[27].xyzx, r0.xyzx
					movc r2.w, r1.w, l(1.000000), r0.w
					mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r1.xyzx, r0.xyzx
					min r0.x, r2.w, r0.x
					max r0.y, cb0[21].y, l(0.000000)
					add r0.z, cb0[21].y, l(1.000000)
					max r0.z, r0.z, l(0.000000)
					add r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.z, -r0.y, r0.z
					mad r0.x, r0.x, r0.z, r0.y
					sample r4.xyzw, r0.xxxx, t4.xyzw, s6
					mul r0.xyz, r4.xyzx, cb0[23].xyzx
					add r2.w, -cb0[21].x, l(1.000000)
					add r4.x, -r2.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r2.wwww
					dp3 r1.x, r1.xyzx, r2.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb1[45].xyzx
					mad r2.xyz, cb0[2].xyzx, r0.wwww, r2.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mul r2.xyz, r0.xyzx, cb0[26].xyzx
					movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[28].x, l(1.000000)
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb3[2].xxyz
					  mad r7.yzw, cb3[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb3[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb3[4].xxyz
					  movc r7.yzw, r3.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb3[6].xxyz
					  mul r9.yzw, r7.yyzw, cb3[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb2[46].xyzw
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s1
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t6.xyzw, s5
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t7.xyzw, s2
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, v5.yyyy, cb0[5].xxyz
					mad r6.yzw, cb0[4].xxyz, v5.xxxx, r6.yyzw
					mad r6.yzw, cb0[6].xxyz, v5.zzzz, r6.yyzw
					add r6.yzw, r6.yyzw, cb0[7].xxyz
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r7.yzw, v5.yyyy, cb4[2].xxyz
					  mad r7.yzw, cb4[1].xxyz, v5.xxxx, r7.yyzw
					  mad r7.yzw, cb4[3].xxyz, v5.zzzz, r7.yyzw
					  add r7.yzw, r7.yyzw, cb4[4].xxyz
					  movc r7.yzw, r3.wwww, r7.yyzw, v5.xxyz
					  add r7.yzw, r7.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r7.yyzw, cb4[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb1[46].xyzw
					dp3 r5.w, r6.yzwy, r6.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s1
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r6.yzw, r3.wwww, cb0[2].xxyz
					add r7.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r6.yzw, r6.yyzw, r7.yyzw
					max r3.w, r6.z, r6.y
					max r0.w, r6.w, r3.w
					mul r6.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r7.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r3.z, cb0[21].y, l(0.000000)
					add r5.w, cb0[21].y, l(1.000000)
					max r5.w, r5.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r5.w, -r3.z, r5.w
					mad r3.y, r3.y, r5.w, r3.z
					sample r9.xyzw, r3.yyyy, t6.xyzw, s5
					mul r8.yzw, r9.xxyz, cb0[23].xxyz
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r8.yzw, r8.yyzw, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r7.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r7.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r7.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[12].x, l(0.000000)
					add r3.y, cb0[12].x, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t7.xyzw, s2
					mul r5.xyz, r5.xyzx, cb0[12].yzwy
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r7.xyz, r8.yzwy, r5.xyzx
					mul r4.xyz, r4.xyzx, r7.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r7.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r6.yzwy
					movc r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
					mul r2.xyz, r8.yzwy, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r8.yzwy, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb3[2].xxyz
					  mad r8.yzw, cb3[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb3[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb3[4].xxyz
					  movc r8.yzw, r3.wwww, r8.yyzw, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb3[6].xxyz
					  mul r9.yzw, r8.yyzw, cb3[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb2[46].xyzw
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s1
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t6.xyzw, s4
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t7.xyzw, s5
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t0.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[25].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t2.xyzw, s6
					mul r2.w, r6.x, cb0[22].y
					sample r7.xyzw, v1.xyxx, t3.xyzw, s7
					sample r8.xyzw, v1.zwzz, t4.xyzw, s8
					mul r6.yzw, cb0[21].wwww, cb0[24].xxyz
					mul r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r7.yzw, v5.yyyy, cb0[5].xxyz
					mad r7.yzw, cb0[4].xxyz, v5.xxxx, r7.yyzw
					mad r7.yzw, cb0[6].xxyz, v5.zzzz, r7.yyzw
					add r7.yzw, r7.yyzw, cb0[7].xxyz
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r8.yzw, v5.yyyy, cb4[2].xxyz
					  mad r8.yzw, cb4[1].xxyz, v5.xxxx, r8.yyzw
					  mad r8.yzw, cb4[3].xxyz, v5.zzzz, r8.yyzw
					  add r8.yzw, r8.yyzw, cb4[4].xxyz
					  movc r8.yzw, r3.wwww, r8.yyzw, v5.xxyz
					  add r8.yzw, r8.yyzw, -cb4[6].xxyz
					  mul r9.yzw, r8.yyzw, cb4[5].xxyz
					  mad r3.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r3.w, r5.w
					  sample r9.xyzw, r9.xzwx, t8.xyzw, s0
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r9.xyzw, cb1[46].xyzw
					dp3 r5.w, r7.yzwy, r7.yzwy
					sample r9.xyzw, r5.wwww, t5.xyzw, s1
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r7.yzw, r3.wwww, cb0[2].xxyz
					add r8.yzw, cb0[2].xxyz, l(0.000000, 0.000001, 0.000001, 0.000001)
					div r7.yzw, r7.yyzw, r8.yyzw
					max r3.w, r7.z, r7.y
					max r0.w, r7.w, r3.w
					mul r7.yzw, r0.wwww, cb0[2].xxyz
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r5.w, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r5.w
					movc r8.yzw, r3.wwww, cb0[27].xxyz, r0.xxyz
					mov r9.xyz, cb0[27].xyzx
					mov r9.w, l(1.000000)
					movc r9.xyzw, r3.wwww, r9.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[25].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r9.xyzx
					min r3.y, r9.w, r3.y
					max r9.xy, cb0[21].yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r9.zw, cb0[21].yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r9.zw, -r9.xxxy, r9.zzzw
					mad r3.y, r3.y, r9.z, r9.x
					sample r10.xyzw, r3.yyyy, t6.xyzw, s4
					mul r10.xyz, r10.xyzx, cb0[23].xyzx
					add r3.y, -cb0[21].x, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].x, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r8.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r8.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r8.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					min r2.z, r2.y, l(2.000000)
					mul r2.z, r2.z, l(0.500000)
					mad r2.z, r2.z, r9.w, r9.y
					sample r5.xyzw, r2.zzzz, t7.xyzw, s5
					mul r5.xyz, r6.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[22].y, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].x, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r2.wwww, cb0[11].xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[26].xyzx
					mul r6.xyz, r4.xyzx, cb0[26].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r7.yzwy
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[27].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[28].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[28].x, l(0.500000), r1.x
					mad r0.w, -cb0[28].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[28].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			LOD 100
			Tags { "LIGHTMODE" = "META" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 142819
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[28].xyxx, cb0[28].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mul r3.xyz, v0.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb1[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[28].xyxx, cb0[28].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mul r3.xyz, v0.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb1[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[28].xyxx, cb0[28].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mul r3.xyz, v0.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb1[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[28].xyxx, cb0[28].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mul r3.xyz, v0.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb1[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[28].xyxx, cb0[28].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mul r3.xyz, v0.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb1[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[28].xyxx, cb0[28].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mul r3.xyz, v0.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb1[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[21].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[26].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[26].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[21].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[26].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[26].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[21].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[26].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[26].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[21].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[26].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[26].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[21].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[26].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[26].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" "_METALLIC_WORKFLOW" "_TOONY_HIGHLIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[21].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[26].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[26].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Standard"
	CustomEditor "ToonyStandard"
}