Shader "CubedParadox/Flat Lit Toon" {
	Properties {
		_MainTex ("MainTex", 2D) = "white" {}
		_Color ("Color", Vector) = (1,1,1,1)
		_ColorMask ("ColorMask", 2D) = "black" {}
		_Shadow ("Shadow", Range(0, 1)) = 0.4
		_outline_width ("outline_width", Float) = 0.2
		_outline_color ("outline_color", Vector) = (0.5,0.5,0.5,1)
		_outline_tint ("outline_tint", Range(0, 1)) = 0.5
		_EmissionMap ("Emission Map", 2D) = "white" {}
		[HDR] _EmissionColor ("Emission Color", Vector) = (0,0,0,1)
		_BumpMap ("BumpMap", 2D) = "bump" {}
		_Cutoff ("Alpha cutoff", Range(0, 1)) = 0.5
		[HideInInspector] _Mode ("__mode", Float) = 0
		[HideInInspector] _OutlineMode ("__outline_mode", Float) = 0
		[HideInInspector] _SrcBlend ("__src", Float) = 1
		[HideInInspector] _DstBlend ("__dst", Float) = 0
		[HideInInspector] _ZWrite ("__zw", Float) = 1
	}
	SubShader {
		Tags { "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDBASE" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero Zero, Zero Zero
			ZWrite Off
			GpuProgramID 27952
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o9.zw, r0.zzzw
					add o9.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o9.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o9.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o9.zw, r0.zzzw
					add o9.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o9.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o9.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o9.zw, r0.zzzw
					add o9.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o9.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o9.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o9.zw, r0.zzzw
					add o9.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o9.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o9.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[4], immediateIndexed
					dcl_constantbuffer CB4[4], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					dp3 r2.x, cb2[0].xyzx, cb2[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb2[0].xyzx
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r3.xyzw, r3.xyxx, t2.xyzw, s4
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r4.xyzw, r4.xyxx, t3.xyzw, s3
					mul r5.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r4.xxxx, r1.xyzw, r5.xyzw
					mov r4.xyz, v6.xyzx
					mov r4.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r4.xyzw
					add r4.xyz, cb1[4].xyzx, -cb3[3].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					rsq r3.w, r3.w
					mul r4.xyz, r3.wwww, r4.xyzx
					sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(7.000000)
					add r3.w, r4.w, l(-1.000000)
					mad r3.w, cb4[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb4[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb4[3].x
					mul r4.xyz, r4.xyzx, r3.wwww
					dp2 r3.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb2[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb2[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r3.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb2[40].xyzw, r0.xyzw
					dp4 r7.y, cb2[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb2[43].xyzw, r8.xyzw
					dp4 r9.y, cb2[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb2[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r2.w, r0.x
					add r0.y, r3.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb2[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb2[45].xxyz
					mad_sat r0.yzw, r4.xxyz, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb2[45].xyzx
					mad r2.xyz, r4.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[4], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					dp3 r2.x, cb1[0].xyzx, cb1[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb1[0].xyzx
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb6[2].xyzx
					  mad r3.xyz, cb6[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb6[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb6[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb6[6].xyzx
					  mul r3.yzw, r3.xxyz, cb6[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r3.xyzw, r3.xyxx, t2.xyzw, s4
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r4.xyzw, r4.xyxx, t3.xyzw, s3
					mul r5.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r4.xxxx, r1.xyzw, r5.xyzw
					mov r4.xyz, v6.xyzx
					mov r4.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r4.xyzw
					mov r3.w, cb4[0].x
					add r4.xyz, -cb2[3].xyzx, cb3[r3.w + 64].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					rsq r3.w, r3.w
					mul r4.xyz, r3.wwww, r4.xyzx
					sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(7.000000)
					add r3.w, r4.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb5[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb5[3].x
					mul r4.xyz, r4.xyzx, r3.wwww
					dp2 r3.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb1[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb1[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r3.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb1[40].xyzw, r0.xyzw
					dp4 r7.y, cb1[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb1[43].xyzw, r8.xyzw
					dp4 r9.y, cb1[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb1[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r2.w, r0.x
					add r0.y, r3.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb1[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb1[45].xxyz
					mad_sat r0.yzw, r4.xxyz, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb1[45].xyzx
					mad r2.xyz, r4.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[4], immediateIndexed
					dcl_constantbuffer CB4[4], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					dp3 r2.x, cb2[0].xyzx, cb2[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb2[0].xyzx
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r3.xyzw, r3.xyxx, t2.xyzw, s4
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r4.xyzw, r4.xyxx, t3.xyzw, s3
					mul r5.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r4.xxxx, r1.xyzw, r5.xyzw
					mov r4.xyz, v6.xyzx
					mov r4.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r4.xyzw
					add r4.xyz, cb1[4].xyzx, -cb3[3].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					rsq r3.w, r3.w
					mul r4.xyz, r3.wwww, r4.xyzx
					sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(7.000000)
					add r3.w, r4.w, l(-1.000000)
					mad r3.w, cb4[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb4[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb4[3].x
					mul r4.xyz, r4.xyzx, r3.wwww
					dp2 r3.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb2[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb2[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r3.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb2[40].xyzw, r0.xyzw
					dp4 r7.y, cb2[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb2[43].xyzw, r8.xyzw
					dp4 r9.y, cb2[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb2[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r2.w, r0.x
					add r0.y, r3.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb2[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb2[45].xxyz
					mad_sat r0.yzw, r4.xxyz, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb2[45].xyzx
					mad r2.xyz, r4.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[4], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					dp3 r2.x, cb1[0].xyzx, cb1[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb1[0].xyzx
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb6[2].xyzx
					  mad r3.xyz, cb6[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb6[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb6[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb6[6].xyzx
					  mul r3.yzw, r3.xxyz, cb6[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r3.xyzw, r3.xyxx, t2.xyzw, s4
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r4.xyzw, r4.xyxx, t3.xyzw, s3
					mul r5.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r4.xxxx, r1.xyzw, r5.xyzw
					mov r4.xyz, v6.xyzx
					mov r4.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r4.xyzw
					mov r3.w, cb4[0].x
					add r4.xyz, -cb2[3].xyzx, cb3[r3.w + 64].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					rsq r3.w, r3.w
					mul r4.xyz, r3.wwww, r4.xyzx
					sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(7.000000)
					add r3.w, r4.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb5[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb5[3].x
					mul r4.xyz, r4.xyzx, r3.wwww
					dp2 r3.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb1[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb1[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r3.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb1[40].xyzw, r0.xyzw
					dp4 r7.y, cb1[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb1[43].xyzw, r8.xyzw
					dp4 r9.y, cb1[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb1[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r2.w, r0.x
					add r0.y, r3.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb1[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb1[45].xxyz
					mad_sat r0.yzw, r4.xxyz, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb1[45].xyzx
					mad r2.xyz, r4.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[4], immediateIndexed
					dcl_constantbuffer CB5[12], immediateIndexed
					dcl_constantbuffer CB6[4], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					dp3 r2.x, cb2[0].xyzx, cb2[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb2[0].xyzx
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb5[9].z
					mov r4.y, cb5[10].z
					mov r4.z, cb5[11].z
					dp3 r2.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r3.x, r3.xyzx, r3.xyzx
					sqrt r3.x, r3.x
					add r3.x, -r2.w, r3.x
					mad r2.w, cb3[25].w, r3.x, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.x, cb7[0].x, l(1.000000)
					if_nz r3.x
					  eq r3.y, cb7[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb7[2].xyzx
					  mad r4.xyz, cb7[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb7[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb7[4].xyzx
					  movc r3.yzw, r3.yyyy, r4.xxyz, v2.xxyz
					  add r3.yzw, r3.yyzw, -cb7[6].xxyz
					  mul r4.yzw, r3.yyzw, cb7[5].xxyz
					  mad r3.y, r4.y, l(0.250000), l(0.750000)
					  mad r3.z, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.z, r3.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.y, r4.xyzw, cb2[46].xyzw
					div r3.zw, v8.xxxy, v8.wwww
					sample r4.xyzw, r3.zwzz, t2.xyzw, s2
					add_sat r2.w, r2.w, r4.x
					min r3.y, r2.w, r3.y
					movc r2.w, r3.x, r3.y, r2.w
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r3.xyzw, r3.xyxx, t3.xyzw, s5
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r4.xyzw, r4.xyxx, t4.xyzw, s4
					mul r5.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r4.xxxx, r1.xyzw, r5.xyzw
					mov r4.xyz, v6.xyzx
					mov r4.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r4.xyzw
					add r4.xyz, cb1[4].xyzx, -cb4[3].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					rsq r3.w, r3.w
					mul r4.xyz, r3.wwww, r4.xyzx
					sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, l(7.000000)
					add r3.w, r4.w, l(-1.000000)
					mad r3.w, cb6[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb6[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb6[3].x
					mul r4.xyz, r4.xyzx, r3.wwww
					dp2 r3.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb2[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb2[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r3.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb2[40].xyzw, r0.xyzw
					dp4 r7.y, cb2[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb2[43].xyzw, r8.xyzw
					dp4 r9.y, cb2[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb2[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r2.w, r0.x
					add r0.y, r3.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb2[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb2[45].xxyz
					mad_sat r0.yzw, r4.xxyz, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb2[45].xyzx
					mad r2.xyz, r4.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[4], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[4], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					dp3 r2.x, cb1[0].xyzx, cb1[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb1[0].xyzx
					mov r2.w, cb5[0].x
					add r3.xyz, -v2.xyzx, cb4[r2.w + 64].xyzx
					ishl r3.w, cb5[0].x, l(2)
					mov r4.x, cb4[r3.w + 8].z
					mov r4.y, cb4[r3.w + 9].z
					mov r4.z, cb4[r3.w + 10].z
					dp3 r3.x, r3.xyzx, r4.xyzx
					add r3.yzw, v2.xxyz, -cb2[25].xxyz
					dp3 r3.y, r3.yzwy, r3.yzwy
					sqrt r3.y, r3.y
					add r3.y, -r3.x, r3.y
					mad r3.x, cb2[25].w, r3.y, r3.x
					mad_sat r3.x, r3.x, cb2[24].z, cb2[24].w
					eq r3.y, cb7[0].x, l(1.000000)
					if_nz r3.y
					  eq r3.z, cb7[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb7[2].xyzx
					  mad r4.xyz, cb7[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb7[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb7[4].xyzx
					  movc r4.xyz, r3.zzzz, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb7[6].xyzx
					  mul r4.yzw, r4.xxyz, cb7[5].xxyz
					  mad r3.z, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r3.z
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.z, r4.xyzw, cb1[46].xyzw
					div r4.xy, v8.xyxx, v8.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					add_sat r3.x, r3.x, r4.x
					min r3.z, r3.x, r3.z
					movc r3.x, r3.y, r3.z, r3.x
					mad r3.yz, v1.xxyx, cb0[6].xxyx, cb0[6].zzwz
					sample r4.xyzw, r3.yzyy, t3.xyzw, s5
					mad r3.yz, v1.xxyx, cb0[5].xxyx, cb0[5].zzwz
					sample r5.xyzw, r3.yzyy, t4.xyzw, s4
					mul r6.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r5.xxxx, r1.xyzw, r6.xyzw
					mov r5.xyz, v6.xyzx
					mov r5.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r5.xyzw
					add r3.yzw, -cb3[3].xxyz, cb4[r2.w + 64].xxyz
					dp3 r2.w, r3.yzwy, r3.yzwy
					rsq r2.w, r2.w
					mul r3.yzw, r2.wwww, r3.yyzw
					sample_l r5.xyzw, r3.yzwy, t5.xyzw, s0, l(7.000000)
					add r2.w, r5.w, l(-1.000000)
					mad r2.w, cb6[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb6[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb6[3].x
					mul r3.yzw, r5.xxyz, r2.wwww
					dp2 r2.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb1[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb1[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r2.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb1[40].xyzw, r0.xyzw
					dp4 r7.y, cb1[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb1[43].xyzw, r8.xyzw
					dp4 r9.y, cb1[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb1[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r3.x, r0.x
					add r0.y, r2.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb1[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb1[45].xxyz
					mad_sat r0.yzw, r3.yyzw, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb1[45].xyzx
					mad r2.xyz, r3.yzwy, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r4.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[4], immediateIndexed
					dcl_constantbuffer CB5[12], immediateIndexed
					dcl_constantbuffer CB6[4], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					dp3 r2.x, cb2[0].xyzx, cb2[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb2[0].xyzx
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb5[9].z
					mov r4.y, cb5[10].z
					mov r4.z, cb5[11].z
					dp3 r2.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r3.x, r3.xyzx, r3.xyzx
					sqrt r3.x, r3.x
					add r3.x, -r2.w, r3.x
					mad r2.w, cb3[25].w, r3.x, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.x, cb7[0].x, l(1.000000)
					if_nz r3.x
					  eq r3.y, cb7[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb7[2].xyzx
					  mad r4.xyz, cb7[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb7[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb7[4].xyzx
					  movc r3.yzw, r3.yyyy, r4.xxyz, v2.xxyz
					  add r3.yzw, r3.yyzw, -cb7[6].xxyz
					  mul r4.yzw, r3.yyzw, cb7[5].xxyz
					  mad r3.y, r4.y, l(0.250000), l(0.750000)
					  mad r3.z, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.z, r3.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.y, r4.xyzw, cb2[46].xyzw
					div r3.zw, v8.xxxy, v8.wwww
					sample r4.xyzw, r3.zwzz, t2.xyzw, s2
					add_sat r2.w, r2.w, r4.x
					min r3.y, r2.w, r3.y
					movc r2.w, r3.x, r3.y, r2.w
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r3.xyzw, r3.xyxx, t3.xyzw, s5
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r4.xyzw, r4.xyxx, t4.xyzw, s4
					mul r5.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r4.xxxx, r1.xyzw, r5.xyzw
					mov r4.xyz, v6.xyzx
					mov r4.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r4.xyzw
					add r4.xyz, cb1[4].xyzx, -cb4[3].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					rsq r3.w, r3.w
					mul r4.xyz, r3.wwww, r4.xyzx
					sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, l(7.000000)
					add r3.w, r4.w, l(-1.000000)
					mad r3.w, cb6[3].w, r3.w, l(1.000000)
					log r3.w, r3.w
					mul r3.w, r3.w, cb6[3].y
					exp r3.w, r3.w
					mul r3.w, r3.w, cb6[3].x
					mul r4.xyz, r4.xyzx, r3.wwww
					dp2 r3.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb2[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb2[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r3.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb2[40].xyzw, r0.xyzw
					dp4 r7.y, cb2[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb2[43].xyzw, r8.xyzw
					dp4 r9.y, cb2[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb2[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r2.w, r0.x
					add r0.y, r3.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb2[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb2[45].xxyz
					mad_sat r0.yzw, r4.xxyz, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb2[45].xyzx
					mad r2.xyz, r4.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyz 
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[4], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[4], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 10
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					dp3 r2.x, cb1[0].xyzx, cb1[0].xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, cb1[0].xyzx
					mov r2.w, cb5[0].x
					add r3.xyz, -v2.xyzx, cb4[r2.w + 64].xyzx
					ishl r3.w, cb5[0].x, l(2)
					mov r4.x, cb4[r3.w + 8].z
					mov r4.y, cb4[r3.w + 9].z
					mov r4.z, cb4[r3.w + 10].z
					dp3 r3.x, r3.xyzx, r4.xyzx
					add r3.yzw, v2.xxyz, -cb2[25].xxyz
					dp3 r3.y, r3.yzwy, r3.yzwy
					sqrt r3.y, r3.y
					add r3.y, -r3.x, r3.y
					mad r3.x, cb2[25].w, r3.y, r3.x
					mad_sat r3.x, r3.x, cb2[24].z, cb2[24].w
					eq r3.y, cb7[0].x, l(1.000000)
					if_nz r3.y
					  eq r3.z, cb7[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb7[2].xyzx
					  mad r4.xyz, cb7[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb7[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb7[4].xyzx
					  movc r4.xyz, r3.zzzz, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb7[6].xyzx
					  mul r4.yzw, r4.xxyz, cb7[5].xxyz
					  mad r3.z, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r3.z
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.z, r4.xyzw, cb1[46].xyzw
					div r4.xy, v8.xyxx, v8.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					add_sat r3.x, r3.x, r4.x
					min r3.z, r3.x, r3.z
					movc r3.x, r3.y, r3.z, r3.x
					mad r3.yz, v1.xxyx, cb0[6].xxyx, cb0[6].zzwz
					sample r4.xyzw, r3.yzyy, t3.xyzw, s5
					mad r3.yz, v1.xxyx, cb0[5].xxyx, cb0[5].zzwz
					sample r5.xyzw, r3.yzyy, t4.xyzw, s4
					mul r6.xyzw, r1.xyzw, cb0[8].xyzw
					mad r1.xyzw, -r1.xyzw, cb0[8].xyzw, r1.xyzw
					mad r1.xyzw, r5.xxxx, r1.xyzw, r6.xyzw
					mov r5.xyz, v6.xyzx
					mov r5.w, l(1.000000)
					mul r1.xyzw, r1.xyzw, r5.xyzw
					add r3.yzw, -cb3[3].xxyz, cb4[r2.w + 64].xxyz
					dp3 r2.w, r3.yzwy, r3.yzwy
					rsq r2.w, r2.w
					mul r3.yzw, r2.wwww, r3.yyzw
					sample_l r5.xyzw, r3.yzwy, t5.xyzw, s0, l(7.000000)
					add r2.w, r5.w, l(-1.000000)
					mad r2.w, cb6[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb6[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb6[3].x
					mul r3.yzw, r5.xxyz, r2.wwww
					dp2 r2.w, cb0[2].yzyy, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r6.xy, r5.yzyy, -cb1[45].yzyy
					dp2 r4.w, r6.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp2 r6.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r6.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r7.xy, r6.yzyy, -cb1[45].yzyy
					dp2 r5.w, r7.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					dp3 r2.x, r2.xyzx, r0.xyzx
					mul r2.x, r2.w, r2.x
					mov r0.w, l(1.000000)
					dp4 r7.x, cb1[40].xyzw, r0.xyzw
					dp4 r7.y, cb1[41].xyzw, r0.xyzw
					mul r8.xyzw, r0.yzzx, r0.xyzz
					dp4 r9.x, cb1[43].xyzw, r8.xyzw
					dp4 r9.y, cb1[44].xyzw, r8.xyzw
					mul r0.y, r0.y, r0.y
					mad r0.x, r0.x, r0.x, -r0.y
					mad r0.xy, cb1[45].yzyy, r0.xxxx, r9.xyxx
					add r0.xy, r0.xyxx, r7.xyxx
					dp2 r0.x, r0.xyxx, l(0.382353, 0.018458, 0.000000, 0.000000)
					mad r0.x, r2.x, r3.x, r0.x
					add r0.y, r2.w, r5.w
					add r0.xy, -r4.wwww, r0.xyxx
					div_sat r0.x, r0.x, r0.y
					dp2 r5.x, cb1[39].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r5.xxyz, -cb1[45].xxyz
					mad_sat r0.yzw, r3.yyzw, l(0.000000, 0.020000, 0.020000, 0.020000), r0.yyzw
					dp2 r6.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r6.xyzx, -cb1[45].xyzx
					mad r2.xyz, r3.yzwy, l(0.020000, 0.020000, 0.020000, 0.000000), r2.xyzx
					add_sat r2.xyz, r2.xyzx, cb0[2].xyzx
					add r2.w, -cb0[9].x, l(1.000000)
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add_sat r0.x, r0.x, r2.w
					add r2.xyz, -r0.yzwy, r2.xyzx
					mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
					mul r0.xyz, r0.xyzx, r1.xyzx
					mad o0.xyz, r4.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "gp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.x + 0][9].xyzw
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.y + 0][9].xyzw
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.x + 0][9].xyzw
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.y + 0][9].xyzw
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD_DELTA"
			Tags { "LIGHTMODE" = "FORWARDADD" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero One, Zero One
			GpuProgramID 81943
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb0[1].xyzx
					mad r2.xyz, cb0[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb0[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					mul r3.xyz, v1.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v1.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v1.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o6.xyz, r3.xyzx
					mul r4.xyz, r2.zxyz, r3.yzxy
					mad r2.xyz, r2.yzxy, r3.zxyz, -r4.xyzx
					mul r2.xyz, r2.xyzx, v1.wwww
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o7.xyz, r2.wwww, r2.xyzx
					mul r2.xyzw, r0.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb2[20].xyzw, r0.wwww, r2.xyzw
					mul r0.xyzw, r1.yyyy, cb0[9].xyzw
					mad r0.xyzw, cb0[8].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb0[10].xyzw, r1.zzzz, r0.xyzw
					mad o9.xyzw, cb0[11].xyzw, r1.wwww, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					mul r3.xyz, v1.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v1.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v1.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o6.xyz, r3.xyzx
					mul r4.xyz, r2.zxyz, r3.yzxy
					mad r2.xyz, r2.yzxy, r3.zxyz, -r4.xyzx
					mul r2.xyz, r2.xyzx, v1.wwww
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o7.xyz, r2.wwww, r2.xyzx
					ishl r2.x, cb3[0].x, l(2)
					mul r3.xyzw, r0.yyyy, cb2[r2.x + 25].xyzw
					mad r3.xyzw, cb2[r2.x + 24].xyzw, r0.xxxx, r3.xyzw
					mad r3.xyzw, cb2[r2.x + 26].xyzw, r0.zzzz, r3.xyzw
					mad o8.xyzw, cb2[r2.x + 27].xyzw, r0.wwww, r3.xyzw
					mul r0.xyzw, r1.yyyy, cb0[9].xyzw
					mad r0.xyzw, cb0[8].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb0[10].xyzw, r1.zzzz, r0.xyzw
					mad o9.xyzw, cb0[11].xyzw, r1.wwww, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					mul r3.xyz, v1.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v1.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v1.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o6.xyz, r3.xyzx
					mul r4.xyz, r2.zxyz, r3.yzxy
					mad r2.xyz, r2.yzxy, r3.zxyz, -r4.xyzx
					mul r2.xyz, r2.xyzx, v1.wwww
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o7.xyz, r2.wwww, r2.xyzx
					mul r2.xyzw, r0.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb2[20].xyzw, r0.wwww, r2.xyzw
					mul r0.xyzw, r1.yyyy, cb0[9].xyzw
					mad r0.xyzw, cb0[8].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb0[10].xyzw, r1.zzzz, r0.xyzw
					mad o9.xyzw, cb0[11].xyzw, r1.wwww, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					mul r3.xyz, v1.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v1.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v1.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o6.xyz, r3.xyzx
					mul r4.xyz, r2.zxyz, r3.yzxy
					mad r2.xyz, r2.yzxy, r3.zxyz, -r4.xyzx
					mul r2.xyz, r2.xyzx, v1.wwww
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o7.xyz, r2.wwww, r2.xyzx
					ishl r2.x, cb3[0].x, l(2)
					mul r3.xyzw, r0.yyyy, cb2[r2.x + 25].xyzw
					mad r3.xyzw, cb2[r2.x + 24].xyzw, r0.xxxx, r3.xyzw
					mad r3.xyzw, cb2[r2.x + 26].xyzw, r0.zzzz, r3.xyzw
					mad o8.xyzw, cb2[r2.x + 27].xyzw, r0.wwww, r3.xyzw
					mul r0.xyzw, r1.yyyy, cb0[9].xyzw
					mad r0.xyzw, cb0[8].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb0[10].xyzw, r1.zzzz, r0.xyzw
					mad o9.xyzw, cb0[11].xyzw, r1.wwww, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o9.zw, r0.zzzw
					add o9.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o9.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o9.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o9.zw, r0.zzzw
					add o9.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad o4.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o8.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o9.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o9.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o8.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[2], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_output o3.xy
					dcl_output o3.zw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 4
					mov o0.xyzw, v0.xyzw
					mov o1.xyz, v2.xyzx
					mov o2.xyzw, v1.xyzw
					mov o3.xy, v3.xyxx
					mov o3.zw, v4.xxxy
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mov o4.xyzw, r1.xyzw
					add o9.xyz, r1.xyzx, -cb0[1].xyzx
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].xyzx
					mad r2.xyz, cb1[0].xyzx, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].xyzx, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o6.xyz, r2.xyzx
					mul r3.xyz, r1.zxyz, r2.yzxy
					mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.xyz, r1.xyzx, v1.wwww
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o7.xyz, r1.wwww, r1.xyzx
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o8.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s4
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t2.xyzw, s1
					mul r0.w, r0.w, r2.x
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s4
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t2.xyzw, s1
					mul r0.w, r0.w, r2.x
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 3
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s1
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v2.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v2.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v2.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t3.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t2.xyzw, s2
					mul r2.yzw, r1.xxyz, cb0[8].xxyz
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[9].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 3
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s1
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v2.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v2.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v2.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t3.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t2.xyzw, s2
					mul r2.yzw, r1.xxyz, cb0[8].xxyz
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[9].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyzw, v2.yyyy, cb0[3].xyzw
					mad r2.xyzw, cb0[2].xyzw, v2.xxxx, r2.xyzw
					mad r2.xyzw, cb0[4].xyzw, v2.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[5].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t2.xyzw, s1
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t3.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyzw, v2.yyyy, cb0[3].xyzw
					mad r2.xyzw, cb0[2].xyzw, v2.xxxx, r2.xyzw
					mad r2.xyzw, cb0[4].xyzw, v2.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[5].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t2.xyzw, s1
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t3.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t2.xyzw, s2
					sample r2.xyzw, r2.xyzx, t3.xyzw, s1
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t2.xyzw, s2
					sample r2.xyzw, r2.xyzx, t3.xyzw, s1
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s4
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					mul r2.xy, v2.yyyy, cb0[3].xyxx
					mad r2.xy, cb0[2].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[4].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[5].xyxx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					sample r2.xyzw, r2.xyxx, t2.xyzw, s1
					mul r0.w, r0.w, r2.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s4
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					mul r2.xy, v2.yyyy, cb0[3].xyxx
					mad r2.xy, cb0[2].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[4].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[5].xyxx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
					sample r2.xyzw, r2.xyxx, t2.xyzw, s1
					mul r0.w, r0.w, r2.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyzw, v2.yyyy, cb0[3].xyzw
					mad r2.xyzw, cb0[2].xyzw, v2.xxxx, r2.xyzw
					mad r2.xyzw, cb0[4].xyzw, v2.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[5].xyzw
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r3.x, cb5[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb5[2].xxyz
					  mad r3.yzw, cb5[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb5[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb5[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
					mul r4.xyzw, v2.yyyy, cb3[9].xyzw
					mad r4.xyzw, cb3[8].xyzw, v2.xxxx, r4.xyzw
					mad r4.xyzw, cb3[10].xyzw, v2.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb3[11].xyzw
					div r3.yzw, r4.xxyz, r4.wwww
					sample_c_lz r3.y, r3.yzyy, t6.xxxx, s1, r3.w
					add r3.z, -cb3[24].x, l(1.000000)
					mad r3.y, r3.y, r3.z, cb3[24].x
					add_sat r0.w, r0.w, r3.y
					min r3.x, r0.w, r3.x
					movc r0.w, r1.w, r3.x, r0.w
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t2.xyzw, s2
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t3.xyzw, s3
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyzw, v2.yyyy, cb0[3].xyzw
					mad r2.xyzw, cb0[2].xyzw, v2.xxxx, r2.xyzw
					mad r2.xyzw, cb0[4].xyzw, v2.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[5].xyzw
					mov r0.w, cb4[0].x
					add r3.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r3.x, cb5[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb5[2].xxyz
					  mad r3.yzw, cb5[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb5[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb5[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb1[46].xyzw
					mul r4.xyzw, v2.yyyy, cb2[9].xyzw
					mad r4.xyzw, cb2[8].xyzw, v2.xxxx, r4.xyzw
					mad r4.xyzw, cb2[10].xyzw, v2.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb2[11].xyzw
					div r3.yzw, r4.xxyz, r4.wwww
					sample_c_lz r3.y, r3.yzyy, t6.xxxx, s1, r3.w
					add r3.z, -cb2[24].x, l(1.000000)
					mad r3.y, r3.y, r3.z, cb2[24].x
					add_sat r0.w, r0.w, r3.y
					min r3.x, r0.w, r3.x
					movc r0.w, r1.w, r3.x, r0.w
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t2.xyzw, s2
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t3.xyzw, s3
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 9
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[13].xyxx, cb0[13].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyzw, v2.yyyy, cb0[8].xyzw
					mad r2.xyzw, cb0[7].xyzw, v2.xxxx, r2.xyzw
					mad r2.xyzw, cb0[9].xyzw, v2.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[10].xyzw
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r3.x, cb5[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb5[2].xxyz
					  mad r3.yzw, cb5[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb5[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb5[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
					lt r3.y, r0.w, l(0.990000)
					if_nz r3.y
					  mul r4.xyzw, v2.yyyy, cb3[9].xyzw
					  mad r4.xyzw, cb3[8].xyzw, v2.xxxx, r4.xyzw
					  mad r4.xyzw, cb3[10].xyzw, v2.zzzz, r4.xyzw
					  add r4.xyzw, r4.xyzw, cb3[11].xyzw
					  div r3.yzw, r4.xxyz, r4.wwww
					  mad r4.xy, r3.yzyy, cb0[6].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r4.xy, r4.xyxx
					  mad r3.yz, r3.yyzy, cb0[6].zzwz, -r4.xxyx
					  add r5.xyzw, r3.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r6.xw, r5.xxxz, r5.xxxz
					  mad r4.zw, r6.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r3.yyyz
					  add r5.xz, -r3.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r7.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xz, -r7.xxyx, r7.xxyx, r5.xxzx
					  max r3.yz, r3.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r3.yz, -r3.yyzy, r3.yyzy, r5.yywy
					  mov r7.x, r4.z
					  mov r7.y, r5.x
					  mov r7.z, r3.y
					  mov r7.w, r6.x
					  mul r7.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r6.x, r4.w
					  mov r6.y, r5.z
					  mov r6.z, r3.z
					  mul r5.xyzw, r6.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r6.xyzw, r7.ywyw, r7.xzxz
					  add r8.xyzw, r5.yyww, r5.xxzz
					  div r3.yz, r7.yywy, r6.zzwz
					  add r3.yz, r3.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r4.zw, r5.yyyw, r8.yyyw
					  add r4.zw, r4.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r5.xy, r3.yzyy, cb0[6].xxxx
					  mul r5.zw, r4.zzzw, cb0[6].yyyy
					  mul r6.xyzw, r6.xyzw, r8.xyzw
					  mad r7.xyzw, r4.xyxy, cb0[6].xyxy, r5.xzyz
					  sample_c_lz r3.y, r7.xyxx, t6.xxxx, s1, r3.w
					  sample_c_lz r3.z, r7.zwzz, t6.xxxx, s1, r3.w
					  mul r3.z, r3.z, r6.y
					  mad r3.y, r6.x, r3.y, r3.z
					  mad r4.xyzw, r4.xyxy, cb0[6].xyxy, r5.xwyw
					  sample_c_lz r3.z, r4.xyxx, t6.xxxx, s1, r3.w
					  mad r3.y, r6.z, r3.z, r3.y
					  sample_c_lz r3.z, r4.zwzz, t6.xxxx, s1, r3.w
					  mad r3.y, r6.w, r3.z, r3.y
					  add r3.z, -cb3[24].x, l(1.000000)
					  mad r3.y, r3.y, r3.z, cb3[24].x
					else 
					  mov r3.y, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.y
					min r3.x, r0.w, r3.x
					movc r0.w, r1.w, r3.x, r0.w
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t2.xyzw, s2
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t3.xyzw, s3
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[17].xxyz
					mad r1.xyz, -r1.xyzx, cb0[17].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[18].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[11].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 9
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[13].xyxx, cb0[13].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyzw, v2.yyyy, cb0[8].xyzw
					mad r2.xyzw, cb0[7].xyzw, v2.xxxx, r2.xyzw
					mad r2.xyzw, cb0[9].xyzw, v2.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[10].xyzw
					mov r0.w, cb4[0].x
					add r3.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r3.x, cb5[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb5[2].xxyz
					  mad r3.yzw, cb5[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb5[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb5[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb1[46].xyzw
					lt r3.y, r0.w, l(0.990000)
					if_nz r3.y
					  mul r4.xyzw, v2.yyyy, cb2[9].xyzw
					  mad r4.xyzw, cb2[8].xyzw, v2.xxxx, r4.xyzw
					  mad r4.xyzw, cb2[10].xyzw, v2.zzzz, r4.xyzw
					  add r4.xyzw, r4.xyzw, cb2[11].xyzw
					  div r3.yzw, r4.xxyz, r4.wwww
					  mad r4.xy, r3.yzyy, cb0[6].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r4.xy, r4.xyxx
					  mad r3.yz, r3.yyzy, cb0[6].zzwz, -r4.xxyx
					  add r5.xyzw, r3.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r6.xw, r5.xxxz, r5.xxxz
					  mad r4.zw, r6.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r3.yyyz
					  add r5.xz, -r3.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r7.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xz, -r7.xxyx, r7.xxyx, r5.xxzx
					  max r3.yz, r3.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r3.yz, -r3.yyzy, r3.yyzy, r5.yywy
					  mov r7.x, r4.z
					  mov r7.y, r5.x
					  mov r7.z, r3.y
					  mov r7.w, r6.x
					  mul r7.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r6.x, r4.w
					  mov r6.y, r5.z
					  mov r6.z, r3.z
					  mul r5.xyzw, r6.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r6.xyzw, r7.ywyw, r7.xzxz
					  add r8.xyzw, r5.yyww, r5.xxzz
					  div r3.yz, r7.yywy, r6.zzwz
					  add r3.yz, r3.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r4.zw, r5.yyyw, r8.yyyw
					  add r4.zw, r4.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r5.xy, r3.yzyy, cb0[6].xxxx
					  mul r5.zw, r4.zzzw, cb0[6].yyyy
					  mul r6.xyzw, r6.xyzw, r8.xyzw
					  mad r7.xyzw, r4.xyxy, cb0[6].xyxy, r5.xzyz
					  sample_c_lz r3.y, r7.xyxx, t6.xxxx, s1, r3.w
					  sample_c_lz r3.z, r7.zwzz, t6.xxxx, s1, r3.w
					  mul r3.z, r3.z, r6.y
					  mad r3.y, r6.x, r3.y, r3.z
					  mad r4.xyzw, r4.xyxy, cb0[6].xyxy, r5.xwyw
					  sample_c_lz r3.z, r4.xyxx, t6.xxxx, s1, r3.w
					  mad r3.y, r6.z, r3.z, r3.y
					  sample_c_lz r3.z, r4.zwzz, t6.xxxx, s1, r3.w
					  mad r3.y, r6.w, r3.z, r3.y
					  add r3.z, -cb2[24].x, l(1.000000)
					  mad r3.y, r3.y, r3.z, cb2[24].x
					else 
					  mov r3.y, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.y
					min r3.x, r0.w, r3.x
					movc r0.w, r1.w, r3.x, r0.w
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t2.xyzw, s2
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t3.xyzw, s3
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[17].xxyz
					mad r1.xyz, -r1.xyzx, cb0[17].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[18].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[11].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s4
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r0.w, r2.xyzx, r3.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v2.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v2.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v2.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.x
					  sample r2.xyzw, r2.xzwx, t4.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					div r2.yz, v8.xxyx, v8.wwww
					sample r3.xyzw, r2.yzyy, t2.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r2.x, r0.w, r2.x
					movc r0.w, r1.w, r2.x, r0.w
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					mul r2.yzw, r1.xxyz, cb0[8].xxyz
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[9].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s4
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s2
					mov r0.w, cb4[0].x
					add r2.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r3.x, cb3[r0.w + 8].z
					mov r3.y, cb3[r0.w + 9].z
					mov r3.z, cb3[r0.w + 10].z
					dp3 r0.w, r2.xyzx, r3.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v2.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v2.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v2.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.x
					  sample r2.xyzw, r2.xzwx, t4.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb1[46].xyzw
					div r2.yz, v8.xxyx, v8.wwww
					sample r3.xyzw, r2.yzyy, t2.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r2.x, r0.w, r2.x
					movc r0.w, r1.w, r2.x, r0.w
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					mul r2.yzw, r1.xxyz, cb0[8].xxyz
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[9].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xy, v2.yyyy, cb0[3].xyxx
					mad r2.xy, cb0[2].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[4].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[5].xyxx
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.z, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.zzzz, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.z, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r2.z
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.z, r3.xyzw, cb2[46].xyzw
					div r3.xy, v8.xyxx, v8.wwww
					sample r3.xyzw, r3.xyxx, t2.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r2.z, r0.w, r2.z
					movc r0.w, r1.w, r2.z, r0.w
					sample r2.xyzw, r2.xyxx, t3.xyzw, s2
					mul r0.w, r0.w, r2.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xy, v2.yyyy, cb0[3].xyxx
					mad r2.xy, cb0[2].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[4].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[5].xyxx
					mov r0.w, cb4[0].x
					add r3.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.z, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.zzzz, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.z, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r2.z
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.z, r3.xyzw, cb1[46].xyzw
					div r3.xy, v8.xyxx, v8.wwww
					sample r3.xyzw, r3.xyxx, t2.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r2.z, r0.w, r2.z
					movc r0.w, r1.w, r2.z, r0.w
					sample r2.xyzw, r2.xyxx, t3.xyzw, s2
					mul r0.w, r0.w, r2.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					add r3.xyz, v2.xyzx, -cb2[1].xyzx
					max r3.w, |r3.y|, |r3.x|
					max r3.w, |r3.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.x, r3.xyzx, t5.xxxx, s1, r3.w
					add r3.y, -cb3[24].x, l(1.000000)
					mad r3.x, r3.x, r3.y, cb3[24].x
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t2.xyzw, s2
					mul r0.w, r0.w, r2.x
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					mov r0.w, cb4[0].x
					add r3.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					add r3.xyz, v2.xyzx, -cb1[1].xyzx
					max r3.w, |r3.y|, |r3.x|
					max r3.w, |r3.z|, r3.w
					add r3.w, r3.w, -cb1[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb1[2].w
					div r3.w, cb1[2].y, r3.w
					add r3.w, r3.w, -cb1[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.x, r3.xyzx, t5.xxxx, s1, r3.w
					add r3.y, -cb2[24].x, l(1.000000)
					mad r3.x, r3.x, r3.y, cb2[24].x
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t2.xyzw, s2
					mul r0.w, r0.w, r2.x
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 6
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					lt r3.x, r0.w, l(0.990000)
					if_nz r3.x
					  add r3.xyz, v2.xyzx, -cb2[1].xyzx
					  max r3.w, |r3.y|, |r3.x|
					  max r3.w, |r3.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r4.xyz, r3.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.x, r4.xyzx, t5.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.y, r5.xyzx, t5.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.z, r5.xyzx, t5.xxxx, s1, r3.w
					  add r3.xyz, r3.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.w, r3.xyzx, t5.xxxx, s1, r3.w
					  dp4 r3.x, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.y, -cb3[24].x, l(1.000000)
					  mad r3.x, r3.x, r3.y, cb3[24].x
					else 
					  mov r3.x, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t2.xyzw, s2
					mul r0.w, r0.w, r2.x
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 6
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s5
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					mov r0.w, cb4[0].x
					add r3.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					lt r3.x, r0.w, l(0.990000)
					if_nz r3.x
					  add r3.xyz, v2.xyzx, -cb1[1].xyzx
					  max r3.w, |r3.y|, |r3.x|
					  max r3.w, |r3.z|, r3.w
					  add r3.w, r3.w, -cb1[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb1[2].w
					  div r3.w, cb1[2].y, r3.w
					  add r3.w, r3.w, -cb1[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r4.xyz, r3.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.x, r4.xyzx, t5.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.y, r5.xyzx, t5.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.z, r5.xyzx, t5.xxxx, s1, r3.w
					  add r3.xyz, r3.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.w, r3.xyzx, t5.xxxx, s1, r3.w
					  dp4 r3.x, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.y, -cb2[24].x, l(1.000000)
					  mad r3.x, r3.x, r3.y, cb2[24].x
					else 
					  mov r3.x, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t2.xyzw, s2
					mul r0.w, r0.w, r2.x
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s4
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					add r3.xyz, v2.xyzx, -cb2[1].xyzx
					max r3.w, |r3.y|, |r3.x|
					max r3.w, |r3.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.x, r3.xyzx, t6.xxxx, s1, r3.w
					add r3.y, -cb3[24].x, l(1.000000)
					mad r3.x, r3.x, r3.y, cb3[24].x
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t2.xyzw, s3
					sample r2.xyzw, r2.xyzx, t3.xyzw, s2
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					mov r0.w, cb4[0].x
					add r3.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					add r3.xyz, v2.xyzx, -cb1[1].xyzx
					max r3.w, |r3.y|, |r3.x|
					max r3.w, |r3.z|, r3.w
					add r3.w, r3.w, -cb1[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb1[2].w
					div r3.w, cb1[2].y, r3.w
					add r3.w, r3.w, -cb1[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.x, r3.xyzx, t6.xxxx, s1, r3.w
					add r3.y, -cb2[24].x, l(1.000000)
					mad r3.x, r3.x, r3.y, cb2[24].x
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t2.xyzw, s3
					sample r2.xyzw, r2.xyzx, t3.xyzw, s2
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 6
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					add r3.xyz, -v2.xyzx, cb1[4].xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					lt r3.x, r0.w, l(0.990000)
					if_nz r3.x
					  add r3.xyz, v2.xyzx, -cb2[1].xyzx
					  max r3.w, |r3.y|, |r3.x|
					  max r3.w, |r3.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r4.xyz, r3.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.x, r4.xyzx, t6.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.y, r5.xyzx, t6.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.z, r5.xyzx, t6.xxxx, s1, r3.w
					  add r3.xyz, r3.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.w, r3.xyzx, t6.xxxx, s1, r3.w
					  dp4 r3.x, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.y, -cb3[24].x, l(1.000000)
					  mad r3.x, r3.x, r3.y, cb3[24].x
					else 
					  mov r3.x, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t2.xyzw, s3
					sample r2.xyzw, r2.xyzx, t3.xyzw, s2
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint       
					// TEXCOORD                 6   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 6
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					mad r1.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s6
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r1.yzw, r1.yyyy, v5.xxyz
					mad r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
					mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mul r2.xyz, v2.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v2.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v2.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					mov r0.w, cb4[0].x
					add r3.xyz, -v2.xyzx, cb3[r0.w + 64].xyzx
					ishl r0.w, cb4[0].x, l(2)
					mov r4.x, cb3[r0.w + 8].z
					mov r4.y, cb3[r0.w + 9].z
					mov r4.z, cb3[r0.w + 10].z
					dp3 r0.w, r3.xyzx, r4.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb2[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					lt r3.x, r0.w, l(0.990000)
					if_nz r3.x
					  add r3.xyz, v2.xyzx, -cb1[1].xyzx
					  max r3.w, |r3.y|, |r3.x|
					  max r3.w, |r3.z|, r3.w
					  add r3.w, r3.w, -cb1[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb1[2].w
					  div r3.w, cb1[2].y, r3.w
					  add r3.w, r3.w, -cb1[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r4.xyz, r3.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.x, r4.xyzx, t6.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r4.y, r5.xyzx, t6.xxxx, s1, r3.w
					  add r5.xyz, r3.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.z, r5.xyzx, t6.xxxx, s1, r3.w
					  add r3.xyz, r3.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r4.w, r3.xyzx, t6.xxxx, s1, r3.w
					  dp4 r3.x, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.y, -cb2[24].x, l(1.000000)
					  mad r3.x, r3.x, r3.y, cb2[24].x
					else 
					  mov r3.x, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.x
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t2.xyzw, s3
					sample r2.xyzw, r2.xyzx, t3.xyzw, s2
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r2.xyzw, r2.xyxx, t4.xyzw, s5
					mul r2.yzw, r1.xxyz, cb0[12].xxyz
					mad r1.xyz, -r1.xyzx, cb0[12].xyzx, r1.xyzx
					mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
					mul r1.xyz, r1.xyzx, v6.xyzx
					add r2.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					mul_sat r0.x, r0.w, r0.x
					add r0.x, r0.x, r0.x
					round_ni r0.x, r0.x
					add r0.y, -cb0[13].x, l(1.000000)
					mad_sat r0.x, r0.y, r0.w, r0.x
					mul r0.xyz, r0.xxxx, cb0[6].xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mov r0.w, l(1.000000)
					mul o0.xyzw, r0.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "gp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.x + 0][9].xyzw
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.y + 0][9].xyzw
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.x + 0][9].xyzw
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.y + 0][9].xyzw
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.x + 0][9].xyzw
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.y + 0][9].xyzw
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.x + 0][9].xyzw
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyzw        9     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyzw
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyzw
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyzw, v[r0.y + 0][9].xyzw
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.x + 0][9].xyzx
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.y + 0][9].xyzx
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.x + 0][9].xyzx
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.y + 0][9].xyzx
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.x + 0][9].xyzx
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.y + 0][9].xyzx
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					mov r0.x, l(0)
					loop 
					  ige r0.y, r0.x, l(3)
					  breakc_nz r0.y
					  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.x + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.x + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[18].xyzw
					  mad r3.xyzw, cb1[17].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[19].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[20].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.x + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.x + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.x + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.y, r3.xyzx, r3.xyzx
					  rsq r0.y, r0.y
					  mul r0.yzw, r0.yyyy, r3.xxyz
					  mad r1.xyzw, cb0[3].xyzw, v[r0.x + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.x + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r0.yzwy
					  mov o4.xyz, v[r0.x + 0][6].xyzx
					  mov o5.xyz, v[r0.x + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.x + 0][9].xyzx
					  emit 
					  iadd r0.x, r0.x, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "NO_OUTLINE" }
					"!!DX11GeometrySM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float       
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1     zw        3     NONE   float     zw
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					// TEXCOORD                 5   xyz         7     NONE   float   xyz 
					// CLIP_POS                 0   xyzw        8     NONE   float       
					// TEXCOORD                 6   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyz         3     NONE   float   xyz 
					// TEXCOORD                 4   xyz         4     NONE   float   xyz 
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// IS_OUTLINE               0   x           7     NONE    uint   x   
					// TEXCOORD                 6   xyz         8     NONE   float   xyz 
					//
					gs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input_siv v[3][0].xyzw, position
					dcl_input v[3][1].xyz
					dcl_input v[3][2].xyzw
					dcl_input v[3][3].xy
					dcl_input v[3][3].zw
					dcl_input v[3][4].xyzw
					dcl_input v[3][5].xyz
					dcl_input v[3][6].xyz
					dcl_input v[3][7].xyz
					dcl_input v[3][8].xyzw
					dcl_input v[3][9].xyz
					dcl_temps 4
					dcl_inputprimitive triangle 
					dcl_outputtopology trianglestrip 
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_output o8.xyz
					dcl_maxout 6
					ishl r0.x, cb2[0].x, l(2)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(3)
					  breakc_nz r0.z
					  mul r1.xyzw, cb0[1].xyzw, v[r0.y + 0][0].yyyy
					  mad r1.xyzw, cb0[0].xyzw, v[r0.y + 0][0].xxxx, r1.xyzw
					  mad r1.xyzw, cb0[2].xyzw, v[r0.y + 0][0].zzzz, r1.xyzw
					  add r2.xyzw, r1.xyzw, cb0[3].xyzw
					  mul r3.xyzw, r2.yyyy, cb1[r0.x + 25].xyzw
					  mad r3.xyzw, cb1[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					  mad r3.xyzw, cb1[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					  mad r2.xyzw, cb1[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					  dp3 r3.x, v[r0.y + 0][1].xyzx, cb0[4].xyzx
					  dp3 r3.y, v[r0.y + 0][1].xyzx, cb0[5].xyzx
					  dp3 r3.z, v[r0.y + 0][1].xyzx, cb0[6].xyzx
					  dp3 r0.z, r3.xyzx, r3.xyzx
					  rsq r0.z, r0.z
					  mul r3.xyz, r0.zzzz, r3.xyzx
					  mad r1.xyzw, cb0[3].xyzw, v[r0.y + 0][0].wwww, r1.xyzw
					  mov o0.xyzw, r2.xyzw
					  mov o1.xyzw, v[r0.y + 0][3].xyzw
					  mov o2.xyzw, r1.xyzw
					  mov o3.xyz, r3.xyzx
					  mov o4.xyz, v[r0.y + 0][6].xyzx
					  mov o5.xyz, v[r0.y + 0][7].xyzx
					  mov o6.xyzw, l(1.000000,1.000000,1.000000,0)
					  mov o7.x, l(0)
					  mov o8.xyz, v[r0.y + 0][9].xyzx
					  emit 
					  iadd r0.y, r0.y, l(1)
					endloop 
					cut 
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "SHADOW_CASTER"
			Tags { "LIGHTMODE" = "SHADOWCASTER" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 133167
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
	CustomEditor "FlatLitToonInspector"
}