Shader "NoeNoe/Projection Overlay Texture (2D Tiled Transparent)" {
	Properties {
		_Color ("Color", Vector) = (1,1,1,1)
		_MainTex ("Main texture (RGB)", 2D) = "white" {}
		_CrossfadeOverlay ("Crossfade Overlay", Range(0, 2)) = 1
		_EquirectangularProjectionTextureRGB ("Equirectangular Projection Texture (RGB)", 2D) = "white" {}
		_SpeedX ("Speed X", Range(-1, 1)) = 0
		_SpeedY ("Speed Y", Range(-1, 1)) = 0
		_Ramp ("Ramp", 2D) = "white" {}
		_Intensity ("Intensity", Range(0, 10)) = 1
		_Opacity ("Opacity", Range(0, 1)) = 1
		[HideInInspector] _Cutoff ("Alpha cutoff", Range(0, 1)) = 0.5
	}
	SubShader {
		Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		Pass {
			Name "FORWARD"
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" "SHADOWSUPPORT" = "true" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ZClip Off
			ZWrite Off
			GpuProgramID 59599
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, cb2[0].xyzx
					dp3_sat r0.x, r0.xyzx, r1.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					add_sat r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r1.xyz, -v2.zxyz, cb1[4].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[9].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[9].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[9].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul o0.w, r1.w, cb0[9].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[4].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[4].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[7].xxxx
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, cb2[0].xyzx
					dp3_sat r0.x, r0.xyzx, r1.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					add_sat r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mov r0.w, cb4[0].x
					add r1.xyz, -v2.zxyz, cb3[r0.w + 64].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[9].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[9].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[9].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul o0.w, r1.w, cb0[9].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[4].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[4].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[7].xxxx
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, cb2[0].xyzx
					dp3_sat r0.x, r0.xyzx, r1.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					add_sat r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r1.xyz, -v2.zxyz, cb1[4].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[9].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[9].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[9].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul o0.w, r1.w, cb0[9].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[4].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[4].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[7].xxxx
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v3.xyzx
					dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, cb2[0].xyzx
					dp3_sat r0.x, r0.xyzx, r1.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					add_sat r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mov r0.w, cb4[0].x
					add r1.xyz, -v2.zxyz, cb3[r0.w + 64].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[9].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[9].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[9].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul o0.w, r1.w, cb0[9].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[4].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[4].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[7].xxxx
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD_DELTA"
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend One One, One One
			ZClip Off
			ZWrite Off
			GpuProgramID 80365
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					mov o2.xyzw, r0.xyzw
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[3].xyzx
					mad r1.xyz, cb0[2].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[4].xyzx, r0.zzzz, r1.xyzx
					mad o4.xyz, cb0[5].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					ishl r2.x, cb3[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb2[r2.x + 25].xyzw
					mad r3.xyzw, cb2[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb2[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad o0.xyzw, cb2[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o1.xy, v2.xyxx
					mov o2.xyzw, r0.xyzw
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[3].xyzx
					mad r1.xyz, cb0[2].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[4].xyzx, r0.zzzz, r1.xyzx
					mad o4.xyz, cb0[5].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					mov o2.xyzw, r0.xyzw
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[3].xyzw
					mad r1.xyzw, cb0[2].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[4].xyzw, r0.zzzz, r1.xyzw
					mad o4.xyzw, cb0[5].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					ishl r2.x, cb3[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb2[r2.x + 25].xyzw
					mad r3.xyzw, cb2[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb2[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad o0.xyzw, cb2[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o1.xy, v2.xyxx
					mov o2.xyzw, r0.xyzw
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[3].xyzw
					mad r1.xyzw, cb0[2].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[4].xyzw, r0.zzzz, r1.xyzw
					mad o4.xyzw, cb0[5].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v2.xyxx
					mov o2.xyzw, r0.xyzw
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[3].xyzx
					mad r1.xyz, cb0[2].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[4].xyzx, r0.zzzz, r1.xyzx
					mad o4.xyz, cb0[5].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					ishl r2.x, cb3[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb2[r2.x + 25].xyzw
					mad r3.xyzw, cb2[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb2[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad o0.xyzw, cb2[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o1.xy, v2.xyxx
					mov o2.xyzw, r0.xyzw
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[3].xyzx
					mad r1.xyz, cb0[2].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[4].xyzx, r0.zzzz, r1.xyzx
					mad o4.xyz, cb0[5].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float     zw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mul r1.xy, r0.yyyy, cb0[3].xyxx
					mad r1.xy, cb0[2].xyxx, r0.xxxx, r1.xyxx
					mad r1.xy, cb0[4].xyxx, r0.zzzz, r1.xyxx
					mad o1.zw, cb0[5].xxxy, r0.wwww, r1.xxxy
					mov o2.xyzw, r0.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb1[4].xyzx
					dp3 r0.y, v1.xyzx, cb1[5].xyzx
					dp3 r0.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float     zw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					ishl r2.x, cb3[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb2[r2.x + 25].xyzw
					mad r3.xyzw, cb2[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb2[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad o0.xyzw, cb2[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mul r1.xy, r0.yyyy, cb0[3].xyxx
					mad r1.xy, cb0[2].xyxx, r0.xxxx, r1.xyxx
					mad r1.xy, cb0[4].xyxx, r0.zzzz, r1.xyxx
					mad o1.zw, cb0[5].xxxy, r0.wwww, r1.xxxy
					mov o2.xyzw, r0.xyzw
					mov o1.xy, v2.xyxx
					dp3 r0.x, v1.xyzx, cb1[4].xyzx
					dp3 r0.y, v1.xyzx, cb1[5].xyzx
					dp3 r0.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					dp3 r1.x, v4.xyzx, v4.xyzx
					sample r1.xyzw, r1.xxxx, t0.xyzw, s0
					mad_sat r0.yzw, cb0[6].xxyz, r1.xxxx, r0.yyzw
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r1.xyz, -v2.zxyz, cb1[4].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s1
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t2.xyzw, s2
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					dp3 r1.x, v4.xyzx, v4.xyzx
					sample r1.xyzw, r1.xxxx, t0.xyzw, s0
					mad_sat r0.yzw, cb0[6].xxyz, r1.xxxx, r0.yyzw
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mov r0.w, cb4[0].x
					add r1.xyz, -v2.zxyz, cb3[r0.w + 64].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s1
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t2.xyzw, s2
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					add_sat r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r1.xyz, -v2.zxyz, cb1[4].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[9].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[9].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[9].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[9].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[4].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[4].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[7].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					add_sat r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mov r0.w, cb4[0].x
					add r1.xyz, -v2.zxyz, cb3[r0.w + 64].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[9].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[9].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[9].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[9].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[4].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[4].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[7].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t4.xyzw, s4
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					div r0.yz, v4.xxyx, v4.wwww
					add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r1.xyzw, r0.yzyy, t0.xyzw, s0
					lt r0.y, l(0.000000), v4.z
					and r0.y, r0.y, l(0x3f800000)
					mul r0.y, r1.w, r0.y
					dp3 r0.z, v4.xyzx, v4.xyzx
					sample r1.xyzw, r0.zzzz, t1.xyzw, s1
					mul r0.y, r0.y, r1.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[44].xyzx
					mad_sat r0.yzw, cb0[6].xxyz, r0.yyyy, r1.xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r1.xyz, -v2.zxyz, cb1[4].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s2
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t4.xyzw, s4
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					div r0.yz, v4.xxyx, v4.wwww
					add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r1.xyzw, r0.yzyy, t0.xyzw, s0
					lt r0.y, l(0.000000), v4.z
					and r0.y, r0.y, l(0x3f800000)
					mul r0.y, r1.w, r0.y
					dp3 r0.z, v4.xyzx, v4.xyzx
					sample r1.xyzw, r0.zzzz, t1.xyzw, s1
					mul r0.y, r0.y, r1.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[44].xyzx
					mad_sat r0.yzw, cb0[6].xxyz, r0.yyyy, r1.xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mov r0.w, cb4[0].x
					add r1.xyz, -v2.zxyz, cb3[r0.w + 64].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s2
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t4.xyzw, s4
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp3 r0.y, v4.xyzx, v4.xyzx
					sample r1.xyzw, r0.yyyy, t0.xyzw, s1
					sample r2.xyzw, v4.xyzx, t1.xyzw, s0
					mul r0.y, r1.x, r2.w
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[44].xyzx
					mad_sat r0.yzw, cb0[6].xxyz, r0.yyyy, r1.xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r1.xyz, -v2.zxyz, cb1[4].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s2
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t4.xyzw, s4
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp3 r0.y, v4.xyzx, v4.xyzx
					sample r1.xyzw, r0.yyyy, t0.xyzw, s1
					sample r2.xyzw, v4.xyzx, t1.xyzw, s0
					mul r0.y, r1.x, r2.w
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[44].xyzx
					mad_sat r0.yzw, cb0[6].xxyz, r0.yyyy, r1.xxyz
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mov r0.w, cb4[0].x
					add r1.xyz, -v2.zxyz, cb3[r0.w + 64].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s2
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t3.xyzw, s3
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float     zw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					sample r1.xyzw, v1.zwzz, t0.xyzw, s0
					mad_sat r0.yzw, cb0[6].xxyz, r1.wwww, r0.yyzw
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add r1.xyz, -v2.zxyz, cb1[4].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s1
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t2.xyzw, s2
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float     zw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[45], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v3.xyzx, v3.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v3.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mov r0.y, l(0.200000)
					mad r0.xy, r0.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					dp3 r0.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add_sat r0.x, r0.x, l(0.800000)
					mul r0.x, r0.x, l(3.000000)
					round_ni r0.x, r0.x
					dp2 r1.x, cb2[38].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r1.xxyz, -cb2[44].xxyz
					sample r1.xyzw, v1.zwzz, t0.xyzw, s0
					mad_sat r0.yzw, cb0[6].xxyz, r1.wwww, r0.yyzw
					mul r0.xyz, r0.xxxx, r0.yzwy
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mov r0.w, cb4[0].x
					add r1.xyz, -v2.zxyz, cb3[r0.w + 64].zxyz
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r0.w, |r1.y|, |r1.x|
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					min r1.w, |r1.y|, |r1.x|
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, r0.w
					mad r2.x, r1.w, l(0.020835), l(-0.085133)
					mad r2.x, r1.w, r2.x, l(0.180141)
					mad r2.x, r1.w, r2.x, l(-0.330299)
					mad r1.w, r1.w, r2.x, l(0.999866)
					mul r2.x, r0.w, r1.w
					mad r2.x, r2.x, l(-2.000000), l(1.570796)
					lt r2.y, |r1.y|, |r1.x|
					and r2.x, r2.y, r2.x
					mad r0.w, r0.w, r1.w, r2.x
					lt r2.xy, r1.yzyy, -r1.yzyy
					and r1.w, r2.x, l(0xc0490fdb)
					add r0.w, r0.w, r1.w
					min r1.w, r1.y, r1.x
					lt r1.w, r1.w, -r1.w
					max r1.x, r1.y, r1.x
					ge r1.x, r1.x, -r1.x
					and r1.x, r1.x, r1.w
					movc r0.w, r1.x, -r0.w, r0.w
					mad r1.x, r0.w, l(0.159155), l(0.500000)
					mad r0.w, |r1.z|, l(-0.018729), l(0.074261)
					mad r0.w, r0.w, |r1.z|, l(-0.212114)
					mad r0.w, r0.w, |r1.z|, l(1.570729)
					add r1.z, -|r1.z|, l(1.000000)
					sqrt r1.z, r1.z
					mul r1.w, r0.w, r1.z
					mad r1.w, r1.w, l(-2.000000), l(3.141593)
					and r1.w, r2.y, r1.w
					mad r0.w, r0.w, r1.z, r1.w
					mul r1.y, r0.w, l(-0.318310)
					mul r1.zw, cb0[13].yyyz, cb1[0].yyyy
					mad r1.xy, r1.zwzz, l(0.100000, 0.100000, 0.000000, 0.000000), -r1.xyxx
					add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r1.xyzw, r1.xyxx, t1.xyzw, s1
					add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mov_sat r0.w, cb0[13].x
					mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					add_sat r0.w, -cb0[13].x, l(2.000000)
					mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					sample r2.xyzw, r2.xyxx, t2.xyzw, s2
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.w, r1.w, r2.w
					mul r1.w, r1.w, cb0[13].w
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyz, r1.xyzx, cb0[8].xyzx
					dp3 r0.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					mad r1.xyz, -r1.xyzx, cb0[8].xyzx, r0.wwww
					mad r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r2.xyzx
					dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
					add r2.xyz, -r1.xyzx, r0.wwww
					add r0.w, -cb0[8].w, l(1.000000)
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, cb0[11].xxxx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r1.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
	CustomEditor "ShaderForgeMaterialInspector"
}