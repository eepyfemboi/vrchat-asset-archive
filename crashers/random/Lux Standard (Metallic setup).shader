Shader "Lux Standard (Metallic setup)" {
	Properties {
		[Toggle(GEOM_TYPE_BRANCH_DETAIL)] _UseMixMapping ("Use Mix Mapping", Float) = 0
		[Toggle(GEOM_TYPE_LEAF)] _MixMappingControl ("Use Detail Map to controle Mix Mapping ", Float) = 0
		[Toggle(EFFECT_HUE_VARIATION)] _DoubleSided ("Double Sided", Float) = 0
		[MaterialEnum(Standard,0,Translucent,1)] _Lighting ("Lighting", Range(0, 1)) = 0
		_Color ("Color", Vector) = (1,1,1,1)
		_MainTex ("Albedo", 2D) = "white" {}
		_Cutoff ("Alpha Cutoff", Range(0, 1)) = 0.5
		_DiffuseScatteringEnabled ("Diffuse Scattering Enabled", Float) = 0
		_DiffuseScatteringCol ("Diffuse Scattering Color", Vector) = (0,0,0,0)
		_DiffuseScatteringBias ("Scatter Bias", Range(0, 0.5)) = 0
		_DiffuseScatteringContraction ("Scatter Contraction", Range(1, 10)) = 8
		_DiffuseScatteringCol2 ("Diffuse Scattering Color2", Vector) = (0,0,0,0)
		_DiffuseScatteringBias2 ("Scatter Bias", Range(0, 0.5)) = 0
		_DiffuseScatteringContraction2 ("Scatter Contraction", Range(1, 10)) = 8
		_Glossiness ("Smoothness", Range(0, 1)) = 0.5
		[Gamma] _Metallic ("Metallic", Range(0, 1)) = 0
		_MetallicGlossMap ("Metallic", 2D) = "white" {}
		_BumpScale ("Scale", Float) = 1
		_BumpMap ("Normal Map", 2D) = "bump" {}
		_Parallax ("Height Scale", Range(0.005, 0.1)) = 0.02
		_ParallaxMap ("Height Map", 2D) = "black" {}
		_UVRatio ("UV Ratio", Vector) = (1,1,0,0)
		_ParallaxTiling ("Parallax Tiling", Float) = 1
		[Toggle(EFFECT_BUMP)] _UsePOM ("Use POM", Float) = 0
		_LinearSteps ("Linear Steps", Range(4, 64)) = 20
		_OcclusionStrength ("Strength", Range(0, 1)) = 1
		_OcclusionMap ("Occlusion", 2D) = "white" {}
		_EmissionColor ("Color", Vector) = (0,0,0,1)
		_EmissionMap ("Emission", 2D) = "white" {}
		_DetailMask ("Detail Mask", 2D) = "white" {}
		_DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" {}
		_DetailNormalMapScale ("Scale", Float) = 1
		_DetailNormalMap ("Normal Map", 2D) = "bump" {}
		_Color2 ("Color 2", Vector) = (1,1,1,1)
		_Glossiness2 ("Smoothness", Range(0, 1)) = 0.5
		[Gamma] _Metallic2 ("Metallic", Range(0, 1)) = 0
		_MetallicGlossMap2 ("Metallic", 2D) = "white" {}
		[Enum(UV0,0,UV1,1)] _UVSec ("UV Set for secondary textures", Float) = 0
		[Toggle(GEOM_TYPE_BRANCH)] _UseCombinedMap ("Use combined Map", Float) = 0
		_CombinedMap ("Combined Map", 2D) = "white" {}
		_TranslucencyStrength ("Translucency", Range(0, 1)) = 0.5
		_ScatteringPower ("Scattering Power", Range(0, 8)) = 4
		[Enum(Disabled,0,Enabled,1)] _Snow ("Snow", Float) = 0
		[Enum(Local Space,0,World Space,1)] _SnowMapping ("Mapping", Float) = 0
		_SnowAccumulation ("Snow Accumulation", Vector) = (0,1,0,0)
		_SnowSlopeDamp ("Snow Slope Damp", Range(0, 2)) = 0.75
		_SnowTiling ("Snow Tiling", Vector) = (2,2,0,0)
		_SnowNormalStrength ("Snow Normal Strength", Range(0, 2)) = 1
		_SnowMaskTiling ("Snow Mask Tiling", Vector) = (0.3,0.3,0,0)
		_SnowDetailTiling ("Snow Detail Tiling", Vector) = (4,4,0,0)
		_SnowDetailStrength ("Snow Detail Strength", Range(0, 1)) = 0.3
		_SnowOpacity ("Snow Opacity", Range(0, 1)) = 0.5
		[Enum(None,0,Simple,1,Ripples,2,Flow,3,Full,4)] _Wetness ("Wetness and Rain", Float) = 0
		[Enum(Vertex Color,0,Heightmap(R),1)] _PuddleMask ("Puddlemask", Float) = 0
		_PuddleMaskTiling ("Puddle Mask Tiling", Float) = 1
		_WaterSlopeDamp ("Water Slope Damp", Range(0, 1)) = 0.5
		_Lux_FlowNormalTiling ("Flow Normal Tiling", Float) = 2
		_Lux_FlowSpeed ("Flow Speed", Range(0, 2)) = 0.05
		_Lux_FlowInterval ("Flow Interval", Range(0, 8)) = 1
		_Lux_FlowRefraction ("Flow Refraction", Range(0, 0.1)) = 0.02
		_Lux_FlowNormalStrength ("Flow Normal Strength", Range(0, 2)) = 1
		_WaterColor ("Water Color", Vector) = (0,0,0,0)
		_WaterAccumulationCracksPuddles ("Water Accumulation in Cracks and Puddles", Vector) = (0,1,0,1)
		_WaterColor2 ("Water Color 2", Vector) = (0,0,0,0)
		_WaterAccumulationCracksPuddles2 ("Water Accumulation in Cracks and Puddles", Vector) = (0,1,0,1)
		_SyncWaterOfMaterials ("Sync Water Of Materials", Float) = 0
		[HideInInspector] _Mode ("__mode", Float) = 0
		[HideInInspector] _SrcBlend ("__src", Float) = 1
		[HideInInspector] _DstBlend ("__dst", Float) = 0
		[HideInInspector] _ZWrite ("__zw", Float) = 1
		[HideInInspector] _Cull ("__cull", Float) = 3
		[HideInInspector] _CullShadowPass ("__cull", Float) = 3
	}
	SubShader {
		LOD 300
		Tags { "PerformanceChecks" = "False" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			LOD 300
			Tags { "LIGHTMODE" = "FORWARDBASE" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero Zero, Zero Zero
			ZWrite Off
			Cull Off
			GpuProgramID 8162
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r2.x, r0.xyzx, r0.xyzx
					rsq r2.x, r2.x
					mul r0.xyz, r0.xyzx, r2.xxxx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xyzx, r2.xxxx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb3[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r2.xyzx
					mov o5.w, l(0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r2.x, r0.xyzx, r0.xyzx
					rsq r2.x, r2.x
					mul r0.xyz, r0.xyzx, r2.xxxx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mul r2.w, v5.w, cb3[9].w
					mul o4.xyz, r0.xyzx, r2.wwww
					mov o4.w, l(0)
					mov o5.xyz, r2.xyzx
					mov o5.w, l(0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					add r5.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r0.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					max r3.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r3.xyzw
					mad r3.xyzw, r3.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
					mul r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r3.xyzw, r0.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r1.xyzx
					add o6.xyz, r0.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb1[3].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					add r5.xyzw, -r0.zzzz, cb1[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r0.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					max r3.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r3.xyzw
					mad r3.xyzw, r3.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
					mul r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r3.xyzw, r0.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r1.xyzx
					add o6.xyz, r0.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r2.x, r0.xyzx, r0.xyzx
					rsq r2.x, r2.x
					mul r0.xyz, r0.xyzx, r2.xxxx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xyzx, r2.xxxx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb3[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, l(0)
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r2.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r3.xxxx, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					add r5.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r0.xyzw, r5.xyzw, r3.zzzz, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r2.xyzw
					mad r2.xyzw, r2.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					mul r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r2.xyzw, r0.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.yzzx, r3.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, l(0)
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r2.w, v5.w, cb3[9].w
					mul o4.xyz, r2.wwww, r2.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r3.xxxx, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					add r5.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r4.xyzw, r5.xyzw, r3.zzzz, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r5.xyzw, r2.xyzw
					mad r2.xyzw, r2.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					mul r4.xyzw, r4.xyzw, r5.xyzw
					max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r2.xyzw, r2.xyzw, r4.xyzw
					mul r0.xyz, r2.yyyy, cb2[8].xyzx
					mad r0.xyz, cb2[7].xyzx, r2.xxxx, r0.xyzx
					mad r0.xyz, cb2[9].xyzx, r2.zzzz, r0.xyzx
					mad r0.xyz, cb2[10].xyzx, r2.wwww, r0.xyzx
					mul r2.x, r3.y, r3.y
					mad r2.x, r3.x, r3.x, -r2.x
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r2.xyz, cb2[45].xyzx, r2.xxxx, r4.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r2.x, r0.xyzx, r0.xyzx
					rsq r2.x, r2.x
					mul r0.xyz, r0.xyzx, r2.xxxx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xyzx, r2.xxxx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb3[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r2.xyzx
					mov o5.w, l(0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r2.x, r0.xyzx, r0.xyzx
					rsq r2.x, r2.x
					mul r0.xyz, r0.xyzx, r2.xxxx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mul r2.w, v5.w, cb3[9].w
					mul o4.xyz, r0.xyzx, r2.wwww
					mov o4.w, l(0)
					mov o5.xyz, r2.xyzx
					mov o5.w, l(0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					add r5.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r0.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					max r3.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r3.xyzw
					mad r3.xyzw, r3.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
					mul r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r3.xyzw, r0.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r1.xyzx
					add o6.xyz, r0.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb1[3].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					add r5.xyzw, -r0.zzzz, cb1[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r0.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					max r3.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r3.xyzw
					mad r3.xyzw, r3.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
					mul r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r3.xyzw, r0.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r1.xyzx
					add o6.xyz, r0.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xy, l(0,0,0,0)
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o9.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r2.x, r0.xyzx, r0.xyzx
					rsq r2.x, r2.x
					mul r0.xyz, r0.xyzx, r2.xxxx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xyzx, r2.xxxx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb3[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, l(0)
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r2.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r3.xxxx, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					add r5.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r0.xyzw, r5.xyzw, r3.zzzz, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r2.xyzw
					mad r2.xyzw, r2.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					mul r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r2.xyzw, r0.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.yzzx, r3.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// COLOR                    0   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xywz, r1.wwww, r2.xywz
					mov o0.xyzw, r1.xywz
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, l(0)
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r2.w, v5.w, cb3[9].w
					mul o4.xyz, r2.wwww, r2.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r3.xxxx, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					add r5.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o9.xyz, r0.xyzx
					mad r4.xyzw, r5.xyzw, r3.zzzz, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r5.xyzw, r2.xyzw
					mad r2.xyzw, r2.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					mul r4.xyzw, r4.xyzw, r5.xyzw
					max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r2.xyzw, r2.xyzw, r4.xyzw
					mul r0.xyz, r2.yyyy, cb2[8].xyzx
					mad r0.xyz, cb2[7].xyzx, r2.xxxx, r0.xyzx
					mad r0.xyz, cb2[9].xyzx, r2.zzzz, r0.xyzx
					mad r0.xyz, cb2[10].xyzx, r2.wwww, r0.xyzx
					mul r2.x, r3.y, r3.y
					mad r2.x, r3.x, r3.x, -r2.x
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r2.xyz, cb2[45].xyzx, r2.xxxx, r4.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.zzzz, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.wwwz
					mov o8.x, r1.w
					mov o9.w, r1.w
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o10.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v9.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v9.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v9.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb4[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb4[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb4[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb4[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb4[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb4[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb4[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r4.y, -r3.w, r3.w, l(1.000000)
					mad r4.z, |r0.y|, r4.y, r0.w
					mad r4.y, r1.w, r4.y, r0.w
					mul r4.y, |r0.y|, r4.y
					mad r4.y, r1.w, r4.z, r4.y
					add r4.y, r4.y, l(0.000010)
					div r4.y, l(0.500000), r4.y
					mul r0.w, r0.w, r0.w
					mad r4.z, r0.x, r0.w, -r0.x
					mad r0.x, r4.z, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r6.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r6.x, r6.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r6.x, r6.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r6.zzzw
					mad r4.yzw, r2.xxyz, r0.yyyy, r0.wwww
					mul r6.xyz, r4.xxxx, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.yzwy, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v9.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v9.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v9.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb4[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb4[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb4[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb4[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb4[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb4[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb4[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r4.y, -r3.w, r3.w, l(1.000000)
					mad r4.z, |r0.y|, r4.y, r0.w
					mad r4.y, r1.w, r4.y, r0.w
					mul r4.y, |r0.y|, r4.y
					mad r4.y, r1.w, r4.z, r4.y
					add r4.y, r4.y, l(0.000010)
					div r4.y, l(0.500000), r4.y
					mul r0.w, r0.w, r0.w
					mad r4.z, r0.x, r0.w, -r0.x
					mad r0.x, r4.z, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r6.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r6.x, r6.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r6.x, r6.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r6.zzzw
					mad r4.yzw, r2.xxyz, r0.yyyy, r0.wwww
					mul r6.xyz, r4.xxxx, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.yzwy, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r4.x, cb5[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb5[2].xxyz
					  mad r4.yzw, cb5[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb5[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb5[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r4.xzw, r4.xxxx, cb0[2].xxyz
					if_nz r2.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r6.xyz, v9.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v9.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v9.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v9.xyzx
					  add r6.xyz, r6.xyzx, -cb5[6].xyzx
					  mul r6.yzw, r6.xxyz, cb5[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb5[0].z, l(0.500000)
					  mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r5.w, r1.w
					  sample r7.xyzw, r6.xzwx, t2.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t2.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t2.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r3.xyzw
					  dp4 r7.y, r8.xyzw, r3.xyzw
					  dp4 r7.z, r6.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r3.xyzw
					  dp4 r7.y, cb2[40].xyzw, r3.xyzw
					  dp4 r7.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r6.xyz, r7.xyzx, v6.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb4[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb4[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb4[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb4[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb4[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb4[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb4[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r3.w, r0.z, r0.z
					dp2 r3.w, r3.wwww, r4.yyyy
					add r3.w, r3.w, l(-0.500000)
					add r5.x, -r1.w, l(1.000000)
					mul r5.y, r5.x, r5.x
					mul r5.y, r5.y, r5.y
					mul r5.x, r5.x, r5.y
					mad r5.x, r3.w, r5.x, l(1.000000)
					add r5.y, -|r0.y|, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r3.w, r3.w, r5.y, l(1.000000)
					mul r3.w, r3.w, r5.x
					mul r3.w, r1.w, r3.w
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r1.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r1.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r6.xyz, r4.xzwx, r3.wwww, r6.xyzx
					mul r0.xyw, r4.xzxw, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r4.x, cb5[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb5[2].xxyz
					  mad r4.yzw, cb5[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb5[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb5[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r4.xzw, r4.xxxx, cb0[2].xxyz
					if_nz r2.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r6.xyz, v9.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v9.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v9.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v9.xyzx
					  add r6.xyz, r6.xyzx, -cb5[6].xyzx
					  mul r6.yzw, r6.xxyz, cb5[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb5[0].z, l(0.500000)
					  mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r5.w, r1.w
					  sample r7.xyzw, r6.xzwx, t2.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t2.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t2.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r3.xyzw
					  dp4 r7.y, r8.xyzw, r3.xyzw
					  dp4 r7.z, r6.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r3.xyzw
					  dp4 r7.y, cb2[40].xyzw, r3.xyzw
					  dp4 r7.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r6.xyz, r7.xyzx, v6.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb4[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb4[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb4[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb4[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb4[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb4[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb4[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r3.w, r0.z, r0.z
					dp2 r3.w, r3.wwww, r4.yyyy
					add r3.w, r3.w, l(-0.500000)
					add r5.x, -r1.w, l(1.000000)
					mul r5.y, r5.x, r5.x
					mul r5.y, r5.y, r5.y
					mul r5.x, r5.x, r5.y
					mad r5.x, r3.w, r5.x, l(1.000000)
					add r5.y, -|r0.y|, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r3.w, r3.w, r5.y, l(1.000000)
					mul r3.w, r3.w, r5.x
					mul r3.w, r1.w, r3.w
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r1.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r1.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r6.xyz, r4.xzwx, r3.wwww, r6.xyzx
					mul r0.xyw, r4.xzxw, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[8], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					add r4.xyz, -v9.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb7[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb7[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb7[2].xxyz
					  mad r4.yzw, cb7[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb7[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb7[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb7[6].xyzx
					  mul r4.yzw, r4.xxyz, cb7[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					div r4.yz, v7.xxyx, v7.wwww
					sample r5.xyzw, r4.yzyy, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.x, r2.w, r4.x
					movc r2.w, r3.w, r4.x, r2.w
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb6[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb6[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb6[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb6[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb6[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb6[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb6[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb6[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb6[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb6[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb6[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb6[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb6[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb6[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r4.y, -r3.w, r3.w, l(1.000000)
					mad r4.z, |r0.y|, r4.y, r0.w
					mad r4.y, r1.w, r4.y, r0.w
					mul r4.y, |r0.y|, r4.y
					mad r4.y, r1.w, r4.z, r4.y
					add r4.y, r4.y, l(0.000010)
					div r4.y, l(0.500000), r4.y
					mul r0.w, r0.w, r0.w
					mad r4.z, r0.x, r0.w, -r0.x
					mad r0.x, r4.z, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r6.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r6.x, r6.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r6.x, r6.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r6.zzzw
					mad r4.yzw, r2.xxyz, r0.yyyy, r0.wwww
					mul r6.xyz, r4.xxxx, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.yzwy, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb5[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[8], immediateIndexed
					dcl_constantbuffer CB8[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mov r2.w, cb5[0].x
					add r4.xyz, -v9.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r5.x, cb4[r2.w + 8].z
					mov r5.y, cb4[r2.w + 9].z
					mov r5.z, cb4[r2.w + 10].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb8[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb8[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb8[2].xxyz
					  mad r4.yzw, cb8[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb8[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb8[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb8[6].xyzx
					  mul r4.yzw, r4.xxyz, cb8[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb8[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					div r4.yz, v7.xxyx, v7.wwww
					sample r5.xyzw, r4.yzyy, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.x, r2.w, r4.x
					movc r2.w, r3.w, r4.x, r2.w
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb7[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb7[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb7[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb7[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb7[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb7[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb7[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb7[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb7[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb7[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb7[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb7[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb7[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb7[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r4.y, -r3.w, r3.w, l(1.000000)
					mad r4.z, |r0.y|, r4.y, r0.w
					mad r4.y, r1.w, r4.y, r0.w
					mul r4.y, |r0.y|, r4.y
					mad r4.y, r1.w, r4.z, r4.y
					add r4.y, r4.y, l(0.000010)
					div r4.y, l(0.500000), r4.y
					mul r0.w, r0.w, r0.w
					mad r4.z, r0.x, r0.w, -r0.x
					mad r0.x, r4.z, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r6.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r6.x, r6.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r6.x, r6.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r6.zzzw
					mad r4.yzw, r2.xxyz, r0.yyyy, r0.wwww
					mul r6.xyz, r4.xxxx, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.yzwy, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb6[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb6[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[8], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					add r4.xyz, -v9.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r4.x, r4.xyzx, r4.xyzx
					sqrt r4.x, r4.x
					add r4.x, -r2.w, r4.x
					mad r2.w, cb3[25].w, r4.x, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.x, cb7[0].x, l(1.000000)
					if_nz r4.x
					  eq r4.y, cb7[0].y, l(1.000000)
					  mul r5.xyz, v9.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v9.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v9.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r4.yzw, r4.yyyy, r5.xxyz, v9.xxyz
					  add r4.yzw, r4.yyzw, -cb7[6].xxyz
					  mul r5.yzw, r4.yyzw, cb7[5].xxyz
					  mad r4.y, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.z, r4.y
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.y, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.y, r2.w, r4.y
					movc r2.w, r4.x, r4.y, r2.w
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					if_nz r4.x
					  eq r1.w, cb7[0].y, l(1.000000)
					  mul r4.xzw, v9.yyyy, cb7[2].xxyz
					  mad r4.xzw, cb7[1].xxyz, v9.xxxx, r4.xxzw
					  mad r4.xzw, cb7[3].xxyz, v9.zzzz, r4.xxzw
					  add r4.xzw, r4.xxzw, cb7[4].xxyz
					  movc r4.xzw, r1.wwww, r4.xxzw, v9.xxyz
					  add r4.xzw, r4.xxzw, -cb7[6].xxyz
					  mul r7.yzw, r4.xxzw, cb7[5].xxyz
					  mul r1.w, r7.y, l(0.250000)
					  mul r2.w, cb7[0].z, l(0.500000)
					  mad r4.x, -cb7[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r7.x, r4.x, r1.w
					  sample r8.xyzw, r7.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r4.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r4.xzwx, t3.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb2[39].xyzw, r3.xyzw
					  dp4 r8.y, cb2[40].xyzw, r3.xyzw
					  dp4 r8.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r4.xzw, r8.xxyz, v6.xxyz
					max r4.xzw, r4.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb6[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb6[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb6[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb6[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb6[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb6[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb6[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb6[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb6[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb6[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb6[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb6[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb6[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb6[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r3.w, r0.z, r0.z
					dp2 r3.w, r3.wwww, r4.yyyy
					add r3.w, r3.w, l(-0.500000)
					add r5.x, -r1.w, l(1.000000)
					mul r5.y, r5.x, r5.x
					mul r5.y, r5.y, r5.y
					mul r5.x, r5.x, r5.y
					mad r5.x, r3.w, r5.x, l(1.000000)
					add r5.y, -|r0.y|, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r3.w, r3.w, r5.y, l(1.000000)
					mul r3.w, r3.w, r5.x
					mul r3.w, r1.w, r3.w
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r1.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r1.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r4.xyz, r6.xyzx, r3.wwww, r4.xzwx
					mul r0.xyw, r6.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r6.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb5[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[8], immediateIndexed
					dcl_constantbuffer CB8[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mov r2.w, cb5[0].x
					add r4.xyz, -v9.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r5.x, cb4[r2.w + 8].z
					mov r5.y, cb4[r2.w + 9].z
					mov r5.z, cb4[r2.w + 10].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r4.x, r4.xyzx, r4.xyzx
					sqrt r4.x, r4.x
					add r4.x, -r2.w, r4.x
					mad r2.w, cb3[25].w, r4.x, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.x, cb8[0].x, l(1.000000)
					if_nz r4.x
					  eq r4.y, cb8[0].y, l(1.000000)
					  mul r5.xyz, v9.yyyy, cb8[2].xyzx
					  mad r5.xyz, cb8[1].xyzx, v9.xxxx, r5.xyzx
					  mad r5.xyz, cb8[3].xyzx, v9.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb8[4].xyzx
					  movc r4.yzw, r4.yyyy, r5.xxyz, v9.xxyz
					  add r4.yzw, r4.yyzw, -cb8[6].xxyz
					  mul r5.yzw, r4.yyzw, cb8[5].xxyz
					  mad r4.y, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb8[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.z, r4.y
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.y, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.y, r2.w, r4.y
					movc r2.w, r4.x, r4.y, r2.w
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					if_nz r4.x
					  eq r1.w, cb8[0].y, l(1.000000)
					  mul r4.xzw, v9.yyyy, cb8[2].xxyz
					  mad r4.xzw, cb8[1].xxyz, v9.xxxx, r4.xxzw
					  mad r4.xzw, cb8[3].xxyz, v9.zzzz, r4.xxzw
					  add r4.xzw, r4.xxzw, cb8[4].xxyz
					  movc r4.xzw, r1.wwww, r4.xxzw, v9.xxyz
					  add r4.xzw, r4.xxzw, -cb8[6].xxyz
					  mul r7.yzw, r4.xxzw, cb8[5].xxyz
					  mul r1.w, r7.y, l(0.250000)
					  mul r2.w, cb8[0].z, l(0.500000)
					  mad r4.x, -cb8[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r7.x, r4.x, r1.w
					  sample r8.xyzw, r7.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r4.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r4.xzwx, t3.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb2[39].xyzw, r3.xyzw
					  dp4 r8.y, cb2[40].xyzw, r3.xyzw
					  dp4 r8.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r4.xzw, r8.xxyz, v6.xxyz
					max r4.xzw, r4.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb7[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb7[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb7[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb7[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb7[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb7[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb7[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb7[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb7[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb7[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb7[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb7[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb7[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb7[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r3.w, r0.z, r0.z
					dp2 r3.w, r3.wwww, r4.yyyy
					add r3.w, r3.w, l(-0.500000)
					add r5.x, -r1.w, l(1.000000)
					mul r5.y, r5.x, r5.x
					mul r5.y, r5.y, r5.y
					mul r5.x, r5.x, r5.y
					mad r5.x, r3.w, r5.x, l(1.000000)
					add r5.y, -|r0.y|, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r3.w, r3.w, r5.y, l(1.000000)
					mul r3.w, r3.w, r5.x
					mul r3.w, r1.w, r3.w
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r1.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r1.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r4.xyz, r6.xyzx, r3.wwww, r4.xzwx
					mul r0.xyw, r6.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r6.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb6[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb6[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v9.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v9.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v9.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb4[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb4[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb4[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb4[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb4[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb4[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb4[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.w, r4.z, r4.z
					mul r5.w, r5.w, r5.w
					mul r4.z, r4.z, r5.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r4.x, -r3.w, r3.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r2.w, r4.x, r0.w
					mul r4.x, |r0.y|, r4.x
					mad r4.x, r2.w, r4.y, r4.x
					add r4.x, r4.x, l(0.000010)
					div r4.x, l(0.500000), r4.x
					mul r0.w, r0.w, r0.w
					mad r4.y, r0.x, r0.w, -r0.x
					mad r0.x, r4.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mad r4.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r4.x, r4.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r4.x, r4.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r4.zzzw
					mad r4.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mul r6.xyz, r1.wwww, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v9.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v9.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v9.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb4[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb4[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb4[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb4[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb4[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb4[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb4[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.w, r4.z, r4.z
					mul r5.w, r5.w, r5.w
					mul r4.z, r4.z, r5.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r4.x, -r3.w, r3.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r2.w, r4.x, r0.w
					mul r4.x, |r0.y|, r4.x
					mad r4.x, r2.w, r4.y, r4.x
					add r4.x, r4.x, l(0.000010)
					div r4.x, l(0.500000), r4.x
					mul r0.w, r0.w, r0.w
					mad r4.y, r0.x, r0.w, -r0.x
					mad r0.x, r4.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mad r4.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r4.x, r4.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r4.x, r4.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r4.zzzw
					mad r4.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mul r6.xyz, r1.wwww, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r4.x, cb5[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb5[2].xxyz
					  mad r4.yzw, cb5[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb5[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb5[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r4.xzw, r4.xxxx, cb0[2].xxyz
					if_nz r2.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r6.xyz, v9.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v9.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v9.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v9.xyzx
					  add r6.xyz, r6.xyzx, -cb5[6].xyzx
					  mul r6.yzw, r6.xxyz, cb5[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb5[0].z, l(0.500000)
					  mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r5.w, r1.w
					  sample r7.xyzw, r6.xzwx, t2.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t2.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t2.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r3.xyzw
					  dp4 r7.y, r8.xyzw, r3.xyzw
					  dp4 r7.z, r6.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r3.xyzw
					  dp4 r7.y, cb2[40].xyzw, r3.xyzw
					  dp4 r7.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r6.xyz, r7.xyzx, v6.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb4[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb4[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb4[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb4[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb4[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb4[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb4[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r5.x, r0.z, r0.z
					dp2 r5.x, r5.xxxx, r4.yyyy
					add r5.x, r5.x, l(-0.500000)
					add r5.y, -r1.w, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r5.y, r5.x, r5.y, l(1.000000)
					add r5.z, -|r0.y|, l(1.000000)
					mul r5.w, r5.z, r5.z
					mul r5.w, r5.w, r5.w
					mul r5.z, r5.z, r5.w
					mad r5.x, r5.x, r5.z, l(1.000000)
					mul r5.x, r5.x, r5.y
					mul r1.w, r1.w, r5.x
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r2.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r2.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r6.xyz, r4.xzwx, r1.wwww, r6.xyzx
					mul r0.xyw, r4.xzxw, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texturecube (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r4.x, cb5[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb5[2].xxyz
					  mad r4.yzw, cb5[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb5[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb5[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r4.xzw, r4.xxxx, cb0[2].xxyz
					if_nz r2.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r6.xyz, v9.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v9.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v9.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v9.xyzx
					  add r6.xyz, r6.xyzx, -cb5[6].xyzx
					  mul r6.yzw, r6.xxyz, cb5[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb5[0].z, l(0.500000)
					  mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r5.w, r1.w
					  sample r7.xyzw, r6.xzwx, t2.xyzw, s1
					  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t2.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t2.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r3.xyzw
					  dp4 r7.y, r8.xyzw, r3.xyzw
					  dp4 r7.z, r6.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r3.xyzw
					  dp4 r7.y, cb2[40].xyzw, r3.xyzw
					  dp4 r7.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r6.xyz, r7.xyzx, v6.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb4[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb4[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb4[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t0.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb4[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb4[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb4[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb4[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb4[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb4[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb4[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb4[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t1.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb4[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb4[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb4[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r5.x, r0.z, r0.z
					dp2 r5.x, r5.xxxx, r4.yyyy
					add r5.x, r5.x, l(-0.500000)
					add r5.y, -r1.w, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r5.y, r5.x, r5.y, l(1.000000)
					add r5.z, -|r0.y|, l(1.000000)
					mul r5.w, r5.z, r5.z
					mul r5.w, r5.w, r5.w
					mul r5.z, r5.z, r5.w
					mad r5.x, r5.x, r5.z, l(1.000000)
					mul r5.x, r5.x, r5.y
					mul r1.w, r1.w, r5.x
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r2.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r2.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r6.xyz, r4.xzwx, r1.wwww, r6.xyzx
					mul r0.xyw, r4.xzxw, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb3[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[8], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					add r4.xyz, -v9.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb7[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb7[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb7[2].xxyz
					  mad r4.yzw, cb7[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb7[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb7[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb7[6].xyzx
					  mul r4.yzw, r4.xxyz, cb7[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					div r4.yz, v7.xxyx, v7.wwww
					sample r5.xyzw, r4.yzyy, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.x, r2.w, r4.x
					movc r2.w, r3.w, r4.x, r2.w
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb6[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb6[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb6[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb6[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb6[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb6[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb6[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb6[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb6[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb6[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb6[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb6[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb6[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb6[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.w, r4.z, r4.z
					mul r5.w, r5.w, r5.w
					mul r4.z, r4.z, r5.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r4.x, -r3.w, r3.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r2.w, r4.x, r0.w
					mul r4.x, |r0.y|, r4.x
					mad r4.x, r2.w, r4.y, r4.x
					add r4.x, r4.x, l(0.000010)
					div r4.x, l(0.500000), r4.x
					mul r0.w, r0.w, r0.w
					mad r4.y, r0.x, r0.w, -r0.x
					mad r0.x, r4.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mad r4.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r4.x, r4.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r4.x, r4.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r4.zzzw
					mad r4.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mul r6.xyz, r1.wwww, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb5[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[8], immediateIndexed
					dcl_constantbuffer CB8[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mov r2.w, cb5[0].x
					add r4.xyz, -v9.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r5.x, cb4[r2.w + 8].z
					mov r5.y, cb4[r2.w + 9].z
					mov r5.z, cb4[r2.w + 10].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb8[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb8[0].y, l(1.000000)
					  mul r4.yzw, v9.yyyy, cb8[2].xxyz
					  mad r4.yzw, cb8[1].xxyz, v9.xxxx, r4.yyzw
					  mad r4.yzw, cb8[3].xxyz, v9.zzzz, r4.yyzw
					  add r4.yzw, r4.yyzw, cb8[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, v9.xyzx
					  add r4.xyz, r4.xyzx, -cb8[6].xyzx
					  mul r4.yzw, r4.xxyz, cb8[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb8[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					div r4.yz, v7.xxyx, v7.wwww
					sample r5.xyzw, r4.yzyy, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.x, r2.w, r4.x
					movc r2.w, r3.w, r4.x, r2.w
					add r3.w, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r4.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb7[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -v9.xyzx, cb7[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r8.xyz, -v9.xyzx, cb7[1].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, v9.xyzx, -cb7[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					mad r1.w, -r3.w, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r3.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r6.w, l(-1.000000)
					mad r2.w, cb7[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb7[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb7[3].x
					mul r7.xyz, r6.xyzx, r2.wwww
					lt r4.w, cb7[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb7[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r8.xyz, r4.wwww, r4.xyzx
					    add r9.xyz, -v9.xyzx, cb7[4].xyzx
					    div r9.xyz, r9.xyzx, r8.xyzx
					    add r10.xyz, -v9.xyzx, cb7[5].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					    min r4.w, r9.y, r9.x
					    min r4.w, r9.z, r4.w
					    add r9.xyz, v9.xyzx, -cb7[6].xyzx
					    mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
					  else 
					    mov r8.xyz, r4.xyzx
					  endif 
					  sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r8.w, l(-1.000000)
					  mad r1.w, cb7[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].x
					  mul r8.xyz, r8.xyzx, r1.wwww
					  mad r6.xyz, r2.wwww, r6.xyzx, -r8.xyzx
					  mad r7.xyz, cb7[1].wwww, r6.xyzx, r8.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r6.xyzx
					dp3 r0.w, r4.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r7.xyzx
					mul r0.w, r3.w, r3.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r3.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.w, r4.z, r4.z
					mul r5.w, r5.w, r5.w
					mul r4.z, r4.z, r5.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r4.x, -r3.w, r3.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r2.w, r4.x, r0.w
					mul r4.x, |r0.y|, r4.x
					mad r4.x, r2.w, r4.y, r4.x
					add r4.x, r4.x, l(0.000010)
					div r4.x, l(0.500000), r4.x
					mul r0.w, r0.w, r0.w
					mad r4.y, r0.x, r0.w, -r0.x
					mad r0.x, r4.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r4.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mad r4.xyzw, r3.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r4.x, r4.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r4.x, r4.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r4.zzzw
					mad r4.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mul r6.xyz, r1.wwww, r5.xyzx
					mul r0.xyw, r5.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r5.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb6[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb6[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[8], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					add r4.xyz, -v9.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r4.x, r4.xyzx, r4.xyzx
					sqrt r4.x, r4.x
					add r4.x, -r2.w, r4.x
					mad r2.w, cb3[25].w, r4.x, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.x, cb7[0].x, l(1.000000)
					if_nz r4.x
					  eq r4.y, cb7[0].y, l(1.000000)
					  mul r5.xyz, v9.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v9.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v9.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r4.yzw, r4.yyyy, r5.xxyz, v9.xxyz
					  add r4.yzw, r4.yyzw, -cb7[6].xxyz
					  mul r5.yzw, r4.yyzw, cb7[5].xxyz
					  mad r4.y, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.z, r4.y
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.y, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.y, r2.w, r4.y
					movc r2.w, r4.x, r4.y, r2.w
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					if_nz r4.x
					  eq r1.w, cb7[0].y, l(1.000000)
					  mul r4.xzw, v9.yyyy, cb7[2].xxyz
					  mad r4.xzw, cb7[1].xxyz, v9.xxxx, r4.xxzw
					  mad r4.xzw, cb7[3].xxyz, v9.zzzz, r4.xxzw
					  add r4.xzw, r4.xxzw, cb7[4].xxyz
					  movc r4.xzw, r1.wwww, r4.xxzw, v9.xxyz
					  add r4.xzw, r4.xxzw, -cb7[6].xxyz
					  mul r7.yzw, r4.xxzw, cb7[5].xxyz
					  mul r1.w, r7.y, l(0.250000)
					  mul r2.w, cb7[0].z, l(0.500000)
					  mad r4.x, -cb7[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r7.x, r4.x, r1.w
					  sample r8.xyzw, r7.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r4.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r4.xzwx, t3.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb2[39].xyzw, r3.xyzw
					  dp4 r8.y, cb2[40].xyzw, r3.xyzw
					  dp4 r8.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r4.xzw, r8.xxyz, v6.xxyz
					max r4.xzw, r4.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb6[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb6[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb6[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb6[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb6[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb6[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb6[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb6[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb6[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb6[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb6[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb6[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb6[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb6[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb6[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r5.x, r0.z, r0.z
					dp2 r5.x, r5.xxxx, r4.yyyy
					add r5.x, r5.x, l(-0.500000)
					add r5.y, -r1.w, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r5.y, r5.x, r5.y, l(1.000000)
					add r5.z, -|r0.y|, l(1.000000)
					mul r5.w, r5.z, r5.z
					mul r5.w, r5.w, r5.w
					mul r5.z, r5.z, r5.w
					mad r5.x, r5.x, r5.z, l(1.000000)
					mul r5.x, r5.x, r5.y
					mul r1.w, r1.w, r5.x
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r2.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r2.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r4.xyz, r6.xyzx, r1.wwww, r4.xzwx
					mul r0.xyw, r6.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r6.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb5[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
					// COLOR                    0   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[8], immediateIndexed
					dcl_constantbuffer CB8[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r4.x, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.yzw, r2.wwww, cb0[12].xxyz
					and r4.xyz, r4.yzwy, r4.xxxx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mov r2.w, cb5[0].x
					add r4.xyz, -v9.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r5.x, cb4[r2.w + 8].z
					mov r5.y, cb4[r2.w + 9].z
					mov r5.z, cb4[r2.w + 10].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v9.xyzx, -cb3[25].xyzx
					dp3 r4.x, r4.xyzx, r4.xyzx
					sqrt r4.x, r4.x
					add r4.x, -r2.w, r4.x
					mad r2.w, cb3[25].w, r4.x, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.x, cb8[0].x, l(1.000000)
					if_nz r4.x
					  eq r4.y, cb8[0].y, l(1.000000)
					  mul r5.xyz, v9.yyyy, cb8[2].xyzx
					  mad r5.xyz, cb8[1].xyzx, v9.xxxx, r5.xyzx
					  mad r5.xyz, cb8[3].xyzx, v9.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb8[4].xyzx
					  movc r4.yzw, r4.yyyy, r5.xxyz, v9.xxyz
					  add r4.yzw, r4.yyzw, -cb8[6].xxyz
					  mul r5.yzw, r4.yyzw, cb8[5].xxyz
					  mad r4.y, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb8[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.z, r4.y
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.y, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s4
					add_sat r2.w, r2.w, r5.x
					min r4.y, r2.w, r4.y
					movc r2.w, r4.x, r4.y, r2.w
					add r4.y, -cb0[8].w, l(1.000000)
					add r1.w, r1.w, r1.w
					mad r5.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					if_nz r4.x
					  eq r1.w, cb8[0].y, l(1.000000)
					  mul r4.xzw, v9.yyyy, cb8[2].xxyz
					  mad r4.xzw, cb8[1].xxyz, v9.xxxx, r4.xxzw
					  mad r4.xzw, cb8[3].xxyz, v9.zzzz, r4.xxzw
					  add r4.xzw, r4.xxzw, cb8[4].xxyz
					  movc r4.xzw, r1.wwww, r4.xxzw, v9.xxyz
					  add r4.xzw, r4.xxzw, -cb8[6].xxyz
					  mul r7.yzw, r4.xxzw, cb8[5].xxyz
					  mul r1.w, r7.y, l(0.250000)
					  mul r2.w, cb8[0].z, l(0.500000)
					  mad r4.x, -cb8[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r7.x, r4.x, r1.w
					  sample r8.xyzw, r7.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r4.xzwx, t3.xyzw, s1
					  add r4.xzw, r7.xxzw, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r4.xzwx, t3.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb2[39].xyzw, r3.xyzw
					  dp4 r8.y, cb2[40].xyzw, r3.xyzw
					  dp4 r8.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r4.xzw, r8.xxyz, v6.xxyz
					max r4.xzw, r4.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb7[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v9.xyzx, cb7[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v9.xyzx, cb7[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v9.xyzx, -cb7[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r4.y, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.y
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t1.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb7[3].w, r2.w, l(1.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, cb7[3].y
					exp r2.w, r2.w
					mul r2.w, r2.w, cb7[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb7[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb7[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v9.xyzx, cb7[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v9.xyzx, cb7[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v9.xyzx, -cb7[6].xyzx
					    mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  else 
					    mov r9.xyz, r5.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t2.xyzw, s0, r1.w
					  add r1.w, r9.w, l(-1.000000)
					  mad r1.w, cb7[7].w, r1.w, l(1.000000)
					  log r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].y
					  exp r1.w, r1.w
					  mul r1.w, r1.w, cb7[7].x
					  mul r9.xyz, r9.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r9.xyzx
					  mad r8.xyz, cb7[1].wwww, r7.xyzx, r9.xyzx
					endif 
					dp3 r1.w, r3.xyzx, cb2[0].xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r7.xyz, -v2.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3_sat r0.x, r3.xyzx, r7.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, cb2[0].xyzx, r7.xyzx
					dp3 r0.w, r5.xyzx, v5.xyzx
					mad_sat r0.w, r0.w, l(1.300000), l(1.000000)
					mul r3.xyz, r0.wwww, r8.xyzx
					mul r0.w, r4.y, r4.y
					mul r5.x, r0.z, r0.z
					dp2 r5.x, r5.xxxx, r4.yyyy
					add r5.x, r5.x, l(-0.500000)
					add r5.y, -r1.w, l(1.000000)
					mul r5.z, r5.y, r5.y
					mul r5.z, r5.z, r5.z
					mul r5.y, r5.y, r5.z
					mad r5.y, r5.x, r5.y, l(1.000000)
					add r5.z, -|r0.y|, l(1.000000)
					mul r5.w, r5.z, r5.z
					mul r5.w, r5.w, r5.w
					mul r5.z, r5.z, r5.w
					mad r5.x, r5.x, r5.z, l(1.000000)
					mul r5.x, r5.x, r5.y
					mul r1.w, r1.w, r5.x
					mad r5.x, -r4.y, r4.y, l(1.000000)
					mad r5.y, |r0.y|, r5.x, r0.w
					mad r5.x, r2.w, r5.x, r0.w
					mul r5.x, |r0.y|, r5.x
					mad r5.x, r2.w, r5.y, r5.x
					add r5.x, r5.x, l(0.000010)
					div r5.x, l(0.500000), r5.x
					mul r0.w, r0.w, r0.w
					mad r5.y, r0.x, r0.w, -r0.x
					mad r0.x, r5.y, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r5.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mad r5.xyzw, r4.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
					mul r0.w, r5.x, r5.x
					mul r0.y, |r0.y|, l(-9.280000)
					exp r0.y, r0.y
					min r0.y, r0.y, r0.w
					mad r0.y, r0.y, r5.x, r5.y
					mad r0.yw, r0.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r5.zzzw
					mad r5.xyz, r2.xyzx, r0.yyyy, r0.wwww
					mad r4.xyz, r6.xyzx, r1.wwww, r4.xzwx
					mul r0.xyw, r6.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r6.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					mad r0.xyz, r3.xyzx, r5.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					add r0.xyz, r0.xyzx, -cb6[0].xyzx
					mad o0.xyz, r0.wwww, r0.xyzx, cb6[0].xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD_DELTA"
			LOD 300
			Tags { "LIGHTMODE" = "FORWARDADD" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero One, Zero One
			ZWrite Off
			Cull Off
			GpuProgramID 72864
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r0.xyzx, r0.xyzx
					rsq r2.w, r2.w
					mul r0.xyz, r0.xyzx, r2.wwww
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r0.xyzx, r0.xyzx
					rsq r2.w, r2.w
					mul r0.xyz, r0.xyzx, r2.wwww
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r0.xyzx, r0.xyzx
					rsq r2.w, r2.w
					mul r0.xyz, r0.xyzx, r2.wwww
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o7.xy, r0.zzzz, r0.xwxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r0.w, cb0[9].w, l(0.000000)
					movc r2.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb5[0].x
					add o2.xyz, r0.xyzx, -cb4[r0.w + 64].xyzx
					mul r2.xyz, v5.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v5.zzzz, r2.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r3.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r0.xyzx, r0.xyzx
					rsq r2.w, r2.w
					mul r0.xyz, r0.xyzx, r2.wwww
					mul r4.xyz, r2.yzxy, r0.zxyz
					mad r2.xyz, r0.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o6.w, r1.z
					mul r0.x, r1.y, cb1[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb4[r0.w + 66].zwzz
					mad o7.xy, r0.xyxx, cb4[r0.w + 66].xyxx, r1.xyxx
					mov o7.zw, r1.zzzw
					mov o8.x, r1.z
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v5.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r2.x, cb4[0].x, l(2)
					mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
					mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
					mad r1.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
					mov o0.xyzw, r1.xyzw
					mov r0.w, r1.z
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r1.x, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r1.x + 64].xyzx
					mul r1.xyz, v5.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
					mov o6.xyzw, r0.xyzw
					mov o8.x, r0.w
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v5.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xy, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.w, l(0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t0.xyzw, s3
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r5.xyzx, r5.xyzx
					rsq r1.w, r1.w
					mul r4.yzw, r1.wwww, r5.xxyz
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					dp3_sat r2.w, r3.xyzx, r4.yzwy
					mov_sat r3.w, cb0[2].w
					eq r4.x, r2.x, l(0.000000)
					movc r3.w, r4.x, l(0), r3.w
					mad r5.xyz, r5.xyzx, r1.wwww, -r0.xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r4.yzwy, r5.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r2.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r2.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r1.w, r0.z, -r1.w
					mad r0.w, r0.w, r1.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t0.xyzw, s3
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r5.xyzx, r5.xyzx
					rsq r1.w, r1.w
					mul r4.yzw, r1.wwww, r5.xxyz
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					dp3_sat r2.w, r3.xyzx, r4.yzwy
					mov_sat r3.w, cb0[2].w
					eq r4.x, r2.x, l(0.000000)
					movc r3.w, r4.x, l(0), r3.w
					mad r5.xyz, r5.xyzx, r1.wwww, -r0.xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r4.yzwy, r5.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r2.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r2.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r1.w, r0.z, -r1.w
					mad r0.w, r0.w, r1.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t0.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.w, r3.w, r3.w
					mul r4.w, r4.w, r4.w
					mul r3.w, r3.w, r4.w
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.z, |r0.y|, r0.w, r3.x
					mad r0.w, r1.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r1.w, r3.z, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mul r3.xyz, r3.yyyy, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t0.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.w, r3.w, r3.w
					mul r4.w, r4.w, r4.w
					mul r3.w, r3.w, r4.w
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.z, |r0.y|, r0.w, r3.x
					mad r0.w, r1.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r1.w, r3.z, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mul r3.xyz, r3.yyyy, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s3
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s4
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s3
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s4
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s4
					sample r4.xyzw, r4.xyzx, t1.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s4
					sample r4.xyzw, r4.xyzx, t1.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r2.w, r3.xyzx, r5.xyzx
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.y, |r0.y|, r0.w, r1.w
					mad r0.w, r2.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r2.w, r3.xyzx, r5.xyzx
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.y, |r0.y|, r0.w, r1.w
					mad r0.w, r2.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r3.w, r5.xyxx, t3.xxxx, s1, r5.z
					add r5.x, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r5.x, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s5
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r3.w, r5.xyxx, t3.xxxx, s1, r5.z
					add r5.x, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r5.x, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s5
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[13].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[13].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[16].z
					mul r0.w, r0.w, cb0[18].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[17].w
					mul r4.xyz, r0.wwww, cb0[17].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[9].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyzw, v6.yyyy, cb0[20].xyzw
					mad r4.xyzw, cb0[19].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[21].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[22].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r3.w, r9.xyxx, t3.xxxx, s1, r5.z
					  sample_c_lz r5.x, r9.zwzz, t3.xxxx, s1, r5.z
					  mul r5.x, r5.x, r8.y
					  mad r3.w, r8.x, r3.w, r5.x
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.x, r6.xyxx, t3.xxxx, s1, r5.z
					  mad r3.w, r8.z, r5.x, r3.w
					  sample_c_lz r5.x, r6.zwzz, t3.xxxx, s1, r5.z
					  mad r3.w, r8.w, r5.x, r3.w
					  add r5.x, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r5.x, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s5
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[13].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[13].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[13].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[16].z
					mul r0.w, r0.w, cb0[18].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[17].w
					mul r4.xyz, r0.wwww, cb0[17].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[9].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyzw, v6.yyyy, cb0[20].xyzw
					mad r4.xyzw, cb0[19].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[21].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[22].xyzw
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r3.w, r9.xyxx, t3.xxxx, s1, r5.z
					  sample_c_lz r5.x, r9.zwzz, t3.xxxx, s1, r5.z
					  mul r5.x, r5.x, r8.y
					  mad r3.w, r8.x, r3.w, r5.x
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.x, r6.xyxx, t3.xxxx, s1, r5.z
					  mad r3.w, r8.z, r5.x, r3.w
					  sample_c_lz r5.x, r6.zwzz, t3.xxxx, s1, r5.z
					  mad r3.w, r8.w, r5.x, r3.w
					  add r5.x, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r5.x, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s5
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[13].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.w, r3.w, r3.w
					mul r4.w, r4.w, r4.w
					mul r3.w, r3.w, r4.w
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.z, |r0.y|, r0.w, r3.x
					mad r0.w, r1.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r1.w, r3.z, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mul r3.xyz, r3.yyyy, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mov r1.w, cb5[0].x
					add r4.xyz, -v6.xyzx, cb4[r1.w + 64].xyzx
					ishl r1.w, cb5[0].x, l(2)
					mov r5.x, cb4[r1.w + 8].z
					mov r5.y, cb4[r1.w + 9].z
					mov r5.z, cb4[r1.w + 10].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb7[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb7[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb7[2].xyzx
					  mad r4.xyz, cb7[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb7[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb7[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb7[6].xyzx
					  mul r4.yzw, r4.xxyz, cb7[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					eq r2.w, r2.x, l(0.000000)
					movc r2.w, r2.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.w, r3.w, r3.w
					mul r4.w, r4.w, r4.w
					mul r3.w, r3.w, r4.w
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.z, |r0.y|, r0.w, r3.x
					mad r0.w, r1.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r1.w, r3.z, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r2.w, r0.x
					mul r3.xyz, r3.yyyy, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s3
					add_sat r1.w, r1.w, r5.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					sample r4.xyzw, r4.xyxx, t1.xyzw, s4
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r2.w, r3.xyzx, r5.xyzx
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.y, |r0.y|, r0.w, r1.w
					mad r0.w, r2.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					mov r1.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r1.w + 64].xyzx
					ishl r1.w, cb5[0].x, l(2)
					mov r6.x, cb4[r1.w + 8].z
					mov r6.y, cb4[r1.w + 9].z
					mov r6.z, cb4[r1.w + 10].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb7[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s3
					add_sat r1.w, r1.w, r5.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					sample r4.xyzw, r4.xyxx, t1.xyzw, s4
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r2.w, r3.xyzx, r5.xyzx
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.y, |r0.y|, r0.w, r1.w
					mad r0.w, r2.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t2.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r5.xyzx, r5.xyzx
					rsq r1.w, r1.w
					mul r4.yzw, r1.wwww, r5.xxyz
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					dp3_sat r2.w, r3.xyzx, r4.yzwy
					mov_sat r3.w, cb0[2].w
					eq r4.x, r2.x, l(0.000000)
					movc r3.w, r4.x, l(0), r3.w
					mad r5.xyz, r5.xyzx, r1.wwww, -r0.xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r4.yzwy, r5.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r2.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r2.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r1.w, r0.z, -r1.w
					mad r0.w, r0.w, r1.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t2.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r5.xyzx, r5.xyzx
					rsq r1.w, r1.w
					mul r4.yzw, r1.wwww, r5.xxyz
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					dp3_sat r2.w, r3.xyzx, r4.yzwy
					mov_sat r3.w, cb0[2].w
					eq r4.x, r2.x, l(0.000000)
					movc r3.w, r4.x, l(0), r3.w
					mad r5.xyz, r5.xyzx, r1.wwww, -r0.xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r4.yzwy, r5.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r2.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r2.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r1.w, r0.z, -r1.w
					mad r0.w, r0.w, r1.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t2.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t2.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t2.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t2.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r5.xyzx, r5.xyzx
					rsq r1.w, r1.w
					mul r4.yzw, r1.wwww, r5.xxyz
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					dp3_sat r2.w, r3.xyzx, r4.yzwy
					mov_sat r3.w, cb0[2].w
					eq r4.x, r2.x, l(0.000000)
					movc r3.w, r4.x, l(0), r3.w
					mad r5.xyz, r5.xyzx, r1.wwww, -r0.xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r4.yzwy, r5.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r2.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r2.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r1.w, r0.z, -r1.w
					mad r0.w, r0.w, r1.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t2.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t2.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t2.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t2.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r5.xyzx, r5.xyzx
					rsq r1.w, r1.w
					mul r4.yzw, r1.wwww, r5.xxyz
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					dp3_sat r2.w, r3.xyzx, r4.yzwy
					mov_sat r3.w, cb0[2].w
					eq r4.x, r2.x, l(0.000000)
					movc r3.w, r4.x, l(0), r3.w
					mad r5.xyz, r5.xyzx, r1.wwww, -r0.xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r4.yzwy, r5.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r2.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r2.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r2.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r1.w, r0.z, -r1.w
					mad r0.w, r0.w, r1.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3_sat r1.w, r3.xyzx, r5.xyzx
					mov_sat r3.w, cb0[2].w
					eq r4.w, r2.x, l(0.000000)
					movc r3.w, r4.w, l(0), r3.w
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r4.x, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.y, |r0.x|, r0.z, r0.w
					mad r0.z, r1.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r1.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r1.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r4.xyz, r3.xyzx, r4.xxxx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s3
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					rsq r3.w, r3.w
					mul r4.yzw, r3.wwww, r5.xxyz
					mul r5.xyz, r4.xxxx, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.yzwy
					max r3.w, r3.w, l(0.000000)
					add r4.x, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r6.x, r5.w
					  mul r6.x, r6.x, l(0.039082)
					  frc r5.w, r5.w
					  mul r6.y, r5.w, l(40.000000)
					  frc r6.z, cb0[2].w
					  add r6.z, r6.z, r6.z
					  mul r6.w, r4.x, r4.x
					  max r6.w, r6.w, l(0.050000)
					  lt r7.x, l(0.000000), r5.w
					  if_nz r7.x
					    mov r7.x, cb0[14].y
					    mov r7.y, cb0[15].y
					    mov r7.z, cb0[16].y
					    dp3 r7.w, r7.xyzx, r7.xyzx
					    rsq r7.w, r7.w
					    mul r7.xyz, r7.wwww, r7.xyzx
					    add r7.w, r1.w, r1.w
					    mad r8.xyz, r3.xyzx, -r7.wwww, r0.yzwy
					    add r9.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r7.w, r9.xyzx, r9.xyzx
					    rsq r7.w, r7.w
					    mad r10.xyz, r7.xyzx, r6.yyyy, cb2[0].xyzx
					    mad r11.xyz, -r7.xyzx, r6.yyyy, cb2[0].xyzx
					    add r10.xyz, r10.xyzx, -v6.xyzx
					    add r11.xyz, r11.xyzx, -v6.xyzx
					    add r11.xyz, -r10.xyzx, r11.xyzx
					    dp3 r8.w, r8.xyzx, r10.xyzx
					    dp3 r9.w, r8.xyzx, r11.xyzx
					    dp3 r10.w, r10.xyzx, r11.xyzx
					    mad r8.w, r8.w, r9.w, -r10.w
					    dp3 r10.w, r11.xyzx, r11.xyzx
					    mad r9.w, -r9.w, r9.w, r10.w
					    div_sat r8.w, r8.w, r9.w
					    mad r10.xyz, r11.xyzx, r8.wwww, r10.xyzx
					    mul_sat r7.w, r6.x, r7.w
					    mad r7.w, r7.w, l(0.500000), r6.w
					    min r7.w, r7.w, l(1.000000)
					    div r7.w, r6.w, r7.w
					    mul r7.w, r7.w, r7.w
					    dp3 r8.w, r10.xyzx, r8.xyzx
					    mad r8.xyz, r8.wwww, r8.xyzx, -r10.xyzx
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul_sat r8.w, r6.x, r8.w
					    mad r8.xyz, r8.xyzx, r8.wwww, r10.xyzx
					    dp3 r8.w, r9.xyzx, r7.xyzx
					    max r8.w, -r6.y, r8.w
					    min r6.y, r6.y, r8.w
					    mad r7.xyz, -r6.yyyy, r7.xyzx, r9.xyzx
					    dp3 r6.y, r7.xyzx, r7.xyzx
					    rsq r6.y, r6.y
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul r8.xyz, r8.wwww, r8.xyzx
					    mul r7.xyz, r6.yyyy, r7.xyzx
					  else 
					    mov r8.xyz, l(0,0,0,0)
					    mov r7.xyzw, l(0,0,0,0)
					  endif 
					  eq r5.w, r5.w, l(0.000000)
					  if_nz r5.w
					    add r1.w, r1.w, r1.w
					    mad r9.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					    add r10.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r1.w, r10.xyzx, r10.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r1.w, r1.w, l(0.500000), r6.w
					    min r1.w, r1.w, l(1.000000)
					    div r1.w, r6.w, r1.w
					    mul r7.w, r1.w, r1.w
					    dp3 r1.w, r10.xyzx, r9.xyzx
					    mad r9.xyz, r1.wwww, r9.xyzx, -r10.xyzx
					    dp3 r1.w, r9.xyzx, r9.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r6.xyw, r9.xyxz, r1.wwww, r10.xyxz
					    dp3 r1.w, r6.xywx, r6.xywx
					    rsq r1.w, r1.w
					    mul r6.xyw, r1.wwww, r6.xyxw
					    mov r7.xyz, r4.yzwy
					    mov r4.yzw, r6.xxyw
					  else 
					    mov r4.yzw, r8.xxyz
					  endif 
					  mul r1.w, r6.z, r7.w
					  dp3 r5.w, r3.xyzx, r7.xyzx
					  max r5.w, r5.w, l(0.000000)
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.yzwy
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.yzwy
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.yzwy, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.x, r4.x
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.xxxx
					add r2.w, r2.w, l(-0.500000)
					add r4.y, -r5.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r2.w, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r2.w, r2.w, r4.z, l(1.000000)
					mul r2.w, r2.w, r4.y
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.x, r4.x, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s3
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					rsq r3.w, r3.w
					mul r4.yzw, r3.wwww, r5.xxyz
					mul r5.xyz, r4.xxxx, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.yzwy
					max r3.w, r3.w, l(0.000000)
					add r4.x, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r6.x, r5.w
					  mul r6.x, r6.x, l(0.039082)
					  frc r5.w, r5.w
					  mul r6.y, r5.w, l(40.000000)
					  frc r6.z, cb0[2].w
					  add r6.z, r6.z, r6.z
					  mul r6.w, r4.x, r4.x
					  max r6.w, r6.w, l(0.050000)
					  lt r7.x, l(0.000000), r5.w
					  if_nz r7.x
					    mov r7.x, cb0[14].y
					    mov r7.y, cb0[15].y
					    mov r7.z, cb0[16].y
					    dp3 r7.w, r7.xyzx, r7.xyzx
					    rsq r7.w, r7.w
					    mul r7.xyz, r7.wwww, r7.xyzx
					    add r7.w, r1.w, r1.w
					    mad r8.xyz, r3.xyzx, -r7.wwww, r0.yzwy
					    add r9.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r7.w, r9.xyzx, r9.xyzx
					    rsq r7.w, r7.w
					    mad r10.xyz, r7.xyzx, r6.yyyy, cb2[0].xyzx
					    mad r11.xyz, -r7.xyzx, r6.yyyy, cb2[0].xyzx
					    add r10.xyz, r10.xyzx, -v6.xyzx
					    add r11.xyz, r11.xyzx, -v6.xyzx
					    add r11.xyz, -r10.xyzx, r11.xyzx
					    dp3 r8.w, r8.xyzx, r10.xyzx
					    dp3 r9.w, r8.xyzx, r11.xyzx
					    dp3 r10.w, r10.xyzx, r11.xyzx
					    mad r8.w, r8.w, r9.w, -r10.w
					    dp3 r10.w, r11.xyzx, r11.xyzx
					    mad r9.w, -r9.w, r9.w, r10.w
					    div_sat r8.w, r8.w, r9.w
					    mad r10.xyz, r11.xyzx, r8.wwww, r10.xyzx
					    mul_sat r7.w, r6.x, r7.w
					    mad r7.w, r7.w, l(0.500000), r6.w
					    min r7.w, r7.w, l(1.000000)
					    div r7.w, r6.w, r7.w
					    mul r7.w, r7.w, r7.w
					    dp3 r8.w, r10.xyzx, r8.xyzx
					    mad r8.xyz, r8.wwww, r8.xyzx, -r10.xyzx
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul_sat r8.w, r6.x, r8.w
					    mad r8.xyz, r8.xyzx, r8.wwww, r10.xyzx
					    dp3 r8.w, r9.xyzx, r7.xyzx
					    max r8.w, -r6.y, r8.w
					    min r6.y, r6.y, r8.w
					    mad r7.xyz, -r6.yyyy, r7.xyzx, r9.xyzx
					    dp3 r6.y, r7.xyzx, r7.xyzx
					    rsq r6.y, r6.y
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul r8.xyz, r8.wwww, r8.xyzx
					    mul r7.xyz, r6.yyyy, r7.xyzx
					  else 
					    mov r8.xyz, l(0,0,0,0)
					    mov r7.xyzw, l(0,0,0,0)
					  endif 
					  eq r5.w, r5.w, l(0.000000)
					  if_nz r5.w
					    add r1.w, r1.w, r1.w
					    mad r9.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					    add r10.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r1.w, r10.xyzx, r10.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r1.w, r1.w, l(0.500000), r6.w
					    min r1.w, r1.w, l(1.000000)
					    div r1.w, r6.w, r1.w
					    mul r7.w, r1.w, r1.w
					    dp3 r1.w, r10.xyzx, r9.xyzx
					    mad r9.xyz, r1.wwww, r9.xyzx, -r10.xyzx
					    dp3 r1.w, r9.xyzx, r9.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r6.xyw, r9.xyxz, r1.wwww, r10.xyxz
					    dp3 r1.w, r6.xywx, r6.xywx
					    rsq r1.w, r1.w
					    mul r6.xyw, r1.wwww, r6.xyxw
					    mov r7.xyz, r4.yzwy
					    mov r4.yzw, r6.xxyw
					  else 
					    mov r4.yzw, r8.xxyz
					  endif 
					  mul r1.w, r6.z, r7.w
					  dp3 r5.w, r3.xyzx, r7.xyzx
					  max r5.w, r5.w, l(0.000000)
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.yzwy
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.yzwy
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.yzwy, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.x, r4.x
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.xxxx
					add r2.w, r2.w, l(-0.500000)
					add r4.y, -r5.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r2.w, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r2.w, r2.w, r4.z, l(1.000000)
					mul r2.w, r2.w, r4.y
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.x, r4.x, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t0.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r4.w, r3.z, r3.z
					mul r4.w, r4.w, r4.w
					mul r3.z, r3.z, r4.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r4.w, -|r0.y|, l(1.000000)
					mul r5.x, r4.w, r4.w
					mul r5.x, r5.x, r5.x
					mul r4.w, r4.w, r5.x
					mad r3.y, r3.y, r4.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r1.w, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.y, |r0.y|, r0.w, r3.x
					mad r0.w, r2.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r3.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t0.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r4.w, r3.z, r3.z
					mul r4.w, r4.w, r4.w
					mul r3.z, r3.z, r4.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r4.w, -|r0.y|, l(1.000000)
					mul r5.x, r4.w, r4.w
					mul r5.x, r5.x, r5.x
					mul r4.w, r4.w, r5.x
					mad r3.y, r3.y, r4.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r1.w, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.y, |r0.y|, r0.w, r3.x
					mad r0.w, r2.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r3.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 9
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s3
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s4
					mul r3.w, r3.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r4.w, r4.xyzx, r4.xyzx
					rsq r4.w, r4.w
					mul r4.xyz, r4.wwww, r4.xyzx
					mul r5.xyz, r3.wwww, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.xyzx
					max r3.w, r3.w, l(0.000000)
					add r4.w, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r5.w, r5.w
					  mul r5.w, r5.w, l(0.039082)
					  frc r6.x, cb0[2].w
					  add r6.x, r6.x, r6.x
					  mul r6.y, r4.w, r4.w
					  max r6.y, r6.y, l(0.050000)
					  add r1.w, r1.w, r1.w
					  mad r7.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					  add r8.xyz, -v6.xyzx, cb2[0].xyzx
					  dp3 r1.w, r8.xyzx, r8.xyzx
					  rsq r1.w, r1.w
					  mul_sat r1.w, r1.w, r5.w
					  mad r1.w, r1.w, l(0.500000), r6.y
					  min r1.w, r1.w, l(1.000000)
					  div r1.w, r6.y, r1.w
					  mul r1.w, r1.w, r1.w
					  dp3 r6.y, r8.xyzx, r7.xyzx
					  mad r6.yzw, r6.yyyy, r7.xxyz, -r8.xxyz
					  dp3 r7.x, r6.yzwy, r6.yzwy
					  rsq r7.x, r7.x
					  mul_sat r5.w, r5.w, r7.x
					  mad r6.yzw, r6.yyzw, r5.wwww, r8.xxyz
					  dp3 r5.w, r6.yzwy, r6.yzwy
					  rsq r5.w, r5.w
					  mul r4.xyz, r5.wwww, r6.yzwy
					  mul r1.w, r1.w, r6.x
					  mov r5.w, r3.w
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.xyzx
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.xyzx, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.w, r4.w
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.wwww
					add r2.w, r2.w, l(-0.500000)
					add r4.x, -r5.w, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r4.x, r2.w, r4.x, l(1.000000)
					add r4.y, -|r0.y|, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r2.w, r2.w, r4.y, l(1.000000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.w, r4.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 9
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s3
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s4
					mul r3.w, r3.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r4.w, r4.xyzx, r4.xyzx
					rsq r4.w, r4.w
					mul r4.xyz, r4.wwww, r4.xyzx
					mul r5.xyz, r3.wwww, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.xyzx
					max r3.w, r3.w, l(0.000000)
					add r4.w, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r5.w, r5.w
					  mul r5.w, r5.w, l(0.039082)
					  frc r6.x, cb0[2].w
					  add r6.x, r6.x, r6.x
					  mul r6.y, r4.w, r4.w
					  max r6.y, r6.y, l(0.050000)
					  add r1.w, r1.w, r1.w
					  mad r7.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					  add r8.xyz, -v6.xyzx, cb2[0].xyzx
					  dp3 r1.w, r8.xyzx, r8.xyzx
					  rsq r1.w, r1.w
					  mul_sat r1.w, r1.w, r5.w
					  mad r1.w, r1.w, l(0.500000), r6.y
					  min r1.w, r1.w, l(1.000000)
					  div r1.w, r6.y, r1.w
					  mul r1.w, r1.w, r1.w
					  dp3 r6.y, r8.xyzx, r7.xyzx
					  mad r6.yzw, r6.yyyy, r7.xxyz, -r8.xxyz
					  dp3 r7.x, r6.yzwy, r6.yzwy
					  rsq r7.x, r7.x
					  mul_sat r5.w, r5.w, r7.x
					  mad r6.yzw, r6.yyzw, r5.wwww, r8.xxyz
					  dp3 r5.w, r6.yzwy, r6.yzwy
					  rsq r5.w, r5.w
					  mul r4.xyz, r5.wwww, r6.yzwy
					  mul r1.w, r1.w, r6.x
					  mov r5.w, r3.w
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.xyzx
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.xyzx, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.w, r4.w
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.wwww
					add r2.w, r2.w, l(-0.500000)
					add r4.x, -r5.w, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r4.x, r2.w, r4.x, l(1.000000)
					add r4.y, -|r0.y|, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r2.w, r2.w, r4.y, l(1.000000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.w, r4.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s4
					sample r4.xyzw, r4.xyzx, t1.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r3.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.x, |r0.x|, r0.z, r0.w
					mad r0.z, r3.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r3.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r1.wwww, r3.xyzx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					eq r0.w, cb4[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb2[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s4
					sample r4.xyzw, r4.xyzx, t1.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r3.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.x, |r0.x|, r0.z, r0.w
					mad r0.z, r3.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r3.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r1.wwww, r3.xyzx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r2.w, r3.xyzx, r5.xyzx
					max r2.w, r2.w, l(0.000000)
					min r3.w, r2.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r2.w, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.x, |r0.y|, r0.w, r1.w
					mad r0.w, r3.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r3.w, r4.x, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r2.w, r3.xyzx, r5.xyzx
					max r2.w, r2.w, l(0.000000)
					min r3.w, r2.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r2.w, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.x, |r0.y|, r0.w, r1.w
					mad r0.w, r3.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r3.w, r4.x, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb3[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 9
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v6.yyyy, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v6.xxxx, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v6.zzzz, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					mul r6.xyzw, v6.yyyy, cb3[9].xyzw
					mad r6.xyzw, cb3[8].xyzw, v6.xxxx, r6.xyzw
					mad r6.xyzw, cb3[10].xyzw, v6.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb3[11].xyzw
					div r5.yzw, r6.xxyz, r6.wwww
					sample_c_lz r5.y, r5.yzyy, t3.xxxx, s1, r5.w
					add r5.z, -cb3[24].x, l(1.000000)
					mad r5.y, r5.y, r5.z, cb3[24].x
					add_sat r2.w, r2.w, r5.y
					min r5.x, r2.w, r5.x
					movc r2.w, r3.w, r5.x, r2.w
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s5
					mul r3.w, r3.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r4.w, r4.xyzx, r4.xyzx
					rsq r4.w, r4.w
					mul r4.xyz, r4.wwww, r4.xyzx
					mul r5.xyz, r3.wwww, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.xyzx
					max r3.w, r3.w, l(0.000000)
					add r4.w, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r5.w, r5.w
					  mul r5.w, r5.w, l(0.039082)
					  frc r6.x, cb0[2].w
					  add r6.x, r6.x, r6.x
					  mul r6.y, r4.w, r4.w
					  max r6.y, r6.y, l(0.050000)
					  add r1.w, r1.w, r1.w
					  mad r7.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					  add r8.xyz, -v6.xyzx, cb2[0].xyzx
					  dp3 r1.w, r8.xyzx, r8.xyzx
					  rsq r1.w, r1.w
					  mul_sat r1.w, r1.w, r5.w
					  mad r1.w, r1.w, l(0.500000), r6.y
					  min r1.w, r1.w, l(1.000000)
					  div r1.w, r6.y, r1.w
					  mul r1.w, r1.w, r1.w
					  dp3 r6.y, r8.xyzx, r7.xyzx
					  mad r6.yzw, r6.yyyy, r7.xxyz, -r8.xxyz
					  dp3 r7.x, r6.yzwy, r6.yzwy
					  rsq r7.x, r7.x
					  mul_sat r5.w, r5.w, r7.x
					  mad r6.yzw, r6.yyzw, r5.wwww, r8.xxyz
					  dp3 r5.w, r6.yzwy, r6.yzwy
					  rsq r5.w, r5.w
					  mul r4.xyz, r5.wwww, r6.yzwy
					  mul r1.w, r1.w, r6.x
					  mov r5.w, r3.w
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.xyzx
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.xyzx, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.w, r4.w
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.wwww
					add r2.w, r2.w, l(-0.500000)
					add r4.x, -r5.w, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r4.x, r2.w, r4.x, l(1.000000)
					add r4.y, -|r0.y|, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r2.w, r2.w, r4.y, l(1.000000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.w, r4.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 9
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyzw, v6.yyyy, cb0[15].xyzw
					mad r4.xyzw, cb0[14].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[17].xyzw
					mov r2.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r6.x, cb4[r2.w + 8].z
					mov r6.y, cb4[r2.w + 9].z
					mov r6.z, cb4[r2.w + 10].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb7[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.x, cb7[0].y, l(1.000000)
					  mul r5.yzw, v6.yyyy, cb7[2].xxyz
					  mad r5.yzw, cb7[1].xxyz, v6.xxxx, r5.yyzw
					  mad r5.yzw, cb7[3].xxyz, v6.zzzz, r5.yyzw
					  add r5.yzw, r5.yyzw, cb7[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					mul r6.xyzw, v6.yyyy, cb3[9].xyzw
					mad r6.xyzw, cb3[8].xyzw, v6.xxxx, r6.xyzw
					mad r6.xyzw, cb3[10].xyzw, v6.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb3[11].xyzw
					div r5.yzw, r6.xxyz, r6.wwww
					sample_c_lz r5.y, r5.yzyy, t3.xxxx, s1, r5.w
					add r5.z, -cb3[24].x, l(1.000000)
					mad r5.y, r5.y, r5.z, cb3[24].x
					add_sat r2.w, r2.w, r5.y
					min r5.x, r2.w, r5.x
					movc r2.w, r3.w, r5.x, r2.w
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s5
					mul r3.w, r3.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r4.w, r4.xyzx, r4.xyzx
					rsq r4.w, r4.w
					mul r4.xyz, r4.wwww, r4.xyzx
					mul r5.xyz, r3.wwww, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.xyzx
					max r3.w, r3.w, l(0.000000)
					add r4.w, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r5.w, r5.w
					  mul r5.w, r5.w, l(0.039082)
					  frc r6.x, cb0[2].w
					  add r6.x, r6.x, r6.x
					  mul r6.y, r4.w, r4.w
					  max r6.y, r6.y, l(0.050000)
					  add r1.w, r1.w, r1.w
					  mad r7.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					  add r8.xyz, -v6.xyzx, cb2[0].xyzx
					  dp3 r1.w, r8.xyzx, r8.xyzx
					  rsq r1.w, r1.w
					  mul_sat r1.w, r1.w, r5.w
					  mad r1.w, r1.w, l(0.500000), r6.y
					  min r1.w, r1.w, l(1.000000)
					  div r1.w, r6.y, r1.w
					  mul r1.w, r1.w, r1.w
					  dp3 r6.y, r8.xyzx, r7.xyzx
					  mad r6.yzw, r6.yyyy, r7.xxyz, -r8.xxyz
					  dp3 r7.x, r6.yzwy, r6.yzwy
					  rsq r7.x, r7.x
					  mul_sat r5.w, r5.w, r7.x
					  mad r6.yzw, r6.yyzw, r5.wwww, r8.xxyz
					  dp3 r5.w, r6.yzwy, r6.yzwy
					  rsq r5.w, r5.w
					  mul r4.xyz, r5.wwww, r6.yzwy
					  mul r1.w, r1.w, r6.x
					  mov r5.w, r3.w
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.xyzx
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.xyzx, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.w, r4.w
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.wwww
					add r2.w, r2.w, l(-0.500000)
					add r4.x, -r5.w, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r4.x, r2.w, r4.x, l(1.000000)
					add r4.y, -|r0.y|, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r2.w, r2.w, r4.y, l(1.000000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.w, r4.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[13].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[13].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[16].z
					mul r2.w, r2.w, cb0[18].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[17].w
					mul r4.xyz, r2.wwww, cb0[17].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[9].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyzw, v6.yyyy, cb0[20].xyzw
					mad r4.xyzw, cb0[19].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[21].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[22].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v6.yyyy, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v6.xxxx, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v6.zzzz, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					lt r5.y, r2.w, l(0.990000)
					if_nz r5.y
					  mul r6.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r6.xyzw, cb3[8].xyzw, v6.xxxx, r6.xyzw
					  mad r6.xyzw, cb3[10].xyzw, v6.zzzz, r6.xyzw
					  add r6.xyzw, r6.xyzw, cb3[11].xyzw
					  div r5.yzw, r6.xxyz, r6.wwww
					  mad r6.xy, r5.yzyy, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.yz, r5.yyzy, cb0[8].zzwz, -r6.xxyx
					  add r7.xyzw, r5.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.yyyz
					  add r7.xz, -r5.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.yz, -r5.yyzy, r5.yyzy, r7.yywy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.y
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.z
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.yz, r9.yywy, r8.zzwz
					  add r5.yz, r5.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.yzyy, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r5.y, r9.xyxx, t3.xxxx, s1, r5.w
					  sample_c_lz r5.z, r9.zwzz, t3.xxxx, s1, r5.w
					  mul r5.z, r5.z, r8.y
					  mad r5.y, r8.x, r5.y, r5.z
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.z, r6.xyxx, t3.xxxx, s1, r5.w
					  mad r5.y, r8.z, r5.z, r5.y
					  sample_c_lz r5.z, r6.zwzz, t3.xxxx, s1, r5.w
					  mad r5.y, r8.w, r5.z, r5.y
					  add r5.z, -cb3[24].x, l(1.000000)
					  mad r5.y, r5.y, r5.z, cb3[24].x
					else 
					  mov r5.y, l(1.000000)
					endif 
					add_sat r2.w, r2.w, r5.y
					min r5.x, r2.w, r5.x
					movc r2.w, r3.w, r5.x, r2.w
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s5
					mul r3.w, r3.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r4.w, r4.xyzx, r4.xyzx
					rsq r4.w, r4.w
					mul r4.xyz, r4.wwww, r4.xyzx
					mul r5.xyz, r3.wwww, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.xyzx
					max r3.w, r3.w, l(0.000000)
					add r4.w, -cb0[13].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r5.w, r5.w
					  mul r5.w, r5.w, l(0.039082)
					  frc r6.x, cb0[2].w
					  add r6.x, r6.x, r6.x
					  mul r6.y, r4.w, r4.w
					  max r6.y, r6.y, l(0.050000)
					  add r1.w, r1.w, r1.w
					  mad r7.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					  add r8.xyz, -v6.xyzx, cb2[0].xyzx
					  dp3 r1.w, r8.xyzx, r8.xyzx
					  rsq r1.w, r1.w
					  mul_sat r1.w, r1.w, r5.w
					  mad r1.w, r1.w, l(0.500000), r6.y
					  min r1.w, r1.w, l(1.000000)
					  div r1.w, r6.y, r1.w
					  mul r1.w, r1.w, r1.w
					  dp3 r6.y, r8.xyzx, r7.xyzx
					  mad r6.yzw, r6.yyyy, r7.xxyz, -r8.xxyz
					  dp3 r7.x, r6.yzwy, r6.yzwy
					  rsq r7.x, r7.x
					  mul_sat r5.w, r5.w, r7.x
					  mad r6.yzw, r6.yyzw, r5.wwww, r8.xxyz
					  dp3 r5.w, r6.yzwy, r6.yzwy
					  rsq r5.w, r5.w
					  mul r4.xyz, r5.wwww, r6.yzwy
					  mul r1.w, r1.w, r6.x
					  mov r5.w, r3.w
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.xyzx
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.xyzx, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.w, r4.w
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.wwww
					add r2.w, r2.w, l(-0.500000)
					add r4.x, -r5.w, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r4.x, r2.w, r4.x, l(1.000000)
					add r4.y, -|r0.y|, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r2.w, r2.w, r4.y, l(1.000000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.w, r4.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[9].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[13].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[13].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[16].z
					mul r2.w, r2.w, cb0[18].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[17].w
					mul r4.xyz, r2.wwww, cb0[17].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[9].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyzw, v6.yyyy, cb0[20].xyzw
					mad r4.xyzw, cb0[19].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[21].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[22].xyzw
					mov r2.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r6.x, cb4[r2.w + 8].z
					mov r6.y, cb4[r2.w + 9].z
					mov r6.z, cb4[r2.w + 10].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb7[0].x, l(1.000000)
					if_nz r3.w
					  eq r5.x, cb7[0].y, l(1.000000)
					  mul r5.yzw, v6.yyyy, cb7[2].xxyz
					  mad r5.yzw, cb7[1].xxyz, v6.xxxx, r5.yyzw
					  mad r5.yzw, cb7[3].xxyz, v6.zzzz, r5.yyzw
					  add r5.yzw, r5.yyzw, cb7[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					lt r5.y, r2.w, l(0.990000)
					if_nz r5.y
					  mul r6.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r6.xyzw, cb3[8].xyzw, v6.xxxx, r6.xyzw
					  mad r6.xyzw, cb3[10].xyzw, v6.zzzz, r6.xyzw
					  add r6.xyzw, r6.xyzw, cb3[11].xyzw
					  div r5.yzw, r6.xxyz, r6.wwww
					  mad r6.xy, r5.yzyy, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.yz, r5.yyzy, cb0[8].zzwz, -r6.xxyx
					  add r7.xyzw, r5.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.yyyz
					  add r7.xz, -r5.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.yz, -r5.yyzy, r5.yyzy, r7.yywy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.y
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.z
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.yz, r9.yywy, r8.zzwz
					  add r5.yz, r5.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.yzyy, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r5.y, r9.xyxx, t3.xxxx, s1, r5.w
					  sample_c_lz r5.z, r9.zwzz, t3.xxxx, s1, r5.w
					  mul r5.z, r5.z, r8.y
					  mad r5.y, r8.x, r5.y, r5.z
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.z, r6.xyxx, t3.xxxx, s1, r5.w
					  mad r5.y, r8.z, r5.z, r5.y
					  sample_c_lz r5.z, r6.zwzz, t3.xxxx, s1, r5.w
					  mad r5.y, r8.w, r5.z, r5.y
					  add r5.z, -cb3[24].x, l(1.000000)
					  mad r5.y, r5.y, r5.z, cb3[24].x
					else 
					  mov r5.y, l(1.000000)
					endif 
					add_sat r2.w, r2.w, r5.y
					min r5.x, r2.w, r5.x
					movc r2.w, r3.w, r5.x, r2.w
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s4
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s5
					mul r3.w, r3.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r4.w, r4.xyzx, r4.xyzx
					rsq r4.w, r4.w
					mul r4.xyz, r4.wwww, r4.xyzx
					mul r5.xyz, r3.wwww, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.xyzx
					max r3.w, r3.w, l(0.000000)
					add r4.w, -cb0[13].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r5.w, r5.w
					  mul r5.w, r5.w, l(0.039082)
					  frc r6.x, cb0[2].w
					  add r6.x, r6.x, r6.x
					  mul r6.y, r4.w, r4.w
					  max r6.y, r6.y, l(0.050000)
					  add r1.w, r1.w, r1.w
					  mad r7.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					  add r8.xyz, -v6.xyzx, cb2[0].xyzx
					  dp3 r1.w, r8.xyzx, r8.xyzx
					  rsq r1.w, r1.w
					  mul_sat r1.w, r1.w, r5.w
					  mad r1.w, r1.w, l(0.500000), r6.y
					  min r1.w, r1.w, l(1.000000)
					  div r1.w, r6.y, r1.w
					  mul r1.w, r1.w, r1.w
					  dp3 r6.y, r8.xyzx, r7.xyzx
					  mad r6.yzw, r6.yyyy, r7.xxyz, -r8.xxyz
					  dp3 r7.x, r6.yzwy, r6.yzwy
					  rsq r7.x, r7.x
					  mul_sat r5.w, r5.w, r7.x
					  mad r6.yzw, r6.yyzw, r5.wwww, r8.xxyz
					  dp3 r5.w, r6.yzwy, r6.yzwy
					  rsq r5.w, r5.w
					  mul r4.xyz, r5.wwww, r6.yzwy
					  mul r1.w, r1.w, r6.x
					  mov r5.w, r3.w
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.xyzx
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.xyzx, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.w, r4.w
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.wwww
					add r2.w, r2.w, l(-0.500000)
					add r4.x, -r5.w, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r4.x, r2.w, r4.x, l(1.000000)
					add r4.y, -|r0.y|, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r2.w, r2.w, r4.y, l(1.000000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.w, r4.w, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r4.w, r3.z, r3.z
					mul r4.w, r4.w, r4.w
					mul r3.z, r3.z, r4.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r4.w, -|r0.y|, l(1.000000)
					mul r5.x, r4.w, r4.w
					mul r5.x, r5.x, r5.x
					mul r4.w, r4.w, r5.x
					mad r3.y, r3.y, r4.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r1.w, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.y, |r0.y|, r0.w, r3.x
					mad r0.w, r2.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r3.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t3.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mov r1.w, cb5[0].x
					add r4.xyz, -v6.xyzx, cb4[r1.w + 64].xyzx
					ishl r1.w, cb5[0].x, l(2)
					mov r5.x, cb4[r1.w + 8].z
					mov r5.y, cb4[r1.w + 9].z
					mov r5.z, cb4[r1.w + 10].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb7[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb7[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb7[2].xyzx
					  mad r4.xyz, cb7[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb7[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb7[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb7[6].xyzx
					  mul r4.yzw, r4.xxyz, cb7[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb7[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r2.w, r1.w, l(1.000000)
					eq r3.w, r2.x, l(0.000000)
					movc r3.w, r3.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r3.x, r0.w, r0.w
					mul r3.y, r0.z, r0.z
					dp2 r3.y, r3.yyyy, r0.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r4.w, r3.z, r3.z
					mul r4.w, r4.w, r4.w
					mul r3.z, r3.z, r4.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r4.w, -|r0.y|, l(1.000000)
					mul r5.x, r4.w, r4.w
					mul r5.x, r5.x, r5.x
					mul r4.w, r4.w, r5.x
					mad r3.y, r3.y, r4.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r1.w, r1.w, r3.y
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r3.y, |r0.y|, r0.w, r3.x
					mad r0.w, r2.w, r0.w, r3.x
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r2.w, r3.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r3.x, r3.x
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r2.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r3.w, r0.x
					mul r3.xyz, r1.wwww, r4.xyzx
					mul r0.xyw, r4.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s3
					add_sat r1.w, r1.w, r5.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					sample r4.xyzw, r4.xyxx, t1.xyzw, s4
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r2.w, r3.xyzx, r5.xyzx
					max r2.w, r2.w, l(0.000000)
					min r3.w, r2.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r2.w, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.x, |r0.y|, r0.w, r1.w
					mad r0.w, r3.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r3.w, r4.x, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r1.w, r1.w, r1.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xy, v6.yyyy, cb0[15].xyxx
					mad r4.xy, cb0[14].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[16].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[17].xyxx
					mov r1.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r1.w + 64].xyzx
					ishl r1.w, cb5[0].x, l(2)
					mov r6.x, cb4[r1.w + 8].z
					mov r6.y, cb4[r1.w + 9].z
					mov r6.z, cb4[r1.w + 10].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb7[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t0.xyzw, s3
					add_sat r1.w, r1.w, r5.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					sample r4.xyzw, r4.xyxx, t1.xyzw, s4
					mul r2.w, r1.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r2.w, r3.xyzx, r5.xyzx
					max r2.w, r2.w, l(0.000000)
					min r3.w, r2.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r6.xyz, -v2.xyzx, r0.xxxx, r5.xyzx
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r5.xyzx, r6.xyzx
					mul r3.xyz, r1.wwww, r4.xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r4.x, r0.z, r0.z
					dp2 r4.x, r4.xxxx, r0.wwww
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r2.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r2.w, r2.w, r4.x
					mad r0.w, -r0.w, r0.w, l(1.000000)
					mad r4.x, |r0.y|, r0.w, r1.w
					mad r0.w, r3.w, r0.w, r1.w
					mul r0.y, r0.w, |r0.y|
					mad r0.y, r3.w, r4.x, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r1.w, r1.w
					mad r1.w, r0.x, r0.w, -r0.x
					mad r0.x, r1.w, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r5.w, |r5.y|, |r5.x|
					max r5.w, |r5.z|, r5.w
					add r5.w, r5.w, -cb2[2].z
					max r5.w, r5.w, l(0.000010)
					mul r5.w, r5.w, cb2[2].w
					div r5.w, cb2[2].y, r5.w
					add r5.w, r5.w, -cb2[2].x
					add r5.w, -r5.w, l(1.000000)
					sample_c_lz r5.x, r5.xyzx, t2.xxxx, s1, r5.w
					add r5.y, -cb3[24].x, l(1.000000)
					mad r5.x, r5.x, r5.y, cb3[24].x
					add_sat r2.w, r2.w, r5.x
					min r4.w, r2.w, r4.w
					movc r2.w, r3.w, r4.w, r2.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					rsq r3.w, r3.w
					mul r4.yzw, r3.wwww, r5.xxyz
					mul r5.xyz, r4.xxxx, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.yzwy
					max r3.w, r3.w, l(0.000000)
					add r4.x, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r6.x, r5.w
					  mul r6.x, r6.x, l(0.039082)
					  frc r5.w, r5.w
					  mul r6.y, r5.w, l(40.000000)
					  frc r6.z, cb0[2].w
					  add r6.z, r6.z, r6.z
					  mul r6.w, r4.x, r4.x
					  max r6.w, r6.w, l(0.050000)
					  lt r7.x, l(0.000000), r5.w
					  if_nz r7.x
					    mov r7.x, cb0[14].y
					    mov r7.y, cb0[15].y
					    mov r7.z, cb0[16].y
					    dp3 r7.w, r7.xyzx, r7.xyzx
					    rsq r7.w, r7.w
					    mul r7.xyz, r7.wwww, r7.xyzx
					    add r7.w, r1.w, r1.w
					    mad r8.xyz, r3.xyzx, -r7.wwww, r0.yzwy
					    add r9.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r7.w, r9.xyzx, r9.xyzx
					    rsq r7.w, r7.w
					    mad r10.xyz, r7.xyzx, r6.yyyy, cb2[0].xyzx
					    mad r11.xyz, -r7.xyzx, r6.yyyy, cb2[0].xyzx
					    add r10.xyz, r10.xyzx, -v6.xyzx
					    add r11.xyz, r11.xyzx, -v6.xyzx
					    add r11.xyz, -r10.xyzx, r11.xyzx
					    dp3 r8.w, r8.xyzx, r10.xyzx
					    dp3 r9.w, r8.xyzx, r11.xyzx
					    dp3 r10.w, r10.xyzx, r11.xyzx
					    mad r8.w, r8.w, r9.w, -r10.w
					    dp3 r10.w, r11.xyzx, r11.xyzx
					    mad r9.w, -r9.w, r9.w, r10.w
					    div_sat r8.w, r8.w, r9.w
					    mad r10.xyz, r11.xyzx, r8.wwww, r10.xyzx
					    mul_sat r7.w, r6.x, r7.w
					    mad r7.w, r7.w, l(0.500000), r6.w
					    min r7.w, r7.w, l(1.000000)
					    div r7.w, r6.w, r7.w
					    mul r7.w, r7.w, r7.w
					    dp3 r8.w, r10.xyzx, r8.xyzx
					    mad r8.xyz, r8.wwww, r8.xyzx, -r10.xyzx
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul_sat r8.w, r6.x, r8.w
					    mad r8.xyz, r8.xyzx, r8.wwww, r10.xyzx
					    dp3 r8.w, r9.xyzx, r7.xyzx
					    max r8.w, -r6.y, r8.w
					    min r6.y, r6.y, r8.w
					    mad r7.xyz, -r6.yyyy, r7.xyzx, r9.xyzx
					    dp3 r6.y, r7.xyzx, r7.xyzx
					    rsq r6.y, r6.y
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul r8.xyz, r8.wwww, r8.xyzx
					    mul r7.xyz, r6.yyyy, r7.xyzx
					  else 
					    mov r8.xyz, l(0,0,0,0)
					    mov r7.xyzw, l(0,0,0,0)
					  endif 
					  eq r5.w, r5.w, l(0.000000)
					  if_nz r5.w
					    add r1.w, r1.w, r1.w
					    mad r9.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					    add r10.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r1.w, r10.xyzx, r10.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r1.w, r1.w, l(0.500000), r6.w
					    min r1.w, r1.w, l(1.000000)
					    div r1.w, r6.w, r1.w
					    mul r7.w, r1.w, r1.w
					    dp3 r1.w, r10.xyzx, r9.xyzx
					    mad r9.xyz, r1.wwww, r9.xyzx, -r10.xyzx
					    dp3 r1.w, r9.xyzx, r9.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r6.xyw, r9.xyxz, r1.wwww, r10.xyxz
					    dp3 r1.w, r6.xywx, r6.xywx
					    rsq r1.w, r1.w
					    mul r6.xyw, r1.wwww, r6.xyxw
					    mov r7.xyz, r4.yzwy
					    mov r4.yzw, r6.xxyw
					  else 
					    mov r4.yzw, r8.xxyz
					  endif 
					  mul r1.w, r6.z, r7.w
					  dp3 r5.w, r3.xyzx, r7.xyzx
					  max r5.w, r5.w, l(0.000000)
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.yzwy
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.yzwy
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.yzwy, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.x, r4.x
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.xxxx
					add r2.w, r2.w, l(-0.500000)
					add r4.y, -r5.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r2.w, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r2.w, r2.w, r4.z, l(1.000000)
					mul r2.w, r2.w, r4.y
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.x, r4.x, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r2.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r6.x, cb4[r2.w + 8].z
					mov r6.y, cb4[r2.w + 9].z
					mov r6.z, cb4[r2.w + 10].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb7[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r5.w, |r5.y|, |r5.x|
					max r5.w, |r5.z|, r5.w
					add r5.w, r5.w, -cb2[2].z
					max r5.w, r5.w, l(0.000010)
					mul r5.w, r5.w, cb2[2].w
					div r5.w, cb2[2].y, r5.w
					add r5.w, r5.w, -cb2[2].x
					add r5.w, -r5.w, l(1.000000)
					sample_c_lz r5.x, r5.xyzx, t2.xxxx, s1, r5.w
					add r5.y, -cb3[24].x, l(1.000000)
					mad r5.x, r5.x, r5.y, cb3[24].x
					add_sat r2.w, r2.w, r5.x
					min r4.w, r2.w, r4.w
					movc r2.w, r3.w, r4.w, r2.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					rsq r3.w, r3.w
					mul r4.yzw, r3.wwww, r5.xxyz
					mul r5.xyz, r4.xxxx, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.yzwy
					max r3.w, r3.w, l(0.000000)
					add r4.x, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r6.x, r5.w
					  mul r6.x, r6.x, l(0.039082)
					  frc r5.w, r5.w
					  mul r6.y, r5.w, l(40.000000)
					  frc r6.z, cb0[2].w
					  add r6.z, r6.z, r6.z
					  mul r6.w, r4.x, r4.x
					  max r6.w, r6.w, l(0.050000)
					  lt r7.x, l(0.000000), r5.w
					  if_nz r7.x
					    mov r7.x, cb0[14].y
					    mov r7.y, cb0[15].y
					    mov r7.z, cb0[16].y
					    dp3 r7.w, r7.xyzx, r7.xyzx
					    rsq r7.w, r7.w
					    mul r7.xyz, r7.wwww, r7.xyzx
					    add r7.w, r1.w, r1.w
					    mad r8.xyz, r3.xyzx, -r7.wwww, r0.yzwy
					    add r9.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r7.w, r9.xyzx, r9.xyzx
					    rsq r7.w, r7.w
					    mad r10.xyz, r7.xyzx, r6.yyyy, cb2[0].xyzx
					    mad r11.xyz, -r7.xyzx, r6.yyyy, cb2[0].xyzx
					    add r10.xyz, r10.xyzx, -v6.xyzx
					    add r11.xyz, r11.xyzx, -v6.xyzx
					    add r11.xyz, -r10.xyzx, r11.xyzx
					    dp3 r8.w, r8.xyzx, r10.xyzx
					    dp3 r9.w, r8.xyzx, r11.xyzx
					    dp3 r10.w, r10.xyzx, r11.xyzx
					    mad r8.w, r8.w, r9.w, -r10.w
					    dp3 r10.w, r11.xyzx, r11.xyzx
					    mad r9.w, -r9.w, r9.w, r10.w
					    div_sat r8.w, r8.w, r9.w
					    mad r10.xyz, r11.xyzx, r8.wwww, r10.xyzx
					    mul_sat r7.w, r6.x, r7.w
					    mad r7.w, r7.w, l(0.500000), r6.w
					    min r7.w, r7.w, l(1.000000)
					    div r7.w, r6.w, r7.w
					    mul r7.w, r7.w, r7.w
					    dp3 r8.w, r10.xyzx, r8.xyzx
					    mad r8.xyz, r8.wwww, r8.xyzx, -r10.xyzx
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul_sat r8.w, r6.x, r8.w
					    mad r8.xyz, r8.xyzx, r8.wwww, r10.xyzx
					    dp3 r8.w, r9.xyzx, r7.xyzx
					    max r8.w, -r6.y, r8.w
					    min r6.y, r6.y, r8.w
					    mad r7.xyz, -r6.yyyy, r7.xyzx, r9.xyzx
					    dp3 r6.y, r7.xyzx, r7.xyzx
					    rsq r6.y, r6.y
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul r8.xyz, r8.wwww, r8.xyzx
					    mul r7.xyz, r6.yyyy, r7.xyzx
					  else 
					    mov r8.xyz, l(0,0,0,0)
					    mov r7.xyzw, l(0,0,0,0)
					  endif 
					  eq r5.w, r5.w, l(0.000000)
					  if_nz r5.w
					    add r1.w, r1.w, r1.w
					    mad r9.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					    add r10.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r1.w, r10.xyzx, r10.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r1.w, r1.w, l(0.500000), r6.w
					    min r1.w, r1.w, l(1.000000)
					    div r1.w, r6.w, r1.w
					    mul r7.w, r1.w, r1.w
					    dp3 r1.w, r10.xyzx, r9.xyzx
					    mad r9.xyz, r1.wwww, r9.xyzx, -r10.xyzx
					    dp3 r1.w, r9.xyzx, r9.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r6.xyw, r9.xyxz, r1.wwww, r10.xyxz
					    dp3 r1.w, r6.xywx, r6.xywx
					    rsq r1.w, r1.w
					    mul r6.xyw, r1.wwww, r6.xyxw
					    mov r7.xyz, r4.yzwy
					    mov r4.yzw, r6.xxyw
					  else 
					    mov r4.yzw, r8.xxyz
					  endif 
					  mul r1.w, r6.z, r7.w
					  dp3 r5.w, r3.xyzx, r7.xyzx
					  max r5.w, r5.w, l(0.000000)
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.yzwy
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.yzwy
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.yzwy, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.x, r4.x
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.xxxx
					add r2.w, r2.w, l(-0.500000)
					add r4.y, -r5.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r2.w, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r2.w, r2.w, r4.z, l(1.000000)
					mul r2.w, r2.w, r4.y
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.x, r4.x, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
					lt r5.x, r2.w, l(0.990000)
					if_nz r5.x
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r5.w, |r5.y|, |r5.x|
					  max r5.w, |r5.z|, r5.w
					  add r5.w, r5.w, -cb2[2].z
					  max r5.w, r5.w, l(0.000010)
					  mul r5.w, r5.w, cb2[2].w
					  div r5.w, cb2[2].y, r5.w
					  add r5.w, r5.w, -cb2[2].x
					  add r5.w, -r5.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t2.xxxx, s1, r5.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t2.xxxx, s1, r5.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t2.xxxx, s1, r5.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t2.xxxx, s1, r5.w
					  dp4 r5.x, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r5.y, -cb3[24].x, l(1.000000)
					  mad r5.x, r5.x, r5.y, cb3[24].x
					else 
					  mov r5.x, l(1.000000)
					endif 
					add_sat r2.w, r2.w, r5.x
					min r4.w, r2.w, r4.w
					movc r2.w, r3.w, r4.w, r2.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					rsq r3.w, r3.w
					mul r4.yzw, r3.wwww, r5.xxyz
					mul r5.xyz, r4.xxxx, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.yzwy
					max r3.w, r3.w, l(0.000000)
					add r4.x, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r6.x, r5.w
					  mul r6.x, r6.x, l(0.039082)
					  frc r5.w, r5.w
					  mul r6.y, r5.w, l(40.000000)
					  frc r6.z, cb0[2].w
					  add r6.z, r6.z, r6.z
					  mul r6.w, r4.x, r4.x
					  max r6.w, r6.w, l(0.050000)
					  lt r7.x, l(0.000000), r5.w
					  if_nz r7.x
					    mov r7.x, cb0[14].y
					    mov r7.y, cb0[15].y
					    mov r7.z, cb0[16].y
					    dp3 r7.w, r7.xyzx, r7.xyzx
					    rsq r7.w, r7.w
					    mul r7.xyz, r7.wwww, r7.xyzx
					    add r7.w, r1.w, r1.w
					    mad r8.xyz, r3.xyzx, -r7.wwww, r0.yzwy
					    add r9.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r7.w, r9.xyzx, r9.xyzx
					    rsq r7.w, r7.w
					    mad r10.xyz, r7.xyzx, r6.yyyy, cb2[0].xyzx
					    mad r11.xyz, -r7.xyzx, r6.yyyy, cb2[0].xyzx
					    add r10.xyz, r10.xyzx, -v6.xyzx
					    add r11.xyz, r11.xyzx, -v6.xyzx
					    add r11.xyz, -r10.xyzx, r11.xyzx
					    dp3 r8.w, r8.xyzx, r10.xyzx
					    dp3 r9.w, r8.xyzx, r11.xyzx
					    dp3 r10.w, r10.xyzx, r11.xyzx
					    mad r8.w, r8.w, r9.w, -r10.w
					    dp3 r10.w, r11.xyzx, r11.xyzx
					    mad r9.w, -r9.w, r9.w, r10.w
					    div_sat r8.w, r8.w, r9.w
					    mad r10.xyz, r11.xyzx, r8.wwww, r10.xyzx
					    mul_sat r7.w, r6.x, r7.w
					    mad r7.w, r7.w, l(0.500000), r6.w
					    min r7.w, r7.w, l(1.000000)
					    div r7.w, r6.w, r7.w
					    mul r7.w, r7.w, r7.w
					    dp3 r8.w, r10.xyzx, r8.xyzx
					    mad r8.xyz, r8.wwww, r8.xyzx, -r10.xyzx
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul_sat r8.w, r6.x, r8.w
					    mad r8.xyz, r8.xyzx, r8.wwww, r10.xyzx
					    dp3 r8.w, r9.xyzx, r7.xyzx
					    max r8.w, -r6.y, r8.w
					    min r6.y, r6.y, r8.w
					    mad r7.xyz, -r6.yyyy, r7.xyzx, r9.xyzx
					    dp3 r6.y, r7.xyzx, r7.xyzx
					    rsq r6.y, r6.y
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul r8.xyz, r8.wwww, r8.xyzx
					    mul r7.xyz, r6.yyyy, r7.xyzx
					  else 
					    mov r8.xyz, l(0,0,0,0)
					    mov r7.xyzw, l(0,0,0,0)
					  endif 
					  eq r5.w, r5.w, l(0.000000)
					  if_nz r5.w
					    add r1.w, r1.w, r1.w
					    mad r9.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					    add r10.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r1.w, r10.xyzx, r10.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r1.w, r1.w, l(0.500000), r6.w
					    min r1.w, r1.w, l(1.000000)
					    div r1.w, r6.w, r1.w
					    mul r7.w, r1.w, r1.w
					    dp3 r1.w, r10.xyzx, r9.xyzx
					    mad r9.xyz, r1.wwww, r9.xyzx, -r10.xyzx
					    dp3 r1.w, r9.xyzx, r9.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r6.xyw, r9.xyxz, r1.wwww, r10.xyxz
					    dp3 r1.w, r6.xywx, r6.xywx
					    rsq r1.w, r1.w
					    mul r6.xyw, r1.wwww, r6.xyxw
					    mov r7.xyz, r4.yzwy
					    mov r4.yzw, r6.xxyw
					  else 
					    mov r4.yzw, r8.xxyz
					  endif 
					  mul r1.w, r6.z, r7.w
					  dp3 r5.w, r3.xyzx, r7.xyzx
					  max r5.w, r5.w, l(0.000000)
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.yzwy
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.yzwy
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.yzwy, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.x, r4.x
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.xxxx
					add r2.w, r2.w, l(-0.500000)
					add r4.y, -r5.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r2.w, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r2.w, r2.w, r4.z, l(1.000000)
					mul r2.w, r2.w, r4.y
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.x, r4.x, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 12
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t4.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r1.w, r3.xyxx, r3.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					dp3 r1.w, r3.xyzx, r0.yzwy
					mul r2.w, r1.w, r1.w
					lt r3.w, l(0.000000), cb0[11].z
					mul r2.w, r2.w, cb0[13].x
					exp r2.w, -r2.w
					add r2.w, r2.w, cb0[12].w
					mul r4.xyz, r2.wwww, cb0[12].xyzx
					and r4.xyz, r3.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r2.w, r2.y, r2.x
					max r2.w, r2.z, r2.w
					add r2.w, -r2.w, l(1.000000)
					mul r1.xyz, r1.xyzx, r2.wwww
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r2.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r2.w + 64].xyzx
					ishl r2.w, cb5[0].x, l(2)
					mov r6.x, cb4[r2.w + 8].z
					mov r6.y, cb4[r2.w + 9].z
					mov r6.z, cb4[r2.w + 10].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb7[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
					lt r5.x, r2.w, l(0.990000)
					if_nz r5.x
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r5.w, |r5.y|, |r5.x|
					  max r5.w, |r5.z|, r5.w
					  add r5.w, r5.w, -cb2[2].z
					  max r5.w, r5.w, l(0.000010)
					  mul r5.w, r5.w, cb2[2].w
					  div r5.w, cb2[2].y, r5.w
					  add r5.w, r5.w, -cb2[2].x
					  add r5.w, -r5.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t2.xxxx, s1, r5.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t2.xxxx, s1, r5.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t2.xxxx, s1, r5.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t2.xxxx, s1, r5.w
					  dp4 r5.x, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r5.y, -cb3[24].x, l(1.000000)
					  mad r5.x, r5.x, r5.y, cb3[24].x
					else 
					  mov r5.x, l(1.000000)
					endif 
					add_sat r2.w, r2.w, r5.x
					min r4.w, r2.w, r4.w
					movc r2.w, r3.w, r4.w, r2.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s4
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					rsq r3.w, r3.w
					mul r4.yzw, r3.wwww, r5.xxyz
					mul r5.xyz, r4.xxxx, cb0[2].xyzx
					dp3 r3.w, r3.xyzx, r4.yzwy
					max r3.w, r3.w, l(0.000000)
					add r4.x, -cb0[8].w, l(1.000000)
					lt r5.w, l(8.000000), cb0[2].w
					if_nz r5.w
					  round_ni r5.w, cb0[2].w
					  mul r5.w, r5.w, l(0.000488)
					  round_ni r6.x, r5.w
					  mul r6.x, r6.x, l(0.039082)
					  frc r5.w, r5.w
					  mul r6.y, r5.w, l(40.000000)
					  frc r6.z, cb0[2].w
					  add r6.z, r6.z, r6.z
					  mul r6.w, r4.x, r4.x
					  max r6.w, r6.w, l(0.050000)
					  lt r7.x, l(0.000000), r5.w
					  if_nz r7.x
					    mov r7.x, cb0[14].y
					    mov r7.y, cb0[15].y
					    mov r7.z, cb0[16].y
					    dp3 r7.w, r7.xyzx, r7.xyzx
					    rsq r7.w, r7.w
					    mul r7.xyz, r7.wwww, r7.xyzx
					    add r7.w, r1.w, r1.w
					    mad r8.xyz, r3.xyzx, -r7.wwww, r0.yzwy
					    add r9.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r7.w, r9.xyzx, r9.xyzx
					    rsq r7.w, r7.w
					    mad r10.xyz, r7.xyzx, r6.yyyy, cb2[0].xyzx
					    mad r11.xyz, -r7.xyzx, r6.yyyy, cb2[0].xyzx
					    add r10.xyz, r10.xyzx, -v6.xyzx
					    add r11.xyz, r11.xyzx, -v6.xyzx
					    add r11.xyz, -r10.xyzx, r11.xyzx
					    dp3 r8.w, r8.xyzx, r10.xyzx
					    dp3 r9.w, r8.xyzx, r11.xyzx
					    dp3 r10.w, r10.xyzx, r11.xyzx
					    mad r8.w, r8.w, r9.w, -r10.w
					    dp3 r10.w, r11.xyzx, r11.xyzx
					    mad r9.w, -r9.w, r9.w, r10.w
					    div_sat r8.w, r8.w, r9.w
					    mad r10.xyz, r11.xyzx, r8.wwww, r10.xyzx
					    mul_sat r7.w, r6.x, r7.w
					    mad r7.w, r7.w, l(0.500000), r6.w
					    min r7.w, r7.w, l(1.000000)
					    div r7.w, r6.w, r7.w
					    mul r7.w, r7.w, r7.w
					    dp3 r8.w, r10.xyzx, r8.xyzx
					    mad r8.xyz, r8.wwww, r8.xyzx, -r10.xyzx
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul_sat r8.w, r6.x, r8.w
					    mad r8.xyz, r8.xyzx, r8.wwww, r10.xyzx
					    dp3 r8.w, r9.xyzx, r7.xyzx
					    max r8.w, -r6.y, r8.w
					    min r6.y, r6.y, r8.w
					    mad r7.xyz, -r6.yyyy, r7.xyzx, r9.xyzx
					    dp3 r6.y, r7.xyzx, r7.xyzx
					    rsq r6.y, r6.y
					    dp3 r8.w, r8.xyzx, r8.xyzx
					    rsq r8.w, r8.w
					    mul r8.xyz, r8.wwww, r8.xyzx
					    mul r7.xyz, r6.yyyy, r7.xyzx
					  else 
					    mov r8.xyz, l(0,0,0,0)
					    mov r7.xyzw, l(0,0,0,0)
					  endif 
					  eq r5.w, r5.w, l(0.000000)
					  if_nz r5.w
					    add r1.w, r1.w, r1.w
					    mad r9.xyz, r3.xyzx, -r1.wwww, r0.yzwy
					    add r10.xyz, -v6.xyzx, cb2[0].xyzx
					    dp3 r1.w, r10.xyzx, r10.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r1.w, r1.w, l(0.500000), r6.w
					    min r1.w, r1.w, l(1.000000)
					    div r1.w, r6.w, r1.w
					    mul r7.w, r1.w, r1.w
					    dp3 r1.w, r10.xyzx, r9.xyzx
					    mad r9.xyz, r1.wwww, r9.xyzx, -r10.xyzx
					    dp3 r1.w, r9.xyzx, r9.xyzx
					    rsq r1.w, r1.w
					    mul_sat r1.w, r1.w, r6.x
					    mad r6.xyw, r9.xyxz, r1.wwww, r10.xyxz
					    dp3 r1.w, r6.xywx, r6.xywx
					    rsq r1.w, r1.w
					    mul r6.xyw, r1.wwww, r6.xyxw
					    mov r7.xyz, r4.yzwy
					    mov r4.yzw, r6.xxyw
					  else 
					    mov r4.yzw, r8.xxyz
					  endif 
					  mul r1.w, r6.z, r7.w
					  dp3 r5.w, r3.xyzx, r7.xyzx
					  max r5.w, r5.w, l(0.000000)
					else 
					  min r5.w, r3.w, l(1.000000)
					  mov r1.w, l(1.000000)
					endif 
					ge r6.x, l(8.000000), cb0[2].w
					if_nz r6.x
					  mov_sat r1.w, cb0[2].w
					  mov r5.w, r3.w
					endif 
					dp3_sat r3.w, r3.xyzx, r4.yzwy
					eq r6.x, r2.x, l(0.000000)
					movc r1.w, r6.x, l(0), r1.w
					mad r6.xyz, -v2.xyzx, r0.xxxx, r4.yzwy
					dp3 r0.x, r6.xyzx, r6.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r6.xyz, r0.xxxx, r6.xyzx
					dp3_sat r0.x, r3.xyzx, r6.xyzx
					dp3 r0.y, r3.xyzx, -r0.yzwy
					dp3_sat r0.z, r4.yzwy, r6.xyzx
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r0.w, r4.x, r4.x
					mul r2.w, r0.z, r0.z
					dp2 r2.w, r2.wwww, r4.xxxx
					add r2.w, r2.w, l(-0.500000)
					add r4.y, -r5.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r2.w, r4.y, l(1.000000)
					add r4.z, -|r0.y|, l(1.000000)
					mul r4.w, r4.z, r4.z
					mul r4.w, r4.w, r4.w
					mul r4.z, r4.z, r4.w
					mad r2.w, r2.w, r4.z, l(1.000000)
					mul r2.w, r2.w, r4.y
					mul r2.w, r5.w, r2.w
					mad r4.x, -r4.x, r4.x, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r0.w
					mad r4.x, r3.w, r4.x, r0.w
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r3.w, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.w, r0.w, r0.w
					mad r4.x, r0.x, r0.w, -r0.x
					mad r0.x, r4.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r1.w, r0.x
					mul r4.xyz, r2.wwww, r3.xyzx
					mul r0.xyw, r3.xyxz, r0.xxxx
					add r0.z, -r0.z, l(1.000000)
					mul r1.w, r0.z, r0.z
					mul r1.w, r1.w, r1.w
					mul r0.z, r0.z, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.zzzz, r2.xyzx
					mul r0.xyz, r0.xywx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r3.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.x, |r0.x|, r0.z, r0.w
					mad r0.z, r3.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r3.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r1.wwww, r3.xyzx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r3.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.x, |r0.x|, r0.z, r0.w
					mad r0.z, r3.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r3.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r1.wwww, r3.xyzx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[2], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r3.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.x, |r0.x|, r0.z, r0.w
					mad r0.z, r3.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r3.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r1.wwww, r3.xyzx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[5].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[5].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb5[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" "LUX_AREALIGHTS" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   x   
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[18], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[2], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.x
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s2
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r0.w, r0.w, r0.w
					lt r1.w, l(0.000000), cb0[11].z
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r4.xyz, r0.wwww, cb0[12].xyzx
					and r4.xyz, r1.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r4.xyz, v6.yyyy, cb0[15].xyzx
					mad r4.xyz, cb0[14].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[16].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[17].xyzx
					mov r0.w, cb5[0].x
					add r5.xyz, -v6.xyzx, cb4[r0.w + 64].xyzx
					ishl r0.w, cb5[0].x, l(2)
					mov r6.x, cb4[r0.w + 8].z
					mov r6.y, cb4[r0.w + 9].z
					mov r6.z, cb4[r0.w + 10].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb7[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb7[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb7[2].xyzx
					  mad r5.xyz, cb7[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb7[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb7[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb7[6].xyzx
					  mul r5.yzw, r5.xxyz, cb7[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add_sat r0.w, r0.w, r3.w
					min r2.w, r0.w, r2.w
					movc r0.w, r1.w, r2.w, r0.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t0.xyzw, s5
					sample r4.xyzw, r4.xyzx, t1.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r1.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, r3.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.000000)
					min r3.w, r1.w, l(1.000000)
					eq r4.w, r2.x, l(0.000000)
					movc r4.w, r4.w, l(0), l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r0.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					max r2.w, r2.w, l(0.001000)
					rsq r2.w, r2.w
					mul r4.xyz, r2.wwww, r4.xyzx
					dp3_sat r2.w, r3.xyzx, r4.xyzx
					dp3 r0.x, r3.xyzx, -r0.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r3.xyz, r0.wwww, r6.xyzx
					add r0.z, -cb0[8].w, l(1.000000)
					mul r0.w, r0.z, r0.z
					mul r4.x, r0.y, r0.y
					dp2 r4.x, r4.xxxx, r0.zzzz
					add r4.x, r4.x, l(-0.500000)
					add r4.y, -r1.w, l(1.000000)
					mul r4.z, r4.y, r4.y
					mul r4.z, r4.z, r4.z
					mul r4.y, r4.y, r4.z
					mad r4.y, r4.x, r4.y, l(1.000000)
					add r4.z, -|r0.x|, l(1.000000)
					mul r5.x, r4.z, r4.z
					mul r5.x, r5.x, r5.x
					mul r4.z, r4.z, r5.x
					mad r4.x, r4.x, r4.z, l(1.000000)
					mul r4.x, r4.x, r4.y
					mul r1.w, r1.w, r4.x
					mad r0.z, -r0.z, r0.z, l(1.000000)
					mad r4.x, |r0.x|, r0.z, r0.w
					mad r0.z, r3.w, r0.z, r0.w
					mul r0.x, r0.z, |r0.x|
					mad r0.x, r3.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r0.z, r0.w, r0.w
					mad r0.w, r2.w, r0.z, -r2.w
					mad r0.w, r0.w, r2.w, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r0.w, r0.w, r0.w, l(0.000000)
					div r0.z, r0.z, r0.w
					mul r0.x, r0.z, r0.x
					mul r0.x, r0.x, l(3.141593)
					mul r0.x, r3.w, r0.x
					max r0.x, r0.x, l(0.000000)
					mul r0.x, r4.w, r0.x
					mul r4.xyz, r1.wwww, r3.xyzx
					mul r0.xzw, r3.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r3.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
					div r0.w, v8.x, cb1[4].y
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, cb1[4].z
					max r0.w, r0.w, l(0.000000)
					mul r0.w, r0.w, cb6[1].x
					mul r0.w, r0.w, -r0.w
					exp r0.w, r0.w
					mul o0.xyz, r0.xyzx, r0.wwww
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "SHADOWCASTER"
			LOD 300
			Tags { "LIGHTMODE" = "SHADOWCASTER" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Cull Off
			GpuProgramID 191167
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					// TANGENT                  0   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					// TANGENT                  0   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					// TANGENT                  0   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					// TANGENT                  0   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// no Input
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			LOD 300
			Tags { "LIGHTMODE" = "DEFERRED" "PerformanceChecks" = "False" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 255374
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb3[0].x
					add o2.xyz, r0.xyzx, -cb2[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb1[4].xyzx
					dp3 r1.y, v1.xyzx, cb1[5].xyzx
					dp3 r1.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, v5.w, cb1[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.w, l(0)
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb1[5].xyzx
					dp3 o8.y, v5.xyzx, cb1[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb3[5].xyzx
					dp3 o8.y, v5.xyzx, cb3[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 3   xy          4     NONE   float       
					// TANGENT                  0   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// COLOR                    0   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v5.xyzw
					dcl_input v6.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o7.w, r1.z
					eq r0.w, cb0[9].w, l(0.000000)
					movc r1.xy, r0.wwww, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov r0.w, cb4[0].x
					add o2.xyz, r0.xyzx, -cb3[r0.w + 64].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v5.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v5.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v5.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mov o3.w, l(0)
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v5.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o4.w, l(0)
					mov o5.xyz, r1.xyzx
					mov o5.w, l(0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v5.wwww
					dp3 o8.z, r0.xyzx, cb2[5].xyzx
					dp3 o8.y, v5.xyzx, cb2[5].xyzx
					mov o8.xw, l(0,0,0,0)
					mov o9.xyzw, v6.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r1.xyzx, r4.xyzx
					exp o3.xyz, -r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r1.xyzx, r4.xyzx
					exp o3.xyz, -r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r1.xyzx, r4.xyzx
					exp o3.xyz, -r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r1.xyzx, r4.xyzx
					exp o3.xyz, -r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r1.xyzx, r4.xyzx
					exp o3.xyz, -r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r1.xyzx, r4.xyzx
					exp o3.xyz, -r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v2.xyzx
					dp3 r0.w, r0.xyzx, r1.xyzx
					add r1.w, r0.w, r0.w
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, cb0[13].x
					exp r0.w, -r0.w
					add r0.w, r0.w, cb0[12].w
					mul r2.xyz, r0.wwww, cb0[12].xyzx
					mad r1.xyz, r0.xyzx, -r1.wwww, r1.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r0.x, r1.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					lt r0.x, l(0.000000), cb0[11].z
					and r0.xyz, r2.xyzx, r0.xxxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r1.xyzx, cb0[4].xyzx, r0.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					mov o1.xyz, r1.xyzx
					add r0.w, -r0.w, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					deriv_rtx r0.xyz, v5.xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					deriv_rty r0.yzw, v5.xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					add r0.x, r0.y, r0.x
					add r0.x, r0.x, r0.x
					min r0.x, r0.x, l(0.100000)
					add r0.y, -cb0[8].w, l(1.000000)
					mad r0.x, r0.y, r0.y, r0.x
					min r0.x, r0.x, l(1.000000)
					sqrt r0.x, r0.x
					add o1.w, -r0.x, l(1.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "DIRLIGHTMAP_SEPARATE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// COLOR                    0   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r0.xyzx
					mul r1.w, r0.w, r0.w
					lt r2.w, l(0.000000), cb0[11].z
					mul r1.w, r1.w, cb0[13].x
					exp r1.w, -r1.w
					add r1.w, r1.w, cb0[12].w
					mul r4.xyz, r1.wwww, cb0[12].xyzx
					and r4.xyz, r2.wwww, r4.xyzx
					mad r1.xyz, r1.xyzx, cb0[4].xyzx, r4.xyzx
					max r1.w, r2.y, r2.x
					max r1.w, r2.z, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					deriv_rtx r4.xyz, v5.xyzx
					deriv_rty r5.xyz, v5.xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					dp3 r4.x, r5.xyzx, r5.xyzx
					add r2.w, r2.w, r4.x
					add r2.w, r2.w, r2.w
					min r2.w, r2.w, l(0.100000)
					mad r1.w, r1.w, r1.w, r2.w
					min r1.w, r1.w, l(1.000000)
					sqrt r1.w, r1.w
					add o1.w, -r1.w, l(1.000000)
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v7.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v7.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v7.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v7.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r2.w, cb2[0].z, l(0.500000)
					  mad r4.y, -cb2[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t0.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t0.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t0.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb1[39].xyzw, r3.xyzw
					  dp4 r5.y, cb1[40].xyzw, r3.xyzw
					  dp4 r5.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul o3.xyz, r1.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r3.xyzx, -r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v5.xyzx
					mad_sat o0.w, r0.x, l(1.300000), l(1.000000)
					mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.xyz, r1.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			LOD 300
			Tags { "LIGHTMODE" = "META" "PerformanceChecks" = "False" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 314280
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 2   xy          4     NONE   float   xy  
					// TEXCOORD                 3   xy          5     NONE   float       
					// TANGENT                  0   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
					// SV_POSITION              0   xyzw        1      POS   float   xyzw
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 1   xyz         3     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output o0.xyzw
					dcl_output_siv o1.xyzw, position
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 2
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o0.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o0.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v4.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o2.xyzw, v7.xyzw
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					mov o4.xyz, r0.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					sqrt o4.w, r0.x
					mov o5.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TEXCOORD                 2   xy          4     NONE   float   xy  
					// TEXCOORD                 3   xy          5     NONE   float       
					// TANGENT                  0   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
					// SV_POSITION              0   xyzw        1      POS   float   xyzw
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 1   xyz         3     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output o0.xyzw
					dcl_output_siv o1.xyzw, position
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 3
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o0.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o0.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v4.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o1.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o2.xyzw, v7.xyzw
					dp3 r0.x, v1.xyzx, cb1[4].xyzx
					dp3 r0.y, v1.xyzx, cb1[5].xyzx
					dp3 r0.z, v1.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyz, r0.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					sqrt o4.w, r0.x
					mov o5.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xyzw        0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float       
					// COLOR                    0   xyzw        2     NONE   float       
					// TEXCOORD                 1   xyz         3     NONE   float       
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v0.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v0.xyxx, t0.xyzw, s0
					mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					add r1.w, -cb0[8].w, l(1.000000)
					mul r1.w, r1.w, r1.w
					mul r1.xyz, r1.xyzx, r1.wwww
					mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[13].y
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[13].zzzz
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xyzw        0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float       
					// COLOR                    0   xyzw        2     NONE   float       
					// TEXCOORD                 1   xyz         3     NONE   float       
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v0.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v0.xyxx, t0.xyzw, s0
					mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					max r0.w, r1.y, r1.x
					max r0.w, r1.z, r0.w
					add r0.w, -r0.w, l(1.000000)
					add r1.w, -cb0[8].w, l(1.000000)
					mul r1.w, r1.w, r1.w
					mul r1.xyz, r1.xyzx, r1.wwww
					mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[13].y
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[13].zzzz
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "VertexLit"
	CustomEditor "LuxStandardShaderGUI"
}