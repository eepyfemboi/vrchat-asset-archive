Shader "Neen/ScreenSpaceFXTestBranchUVNormal" {
	Properties {
		[Header(Screen Shift)] _intensity ("Vertical Shift", Range(-50, 50)) = 0
		_intensity2 ("Horizontal Shift", Range(-50, 50)) = 0
		_yper ("Y-period", Range(-200, 200)) = 1
		_xper ("X-period", Range(-200, 200)) = 1
		[Space(20)] [Header(Magnification)] [Space(5)] [Toggle(MAGNIFIED_ON)] _MG ("Magnified Toggle", Float) = 0
		[Space(5)] _mag ("Magnification", Range(1, 200)) = 8
		[Space(20)] [Header(Normal UV Distort)] [Space(5)] _normTex ("Normal map", 2D) = "black" {}
		_normstr ("Distortion", Float) = 10
		_normscroll ("Distort Direction Speed (XY)", Vector) = (0,0,0,0)
		[Space(20)] [Toggle(INVERT_VIEW)] _INV ("Invert View Toggle", Float) = 0
		[Space(20)] [Header(Blur)] [Space(5)] [Toggle(BLUR_ENABLED)] _BLUR ("Blur Toggle", Float) = 0
		[Toggle(BLUR_FALLOFF)] _BLURFO ("Blur Falloff Toggle", Float) = 0
		[Space(5)] _blurfactor ("Blur Factor", Range(0, 5)) = 1
		[Space(20)] [Header(Falloff)] [Space(5)] _max ("Max Range", Range(0, 20)) = 3
		[HideInInspector] _min ("Minimum Range", Range(0, 20)) = 0
		[Space(20)] [Header(Color Tint)] [Space(5)] _redvalue ("Red Tint", Range(0, 25)) = 0.3
		_greenvalue ("Green Tint", Range(0, 25)) = 0
		_bluevalue ("Blue Tint", Range(0, 25)) = 0
		[Toggle(COLOR_BLACK_OUT)] _blackout ("Color Fade", Float) = 0
		_blackvalue ("Black Tint", Range(0, 1)) = 0
		[Space(10)] [Header(Hue and Saturation)] [Space(5)] _hueshift ("Hue Shift", Float) = 0
		_sat ("Saturation", Float) = 1
		_val ("Value", Float) = 1
		[Toggle(HUE_FALLOFF)] _HSVFO ("HSV Falloff", Float) = 0
		[Space (20)] [Toggle(COLOR_INVERT)] _CINV ("Invert Colors", Float) = 0
		[Toggle(COLIN_FO)] _CIFO ("Inversin Falloff Toggle", Float) = 0
		_redinv ("Red Invert Value", Range(0, 25)) = 1
		_greeninv ("Green Invert Value", Range(0, 25)) = 1
		_blueinv ("Blue Invert Value", Range(0, 25)) = 1
		[Space(20)] [Header(Displacement)] [Space(5)] _noisetex ("Noise", 2D) = "white" {}
		_disp ("Displacement Intensity", Float) = 0.2
		_dispfreq ("Displacement Frequency", Float) = 0.1
		[Header(Ignore me OwO)] _slider ("Slider ", Range(0, 100)) = 3
	}
	SubShader {
		Tags { "QUEUE" = "Overlay+4001" "RenderType" = "Transparent" }
		GrabPass {
			"_GP2"
		}
		Pass {
			Tags { "QUEUE" = "Overlay+4001" "RenderType" = "Transparent" }
			ZClip Off
			Cull Off
			GpuProgramID 62833
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[22], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[19].xyzw
					mad r0.xyzw, cb2[18].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[21].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, r0.zzzz, r1.xyzx
					mad r1.xyz, cb3[7].xyzx, r0.wwww, r1.xyzx
					mov o2.xyzw, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, r1.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					add r1.xyz, cb1[4].xyzx, -cb3[3].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.xyzw, r1.xxxx
					ge r2.x, r1.w, cb0[4].x
					and r2.x, r2.x, l(0x3f800000)
					mad r0.xyzw, -r0.xyzw, r2.xxxx, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mul r2.xyz, r0.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r0.xy, r2.yyyy, r2.xzxx
					mov o1.xyzw, r0.xyzw
					mov o3.xyzw, r1.xyzw
					add r1.x, r1.w, -cb0[4].y
					mul r2.xyzw, v0.yyyy, cb3[1].xyzw
					mad r2.xyzw, cb3[0].xyzw, v0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[2].xyzw, v0.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb3[3].xyzw
					mul r3.xyzw, r2.yyyy, cb4[18].xyzw
					mad r3.xyzw, cb4[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb4[19].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb4[20].xyzw, r2.wwww, r3.xyzw
					mul r1.yzw, r2.xxwy, l(0.000000, 0.500000, 0.500000, -0.500000)
					add r2.xy, r1.zzzz, r1.ywyy
					add r0.xyzw, r0.xyzw, -r2.xyzw
					div r0.xyzw, r0.xyzw, cb0[9].xxxx
					add r0.xyzw, r0.xyzw, r2.xyzw
					add r1.y, -cb0[4].y, cb0[4].x
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					mad r1.x, -r1.y, r1.x, l(1.000000)
					min r1.x, r1.x, l(1.000000)
					mul r1.x, r1.x, r1.x
					mul o4.xyzw, r0.xyzw, r1.xxxx
					mov o5.xyz, cb1[4].zzzz
					mad r0.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad o6.xy, cb1[0].xxxx, cb0[7].xyxx, r0.xyxx
					mov o7.xyzw, v7.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					ishl r0.x, cb4[0].x, l(2)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 57].xyzw
					mad r1.xyzw, cb3[r0.x + 56].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 58].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 59].xyzw, v0.wwww, r1.xyzw
					mul r0.yzw, r1.yyyy, cb2[5].xxyz
					mad r0.yzw, cb2[4].xxyz, r1.xxxx, r0.yyzw
					mad r0.yzw, cb2[6].xxyz, r1.zzzz, r0.yyzw
					mad r0.yzw, cb2[7].xxyz, r1.wwww, r0.yyzw
					mov o2.xyzw, r1.xyzw
					mul r1.xyzw, r0.zzzz, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.yyyy, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, r0.wwww, r1.xyzw
					add r1.xyzw, r1.xyzw, cb2[3].xyzw
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov r0.y, cb4[0].x
					add r2.xyz, -cb2[3].xyzx, cb3[r0.y + 64].xyzx
					dp3 r0.z, r2.xyzx, r2.xyzx
					sqrt r2.xyzw, r0.zzzz
					ge r0.z, r2.w, cb0[4].x
					and r0.z, r0.z, l(0x3f800000)
					mad r1.xyzw, -r1.xyzw, r0.zzzz, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mul r0.zw, r1.wwww, cb3[r0.y + 66].zzzw
					mul r3.xyz, r1.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r3.xy, r3.yyyy, r3.xzxx
					mad r1.xy, r3.xyxx, cb3[r0.y + 66].xyxx, r0.zwzz
					mov o1.xyzw, r1.xyzw
					mov o3.xyzw, r2.xyzw
					add r0.z, r2.w, -cb0[4].y
					mul r2.xyzw, v0.yyyy, cb2[1].xyzw
					mad r2.xyzw, cb2[0].xyzw, v0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[2].xyzw, v0.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb2[3].xyzw
					mul r3.xyzw, r2.yyyy, cb3[r0.x + 25].xyzw
					mad r3.xyzw, cb3[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb3[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					mul r3.xyz, r2.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r0.xw, r3.yyyy, r3.xxxz
					mul r3.xy, r2.wwww, cb3[r0.y + 66].zwzz
					mad r2.xy, r0.xwxx, cb3[r0.y + 66].xyxx, r3.xyxx
					mov o5.xyz, cb3[r0.y + 64].zzzz
					add r1.xyzw, r1.xyzw, -r2.xyzw
					div r1.xyzw, r1.xyzw, cb0[9].xxxx
					add r1.xyzw, r1.xyzw, r2.xyzw
					add r0.x, -cb0[4].y, cb0[4].x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mad r0.x, -r0.x, r0.z, l(1.000000)
					min r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, r0.x
					mul o4.xyzw, r0.xxxx, r1.xyzw
					mad r0.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad o6.xy, cb1[0].xxxx, cb0[7].xyxx, r0.xyxx
					mov o7.xyzw, v7.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "BLUR_ENABLED" "BLUR_FALLOFF" "MAGNIFIED_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[22], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[19].xyzw
					mad r0.xyzw, cb2[18].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[21].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, r0.zzzz, r1.xyzx
					mad r1.xyz, cb3[7].xyzx, r0.wwww, r1.xyzx
					mov o2.xyzw, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, r1.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					add r1.xyz, cb1[4].xyzx, -cb3[3].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sqrt r1.xyzw, r1.xxxx
					ge r2.x, r1.w, cb0[4].x
					and r2.x, r2.x, l(0x3f800000)
					mad r0.xyzw, -r0.xyzw, r2.xxxx, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mul r2.xyz, r0.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r0.xy, r2.yyyy, r2.xzxx
					mov o1.xyzw, r0.xyzw
					mov o3.xyzw, r1.xyzw
					add r1.x, r1.w, -cb0[4].y
					mul r2.xyzw, v0.yyyy, cb3[1].xyzw
					mad r2.xyzw, cb3[0].xyzw, v0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[2].xyzw, v0.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb3[3].xyzw
					mul r3.xyzw, r2.yyyy, cb4[18].xyzw
					mad r3.xyzw, cb4[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb4[19].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb4[20].xyzw, r2.wwww, r3.xyzw
					mul r1.yzw, r2.xxwy, l(0.000000, 0.500000, 0.500000, -0.500000)
					add r2.xy, r1.zzzz, r1.ywyy
					add r0.xyzw, r0.xyzw, -r2.xyzw
					div r0.xyzw, r0.xyzw, cb0[9].xxxx
					add r0.xyzw, r0.xyzw, r2.xyzw
					add r1.y, -cb0[4].y, cb0[4].x
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					mad r1.x, -r1.y, r1.x, l(1.000000)
					min r1.x, r1.x, l(1.000000)
					mul r1.x, r1.x, r1.x
					mul o4.xyzw, r0.xyzw, r1.xxxx
					mov o5.xyz, cb1[4].zzzz
					mad r0.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad o6.xy, cb1[0].xxxx, cb0[7].xyxx, r0.xyxx
					mov o7.xyzw, v7.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "BLUR_ENABLED" "BLUR_FALLOFF" "MAGNIFIED_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					ishl r0.x, cb4[0].x, l(2)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 57].xyzw
					mad r1.xyzw, cb3[r0.x + 56].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 58].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 59].xyzw, v0.wwww, r1.xyzw
					mul r0.yzw, r1.yyyy, cb2[5].xxyz
					mad r0.yzw, cb2[4].xxyz, r1.xxxx, r0.yyzw
					mad r0.yzw, cb2[6].xxyz, r1.zzzz, r0.yyzw
					mad r0.yzw, cb2[7].xxyz, r1.wwww, r0.yyzw
					mov o2.xyzw, r1.xyzw
					mul r1.xyzw, r0.zzzz, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.yyyy, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, r0.wwww, r1.xyzw
					add r1.xyzw, r1.xyzw, cb2[3].xyzw
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov r0.y, cb4[0].x
					add r2.xyz, -cb2[3].xyzx, cb3[r0.y + 64].xyzx
					dp3 r0.z, r2.xyzx, r2.xyzx
					sqrt r2.xyzw, r0.zzzz
					ge r0.z, r2.w, cb0[4].x
					and r0.z, r0.z, l(0x3f800000)
					mad r1.xyzw, -r1.xyzw, r0.zzzz, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mul r0.zw, r1.wwww, cb3[r0.y + 66].zzzw
					mul r3.xyz, r1.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r3.xy, r3.yyyy, r3.xzxx
					mad r1.xy, r3.xyxx, cb3[r0.y + 66].xyxx, r0.zwzz
					mov o1.xyzw, r1.xyzw
					mov o3.xyzw, r2.xyzw
					add r0.z, r2.w, -cb0[4].y
					mul r2.xyzw, v0.yyyy, cb2[1].xyzw
					mad r2.xyzw, cb2[0].xyzw, v0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[2].xyzw, v0.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb2[3].xyzw
					mul r3.xyzw, r2.yyyy, cb3[r0.x + 25].xyzw
					mad r3.xyzw, cb3[r0.x + 24].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r0.x + 26].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb3[r0.x + 27].xyzw, r2.wwww, r3.xyzw
					mul r3.xyz, r2.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r0.xw, r3.yyyy, r3.xxxz
					mul r3.xy, r2.wwww, cb3[r0.y + 66].zwzz
					mad r2.xy, r0.xwxx, cb3[r0.y + 66].xyxx, r3.xyxx
					mov o5.xyz, cb3[r0.y + 64].zzzz
					add r1.xyzw, r1.xyzw, -r2.xyzw
					div r1.xyzw, r1.xyzw, cb0[9].xxxx
					add r1.xyzw, r1.xyzw, r2.xyzw
					add r0.x, -cb0[4].y, cb0[4].x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mad r0.x, -r0.x, r0.z, l(1.000000)
					min r0.x, r0.x, l(1.000000)
					mul r0.x, r0.x, r0.x
					mul o4.xyzw, r0.xxxx, r1.xyzw
					mad r0.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad o6.xy, cb1[0].xxxx, cb0[7].xyxx, r0.xyxx
					mov o7.xyzw, v7.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   x   
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float      w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v3.x
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.w
					dcl_output o0.xyzw
					dcl_temps 3
					mul r0.x, cb0[6].x, l(200.000000)
					mul r0.yz, cb0[3].zzwz, cb1[0].yyyy
					sincos r0.yz, null, r0.yyzy
					mul r1.xy, cb0[3].xyxx, l(0.008000, 0.008000, 0.000000, 0.000000)
					mul r0.yz, r0.yyzy, r1.xxyx
					add r0.w, -cb0[4].y, cb0[4].x
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					add r1.x, v3.x, -cb0[4].y
					mad r0.w, -r0.w, r1.x, l(1.000000)
					min r0.w, r0.w, l(1.000000)
					mul r0.w, r0.w, r0.w
					mad r1.xy, r0.yzyy, r0.wwww, v6.yxyy
					sample r1.xyzw, r1.xyxx, t0.xyzw, s1
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xy, r0.xxxx, r1.xyxx
					mul r1.xy, r1.xyxx, cb0[2].xyxx
					mul r1.xy, r1.xyxx, v7.wwww
					mul r1.xy, r1.xyxx, v3.xxxx
					mul r1.xy, r1.xyxx, v1.zzzz
					mul r1.xy, r1.zzzz, r1.xyxx
					mul r0.x, r0.w, r0.z
					mad r2.y, r0.y, r0.w, v1.y
					div r0.y, cb1[6].y, cb1[6].x
					mad r2.x, r0.x, r0.y, v1.x
					mad r0.xy, r1.xyxx, r0.wwww, r2.xyxx
					sample r1.xyzw, cb1[0].xxxx, t1.xyzw, s2
					ge r1.yw, r1.xxxx, l(0.000000, 0.200000, 0.000000, 0.100000)
					add r1.xz, r1.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
					add r1.xz, r1.xxzx, r1.xxzx
					and r1.yw, r1.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
					mul r1.y, r1.w, r1.y
					sincos r1.w, null, -cb1[0].y
					mad r2.xy, r1.xzxx, cb0[11].wwww, r1.wwww
					mul r1.yw, r1.yyyy, r2.xxxy
					mul r1.xy, r1.xzxx, r1.ywyy
					mul r1.xy, r1.xyxx, l(0.020000, 0.020000, 0.000000, 0.000000)
					mul r1.xy, r0.wwww, r1.xyxx
					mov r0.z, v1.w
					mov r1.z, l(0)
					add r1.xyz, r0.xyzx, r1.xyzx
					div r0.xy, r0.xyxx, v1.wwww
					sample r2.xyzw, r0.xyxx, t2.xyzw, s0
					div r0.xy, r1.xyxx, r1.zzzz
					sample r1.xyzw, r0.xyxx, t2.xyzw, s0
					add r1.xyzw, -r2.xyzw, r1.xyzw
					mad r1.xyzw, cb0[11].wwww, r1.xyzw, r2.xyzw
					add r0.x, -cb0[10].x, l(1.000000)
					mul r1.xyzw, r1.xyzw, r0.xxxx
					mov o0.w, r1.w
					mad r0.xyz, cb0[9].yzwy, r0.wwww, r1.xyzx
					mul r0.w, cb0[10].y, l(0.017453)
					sincos r1.x, r2.x, r0.w
					mul r0.w, cb0[10].z, cb0[10].w
					mul r1.y, r2.x, r0.w
					mul r0.w, r1.x, r0.w
					mul r2.xyzw, r1.yyyy, l(0.413000, 0.300000, 0.588000, 0.886000)
					mul r1.xyzw, r1.yyyy, l(0.701000, 0.587000, 0.114000, 0.299000)
					mad r2.yz, cb0[10].wwww, l(0.000000, 0.299000, 0.587000, 0.000000), -r2.yyzy
					mad r2.xw, cb0[10].wwww, l(0.587000, 0.000000, 0.000000, 0.114000), r2.xxxw
					mad r2.z, -r0.w, l(1.050000), r2.z
					mad r2.y, r0.w, l(1.250000), r2.y
					mul r2.z, r0.y, r2.z
					mad r2.y, r2.y, r0.x, r2.z
					mad r2.z, -r0.w, l(0.203000), r2.w
					mad r2.x, r0.w, l(0.035000), r2.x
					mad o0.z, r2.z, r0.z, r2.y
					mad r1.yzw, cb0[10].wwww, l(0.000000, 0.587000, 0.114000, 0.299000), -r1.yyzw
					mad r1.x, cb0[10].w, l(0.299000), r1.x
					mad r1.x, r0.w, l(0.168000), r1.x
					mad r1.y, r0.w, l(0.330000), r1.y
					mul r1.y, r0.y, r1.y
					mad r1.x, r1.x, r0.x, r1.y
					mad r1.yw, -r0.wwww, l(0.000000, 0.497000, 0.000000, 0.328000), r1.zzzw
					mad r0.w, r0.w, l(0.292000), r1.z
					mad o0.x, r1.y, r0.z, r1.x
					mul r0.x, r0.x, r1.w
					mad r0.x, r2.x, r0.y, r0.x
					mad o0.y, r0.w, r0.z, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   x   
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float      w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v3.x
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.w
					dcl_output o0.xyzw
					dcl_temps 3
					mul r0.x, cb0[6].x, l(200.000000)
					mul r0.yz, cb0[3].zzwz, cb1[0].yyyy
					sincos r0.yz, null, r0.yyzy
					mul r1.xy, cb0[3].xyxx, l(0.004000, 0.004000, 0.000000, 0.000000)
					mul r0.yz, r0.yyzy, r1.xxyx
					add r0.w, -cb0[4].y, cb0[4].x
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					add r1.x, v3.x, -cb0[4].y
					mad r0.w, -r0.w, r1.x, l(1.000000)
					min r0.w, r0.w, l(1.000000)
					mul r0.w, r0.w, r0.w
					mad r1.xy, r0.yzyy, r0.wwww, v6.yxyy
					sample r1.xyzw, r1.xyxx, t0.xyzw, s1
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xy, r0.xxxx, r1.xyxx
					mul r1.xy, r1.xyxx, cb0[2].xyxx
					mul r1.xy, r1.xyxx, v7.wwww
					mul r1.xy, r1.xyxx, v3.xxxx
					mul r1.xy, r1.xyxx, v1.zzzz
					mul r1.xy, r1.zzzz, r1.xyxx
					mul r0.x, r0.w, r0.z
					mad r2.y, r0.y, r0.w, v1.y
					div r0.y, cb1[5].y, cb1[5].x
					mad r2.x, r0.x, r0.y, v1.x
					mad r0.xy, r1.xyxx, r0.wwww, r2.xyxx
					sample r1.xyzw, cb1[0].xxxx, t1.xyzw, s2
					ge r1.yw, r1.xxxx, l(0.000000, 0.200000, 0.000000, 0.100000)
					add r1.xz, r1.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
					add r1.xz, r1.xxzx, r1.xxzx
					and r1.yw, r1.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
					mul r1.y, r1.w, r1.y
					sincos r1.w, null, -cb1[0].y
					mad r2.xy, r1.xzxx, cb0[11].wwww, r1.wwww
					mul r1.yw, r1.yyyy, r2.xxxy
					mul r1.xy, r1.xzxx, r1.ywyy
					mul r1.xy, r1.xyxx, l(0.020000, 0.020000, 0.000000, 0.000000)
					mul r1.xy, r0.wwww, r1.xyxx
					mov r0.z, v1.w
					mov r1.z, l(0)
					add r1.xyz, r0.xyzx, r1.xyzx
					div r0.xy, r0.xyxx, v1.wwww
					sample r2.xyzw, r0.xyxx, t2.xyzw, s0
					div r0.xy, r1.xyxx, r1.zzzz
					sample r1.xyzw, r0.xyxx, t2.xyzw, s0
					add r1.xyzw, -r2.xyzw, r1.xyzw
					mad r1.xyzw, cb0[11].wwww, r1.xyzw, r2.xyzw
					add r0.x, -cb0[10].x, l(1.000000)
					mul r1.xyzw, r1.xyzw, r0.xxxx
					mov o0.w, r1.w
					mad r0.xyz, cb0[9].yzwy, r0.wwww, r1.xyzx
					mul r0.w, cb0[10].y, l(0.017453)
					sincos r1.x, r2.x, r0.w
					mul r0.w, cb0[10].z, cb0[10].w
					mul r1.y, r2.x, r0.w
					mul r0.w, r1.x, r0.w
					mul r2.xyzw, r1.yyyy, l(0.413000, 0.300000, 0.588000, 0.886000)
					mul r1.xyzw, r1.yyyy, l(0.701000, 0.587000, 0.114000, 0.299000)
					mad r2.yz, cb0[10].wwww, l(0.000000, 0.299000, 0.587000, 0.000000), -r2.yyzy
					mad r2.xw, cb0[10].wwww, l(0.587000, 0.000000, 0.000000, 0.114000), r2.xxxw
					mad r2.z, -r0.w, l(1.050000), r2.z
					mad r2.y, r0.w, l(1.250000), r2.y
					mul r2.z, r0.y, r2.z
					mad r2.y, r2.y, r0.x, r2.z
					mad r2.z, -r0.w, l(0.203000), r2.w
					mad r2.x, r0.w, l(0.035000), r2.x
					mad o0.z, r2.z, r0.z, r2.y
					mad r1.yzw, cb0[10].wwww, l(0.000000, 0.587000, 0.114000, 0.299000), -r1.yyzw
					mad r1.x, cb0[10].w, l(0.299000), r1.x
					mad r1.x, r0.w, l(0.168000), r1.x
					mad r1.y, r0.w, l(0.330000), r1.y
					mul r1.y, r0.y, r1.y
					mad r1.x, r1.x, r0.x, r1.y
					mad r1.yw, -r0.wwww, l(0.000000, 0.497000, 0.000000, 0.328000), r1.zzzw
					mad r0.w, r0.w, l(0.292000), r1.z
					mad o0.x, r1.y, r0.z, r1.x
					mul r0.x, r0.x, r1.w
					mad r0.x, r2.x, r0.y, r0.x
					mad o0.y, r0.w, r0.z, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "BLUR_ENABLED" "BLUR_FALLOFF" "MAGNIFIED_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   x   
					// TEXCOORD                 3   xyzw        4     NONE   float   xy w
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float      w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v3.x
					dcl_input_ps linear v4.xyw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.w
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.x, -cb0[10].x, l(1.000000)
					mov r1.z, l(0)
					sample r2.xyzw, cb1[0].xxxx, t1.xyzw, s2
					ge r0.yz, r2.xxxx, l(0.000000, 0.200000, 0.100000, 0.000000)
					add r2.xy, r2.xzxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
					add r2.xy, r2.xyxx, r2.xyxx
					and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
					mul r0.y, r0.z, r0.y
					sincos r0.z, null, -cb1[0].y
					mad r0.zw, r2.xxxy, cb0[11].wwww, r0.zzzz
					mul r0.yz, r0.yyyy, r0.zzwz
					mul r0.yz, r2.xxyx, r0.yyzy
					mul r0.yz, r0.yyzy, l(0.000000, 0.020000, 0.020000, 0.000000)
					add r0.w, -cb0[4].y, cb0[4].x
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					add r1.w, v3.x, -cb0[4].y
					mad r0.w, -r0.w, r1.w, l(1.000000)
					min r0.w, r0.w, l(1.000000)
					mul r0.w, r0.w, r0.w
					mul r1.xy, r0.wwww, r0.yzyy
					mov r2.z, v1.w
					mul r0.y, cb0[6].x, l(200.000000)
					mul r3.xy, cb0[3].zwzz, cb1[0].yyyy
					sincos r3.xy, null, r3.xyxx
					mul r3.zw, cb0[3].xxxy, l(0.000000, 0.000000, 0.008000, 0.008000)
					mul r3.xy, r3.zwzz, r3.xyxx
					mad r3.zw, r3.xxxy, r0.wwww, v6.yyyx
					sample r4.xyzw, r3.zwzz, t0.xyzw, s1
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r0.yz, r0.yyyy, r3.zzwz
					mul r0.yz, r0.yyzy, cb0[2].xxyx
					mul r0.yz, r0.yyzy, v7.wwww
					mul r0.yz, r0.yyzy, v3.xxxx
					mul r0.yz, r0.yyzy, v1.zzzz
					mul r0.yz, r4.zzzz, r0.yyzy
					div r1.w, cb1[6].y, cb1[6].x
					mul r2.w, r0.w, r3.y
					mad r3.y, r3.x, r0.w, v1.y
					mad r3.x, r2.w, r1.w, v1.x
					mad r2.xy, r0.yzyy, r0.wwww, r3.xyxx
					add r2.xyz, r2.xyzx, -v4.xywx
					mad r2.xyz, r2.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), v4.xywx
					add r1.xyz, r1.xyzx, r2.xyzx
					div r0.yz, r1.xxyx, r1.zzzz
					sample r1.xyzw, r0.yzyy, t2.xyzw, s0
					div r0.yz, r2.xxyx, r2.zzzz
					sample r3.xyzw, r0.yzyy, t2.xyzw, s0
					add r1.xyzw, r1.xyzw, -r3.xyzw
					mad r1.xyzw, cb0[11].wwww, r1.xyzw, r3.xyzw
					mul r3.xyzw, r3.xyzw, l(0.180000, 0.180000, 0.180000, 0.180000)
					mul r1.xyzw, r0.xxxx, r1.xyzw
					mad r1.xyz, cb0[9].yzwy, r0.wwww, r1.xyzx
					mul r4.xyzw, cb0[2].xxxx, l(12.000000, 11.000000, 10.000000, 9.000000)
					mad r4.xyzw, r4.yxzw, cb0[4].zzzz, r2.xxxx
					mov r2.w, r4.y
					div r0.xy, r2.wyww, r2.zzzz
					sample r5.xyzw, r0.xyxx, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.168000, 0.168000, 0.168000, 0.168000)
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mov r4.y, r2.y
					div r5.xyzw, r4.xyzy, r2.zzzz
					div r0.xy, r4.wyww, r2.zzzz
					sample r6.xyzw, r0.xyxx, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.171000, 0.171000, 0.171000, 0.171000)
					sample r7.xyzw, r5.xyxx, t2.xyzw, s0
					sample r5.xyzw, r5.zwzz, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.170000, 0.170000, 0.170000, 0.170000)
					mul r7.xyzw, r7.xyzw, l(0.169000, 0.169000, 0.169000, 0.169000)
					mad r1.xyzw, r7.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mul r5.xyzw, cb0[2].xxxx, l(8.000000, 7.000000, 6.000000, 5.000000)
					mad r5.xyzw, r5.wyzx, cb0[4].zzzz, r2.xxxx
					mov r4.xzw, r5.wwyz
					div r6.xyzw, r4.xyzy, r2.zzzz
					div r0.xy, r4.wyww, r2.zzzz
					mov r5.w, r4.y
					sample r4.xyzw, r0.xyxx, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.174000, 0.174000, 0.174000, 0.174000)
					sample r7.xyzw, r6.xyxx, t2.xyzw, s0
					sample r6.xyzw, r6.zwzz, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.173000, 0.173000, 0.173000, 0.173000)
					mul r7.xyzw, r7.xyzw, l(0.172000, 0.172000, 0.172000, 0.172000)
					mad r1.xyzw, r7.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					div r0.xy, r5.xwxx, r2.zzzz
					sample r4.xyzw, r0.xyxx, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.175000, 0.175000, 0.175000, 0.175000)
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					mul r4.xyzw, cb0[2].xxxx, l(4.000000, 3.000000, -2.000000, -3.000000)
					mad r4.xyzw, r4.zxwy, cb0[4].zzzz, r2.xxxx
					mov r5.yz, r4.yywy
					div r6.xyzw, r5.ywzw, r2.zzzz
					sample r7.xyzw, r6.xyxx, t2.xyzw, s0
					sample r6.xyzw, r6.zwzz, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.177000, 0.177000, 0.177000, 0.177000)
					mul r7.xyzw, r7.xyzw, l(0.176000, 0.176000, 0.176000, 0.176000)
					mad r1.xyzw, r7.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					add r0.x, cb0[2].x, cb0[2].x
					mad r5.z, r0.x, cb0[4].z, r2.x
					div r0.xy, r5.zwzz, r2.zzzz
					sample r6.xyzw, r0.xyxx, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.178000, 0.178000, 0.178000, 0.178000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r5.y, cb0[2].x, cb0[4].z, r2.x
					div r0.xy, r5.ywyy, r2.zzzz
					sample r6.xyzw, r0.xyxx, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.179000, 0.179000, 0.179000, 0.179000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					mad r5.x, -cb0[2].x, cb0[4].z, r2.x
					div r0.xy, r5.xwxx, r2.zzzz
					mov r4.y, r5.w
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.179000, 0.179000, 0.179000, 0.179000)
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					div r3.xyzw, r4.xyzy, r2.zzzz
					sample r5.xyzw, r3.xyxx, t2.xyzw, s0
					sample r3.xyzw, r3.zwzz, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.177000, 0.177000, 0.177000, 0.177000)
					mul r5.xyzw, r5.xyzw, l(0.178000, 0.178000, 0.178000, 0.178000)
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					mul r3.xyzw, cb0[2].xxxx, l(-4.000000, -5.000000, -6.000000, -7.000000)
					mad r3.xyzw, r3.yxzw, cb0[4].zzzz, r2.xxxx
					mov r4.w, r3.y
					div r0.xy, r4.wyww, r2.zzzz
					mov r3.y, r4.y
					sample r4.xyzw, r0.xyxx, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.176000, 0.176000, 0.176000, 0.176000)
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					div r4.xyzw, r3.xyzy, r2.zzzz
					div r0.xy, r3.wyww, r2.zzzz
					sample r5.xyzw, r0.xyxx, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.173000, 0.173000, 0.173000, 0.173000)
					sample r6.xyzw, r4.xyxx, t2.xyzw, s0
					sample r4.xyzw, r4.zwzz, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.174000, 0.174000, 0.174000, 0.174000)
					mul r6.xyzw, r6.xyzw, l(0.175000, 0.175000, 0.175000, 0.175000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mul r4.xyzw, cb0[2].xxxx, l(-8.000000, -9.000000, -10.000000, -11.000000)
					mad r4.xyzw, r4.xwyz, cb0[4].zzzz, r2.xxxx
					mov r3.xzw, r4.xxzw
					div r5.xyzw, r3.xyzy, r2.zzzz
					div r0.xy, r3.wyww, r2.zzzz
					mov r4.z, r3.y
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.170000, 0.170000, 0.170000, 0.170000)
					sample r6.xyzw, r5.xyxx, t2.xyzw, s0
					sample r5.xyzw, r5.zwzz, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.171000, 0.171000, 0.171000, 0.171000)
					mul r6.xyzw, r6.xyzw, l(0.172000, 0.172000, 0.172000, 0.172000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					div r0.xy, r4.yzyy, r2.zzzz
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.169000, 0.169000, 0.169000, 0.169000)
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					mul r0.x, cb0[2].x, l(-12.000000)
					mad r4.x, r0.x, cb0[4].z, r2.x
					div r0.xy, r4.xzxx, r2.zzzz
					sample r2.xyzw, r0.xyxx, t2.xyzw, s0
					mul r2.xyzw, r2.xyzw, l(0.168000, 0.168000, 0.168000, 0.168000)
					mad r0.xyzw, r2.xyzw, r0.wwww, r1.xyzw
					mov o0.w, r0.w
					mul r0.w, cb0[10].y, l(0.017453)
					sincos r1.x, r2.x, r0.w
					mul r0.w, cb0[10].z, cb0[10].w
					mul r1.y, r2.x, r0.w
					mul r0.w, r1.x, r0.w
					mul r2.xyzw, r1.yyyy, l(0.413000, 0.300000, 0.588000, 0.886000)
					mul r1.xyzw, r1.yyyy, l(0.701000, 0.587000, 0.114000, 0.299000)
					mad r2.yz, cb0[10].wwww, l(0.000000, 0.299000, 0.587000, 0.000000), -r2.yyzy
					mad r2.xw, cb0[10].wwww, l(0.587000, 0.000000, 0.000000, 0.114000), r2.xxxw
					mad r2.z, -r0.w, l(1.050000), r2.z
					mad r2.y, r0.w, l(1.250000), r2.y
					mul r2.z, r0.y, r2.z
					mad r2.y, r2.y, r0.x, r2.z
					mad r2.z, -r0.w, l(0.203000), r2.w
					mad r2.x, r0.w, l(0.035000), r2.x
					mad o0.z, r2.z, r0.z, r2.y
					mad r1.yzw, cb0[10].wwww, l(0.000000, 0.587000, 0.114000, 0.299000), -r1.yyzw
					mad r1.x, cb0[10].w, l(0.299000), r1.x
					mad r1.x, r0.w, l(0.168000), r1.x
					mad r1.y, r0.w, l(0.330000), r1.y
					mul r1.y, r0.y, r1.y
					mad r1.x, r1.x, r0.x, r1.y
					mad r1.yw, -r0.wwww, l(0.000000, 0.497000, 0.000000, 0.328000), r1.zzzw
					mad r0.w, r0.w, l(0.292000), r1.z
					mad o0.x, r1.y, r0.z, r1.x
					mul r0.x, r0.x, r1.w
					mad r0.x, r2.x, r0.y, r0.x
					mad o0.y, r0.w, r0.z, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "BLUR_ENABLED" "BLUR_FALLOFF" "MAGNIFIED_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   x   
					// TEXCOORD                 3   xyzw        4     NONE   float   xy w
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// COLOR                    0   xyzw        7     NONE   float      w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v3.x
					dcl_input_ps linear v4.xyw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.w
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.x, -cb0[10].x, l(1.000000)
					mov r1.z, l(0)
					sample r2.xyzw, cb1[0].xxxx, t1.xyzw, s2
					ge r0.yz, r2.xxxx, l(0.000000, 0.200000, 0.100000, 0.000000)
					add r2.xy, r2.xzxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
					add r2.xy, r2.xyxx, r2.xyxx
					and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
					mul r0.y, r0.z, r0.y
					sincos r0.z, null, -cb1[0].y
					mad r0.zw, r2.xxxy, cb0[11].wwww, r0.zzzz
					mul r0.yz, r0.yyyy, r0.zzwz
					mul r0.yz, r2.xxyx, r0.yyzy
					mul r0.yz, r0.yyzy, l(0.000000, 0.020000, 0.020000, 0.000000)
					add r0.w, -cb0[4].y, cb0[4].x
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					add r1.w, v3.x, -cb0[4].y
					mad r0.w, -r0.w, r1.w, l(1.000000)
					min r0.w, r0.w, l(1.000000)
					mul r0.w, r0.w, r0.w
					mul r1.xy, r0.wwww, r0.yzyy
					mov r2.z, v1.w
					mul r0.y, cb0[6].x, l(200.000000)
					mul r3.xy, cb0[3].zwzz, cb1[0].yyyy
					sincos r3.xy, null, r3.xyxx
					mul r3.zw, cb0[3].xxxy, l(0.000000, 0.000000, 0.004000, 0.004000)
					mul r3.xy, r3.zwzz, r3.xyxx
					mad r3.zw, r3.xxxy, r0.wwww, v6.yyyx
					sample r4.xyzw, r3.zwzz, t0.xyzw, s1
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r0.yz, r0.yyyy, r3.zzwz
					mul r0.yz, r0.yyzy, cb0[2].xxyx
					mul r0.yz, r0.yyzy, v7.wwww
					mul r0.yz, r0.yyzy, v3.xxxx
					mul r0.yz, r0.yyzy, v1.zzzz
					mul r0.yz, r4.zzzz, r0.yyzy
					div r1.w, cb1[5].y, cb1[5].x
					mul r2.w, r0.w, r3.y
					mad r3.y, r3.x, r0.w, v1.y
					mad r3.x, r2.w, r1.w, v1.x
					mad r2.xy, r0.yzyy, r0.wwww, r3.xyxx
					add r2.xyz, r2.xyzx, -v4.xywx
					mad r2.xyz, r2.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), v4.xywx
					add r1.xyz, r1.xyzx, r2.xyzx
					div r0.yz, r1.xxyx, r1.zzzz
					sample r1.xyzw, r0.yzyy, t2.xyzw, s0
					div r0.yz, r2.xxyx, r2.zzzz
					sample r3.xyzw, r0.yzyy, t2.xyzw, s0
					add r1.xyzw, r1.xyzw, -r3.xyzw
					mad r1.xyzw, cb0[11].wwww, r1.xyzw, r3.xyzw
					mul r3.xyzw, r3.xyzw, l(0.180000, 0.180000, 0.180000, 0.180000)
					mul r1.xyzw, r0.xxxx, r1.xyzw
					mad r1.xyz, cb0[9].yzwy, r0.wwww, r1.xyzx
					mul r4.xyzw, cb0[2].xxxx, l(12.000000, 11.000000, 10.000000, 9.000000)
					mad r4.xyzw, r4.yxzw, cb0[4].zzzz, r2.xxxx
					mov r2.w, r4.y
					div r0.xy, r2.wyww, r2.zzzz
					sample r5.xyzw, r0.xyxx, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.168000, 0.168000, 0.168000, 0.168000)
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mov r4.y, r2.y
					div r5.xyzw, r4.xyzy, r2.zzzz
					div r0.xy, r4.wyww, r2.zzzz
					sample r6.xyzw, r0.xyxx, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.171000, 0.171000, 0.171000, 0.171000)
					sample r7.xyzw, r5.xyxx, t2.xyzw, s0
					sample r5.xyzw, r5.zwzz, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.170000, 0.170000, 0.170000, 0.170000)
					mul r7.xyzw, r7.xyzw, l(0.169000, 0.169000, 0.169000, 0.169000)
					mad r1.xyzw, r7.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mul r5.xyzw, cb0[2].xxxx, l(8.000000, 7.000000, 6.000000, 5.000000)
					mad r5.xyzw, r5.wyzx, cb0[4].zzzz, r2.xxxx
					mov r4.xzw, r5.wwyz
					div r6.xyzw, r4.xyzy, r2.zzzz
					div r0.xy, r4.wyww, r2.zzzz
					mov r5.w, r4.y
					sample r4.xyzw, r0.xyxx, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.174000, 0.174000, 0.174000, 0.174000)
					sample r7.xyzw, r6.xyxx, t2.xyzw, s0
					sample r6.xyzw, r6.zwzz, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.173000, 0.173000, 0.173000, 0.173000)
					mul r7.xyzw, r7.xyzw, l(0.172000, 0.172000, 0.172000, 0.172000)
					mad r1.xyzw, r7.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					div r0.xy, r5.xwxx, r2.zzzz
					sample r4.xyzw, r0.xyxx, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.175000, 0.175000, 0.175000, 0.175000)
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					mul r4.xyzw, cb0[2].xxxx, l(4.000000, 3.000000, -2.000000, -3.000000)
					mad r4.xyzw, r4.zxwy, cb0[4].zzzz, r2.xxxx
					mov r5.yz, r4.yywy
					div r6.xyzw, r5.ywzw, r2.zzzz
					sample r7.xyzw, r6.xyxx, t2.xyzw, s0
					sample r6.xyzw, r6.zwzz, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.177000, 0.177000, 0.177000, 0.177000)
					mul r7.xyzw, r7.xyzw, l(0.176000, 0.176000, 0.176000, 0.176000)
					mad r1.xyzw, r7.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					add r0.x, cb0[2].x, cb0[2].x
					mad r5.z, r0.x, cb0[4].z, r2.x
					div r0.xy, r5.zwzz, r2.zzzz
					sample r6.xyzw, r0.xyxx, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.178000, 0.178000, 0.178000, 0.178000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r5.y, cb0[2].x, cb0[4].z, r2.x
					div r0.xy, r5.ywyy, r2.zzzz
					sample r6.xyzw, r0.xyxx, t2.xyzw, s0
					mul r6.xyzw, r6.xyzw, l(0.179000, 0.179000, 0.179000, 0.179000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					mad r5.x, -cb0[2].x, cb0[4].z, r2.x
					div r0.xy, r5.xwxx, r2.zzzz
					mov r4.y, r5.w
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.179000, 0.179000, 0.179000, 0.179000)
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					div r3.xyzw, r4.xyzy, r2.zzzz
					sample r5.xyzw, r3.xyxx, t2.xyzw, s0
					sample r3.xyzw, r3.zwzz, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.177000, 0.177000, 0.177000, 0.177000)
					mul r5.xyzw, r5.xyzw, l(0.178000, 0.178000, 0.178000, 0.178000)
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					mul r3.xyzw, cb0[2].xxxx, l(-4.000000, -5.000000, -6.000000, -7.000000)
					mad r3.xyzw, r3.yxzw, cb0[4].zzzz, r2.xxxx
					mov r4.w, r3.y
					div r0.xy, r4.wyww, r2.zzzz
					mov r3.y, r4.y
					sample r4.xyzw, r0.xyxx, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.176000, 0.176000, 0.176000, 0.176000)
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					div r4.xyzw, r3.xyzy, r2.zzzz
					div r0.xy, r3.wyww, r2.zzzz
					sample r5.xyzw, r0.xyxx, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.173000, 0.173000, 0.173000, 0.173000)
					sample r6.xyzw, r4.xyxx, t2.xyzw, s0
					sample r4.xyzw, r4.zwzz, t2.xyzw, s0
					mul r4.xyzw, r4.xyzw, l(0.174000, 0.174000, 0.174000, 0.174000)
					mul r6.xyzw, r6.xyzw, l(0.175000, 0.175000, 0.175000, 0.175000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r4.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mul r4.xyzw, cb0[2].xxxx, l(-8.000000, -9.000000, -10.000000, -11.000000)
					mad r4.xyzw, r4.xwyz, cb0[4].zzzz, r2.xxxx
					mov r3.xzw, r4.xxzw
					div r5.xyzw, r3.xyzy, r2.zzzz
					div r0.xy, r3.wyww, r2.zzzz
					mov r4.z, r3.y
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.170000, 0.170000, 0.170000, 0.170000)
					sample r6.xyzw, r5.xyxx, t2.xyzw, s0
					sample r5.xyzw, r5.zwzz, t2.xyzw, s0
					mul r5.xyzw, r5.xyzw, l(0.171000, 0.171000, 0.171000, 0.171000)
					mul r6.xyzw, r6.xyzw, l(0.172000, 0.172000, 0.172000, 0.172000)
					mad r1.xyzw, r6.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					div r0.xy, r4.yzyy, r2.zzzz
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					mul r3.xyzw, r3.xyzw, l(0.169000, 0.169000, 0.169000, 0.169000)
					mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
					mul r0.x, cb0[2].x, l(-12.000000)
					mad r4.x, r0.x, cb0[4].z, r2.x
					div r0.xy, r4.xzxx, r2.zzzz
					sample r2.xyzw, r0.xyxx, t2.xyzw, s0
					mul r2.xyzw, r2.xyzw, l(0.168000, 0.168000, 0.168000, 0.168000)
					mad r0.xyzw, r2.xyzw, r0.wwww, r1.xyzw
					mov o0.w, r0.w
					mul r0.w, cb0[10].y, l(0.017453)
					sincos r1.x, r2.x, r0.w
					mul r0.w, cb0[10].z, cb0[10].w
					mul r1.y, r2.x, r0.w
					mul r0.w, r1.x, r0.w
					mul r2.xyzw, r1.yyyy, l(0.413000, 0.300000, 0.588000, 0.886000)
					mul r1.xyzw, r1.yyyy, l(0.701000, 0.587000, 0.114000, 0.299000)
					mad r2.yz, cb0[10].wwww, l(0.000000, 0.299000, 0.587000, 0.000000), -r2.yyzy
					mad r2.xw, cb0[10].wwww, l(0.587000, 0.000000, 0.000000, 0.114000), r2.xxxw
					mad r2.z, -r0.w, l(1.050000), r2.z
					mad r2.y, r0.w, l(1.250000), r2.y
					mul r2.z, r0.y, r2.z
					mad r2.y, r2.y, r0.x, r2.z
					mad r2.z, -r0.w, l(0.203000), r2.w
					mad r2.x, r0.w, l(0.035000), r2.x
					mad o0.z, r2.z, r0.z, r2.y
					mad r1.yzw, cb0[10].wwww, l(0.000000, 0.587000, 0.114000, 0.299000), -r1.yyzw
					mad r1.x, cb0[10].w, l(0.299000), r1.x
					mad r1.x, r0.w, l(0.168000), r1.x
					mad r1.y, r0.w, l(0.330000), r1.y
					mul r1.y, r0.y, r1.y
					mad r1.x, r1.x, r0.x, r1.y
					mad r1.yw, -r0.wwww, l(0.000000, 0.497000, 0.000000, 0.328000), r1.zzzw
					mad r0.w, r0.w, l(0.292000), r1.z
					mad o0.x, r1.y, r0.z, r1.x
					mul r0.x, r0.x, r1.w
					mad r0.x, r2.x, r0.y, r0.x
					mad o0.y, r0.w, r0.z, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
}