Shader "Hidden/Cibbis shaders/toony standard/Fade" {
	Properties {
		_Color ("Color", Vector) = (1,1,1,1)
		_MainTex ("Albedo (RGB)", 2D) = "white" {}
		[Normal] _BumpMap ("Normal Map", 2D) = "bump" {}
		_BumpScale ("Normal Scale", Float) = 1
		_EmissionMap ("Emission Map", 2D) = "white" {}
		[HDR] _EmissionColor ("Emission Color", Vector) = (0,0,0,1)
		_OcclusionMap ("Occlusion Map", 2D) = "white" {}
		_Occlusion ("Occlusion", Range(0, 1)) = 1
		_Ramp ("Ramp Texture", 2D) = "white" {}
		_RampColor ("Ramp Color", Vector) = (1,1,1,1)
		_ShadowIntensity ("Shadow Intensity", Range(0, 1)) = 0.4
		_RampOffset ("Ramp Offset", Range(-1, 1)) = 0
		_OcclusionOffsetIntensity ("Occlusion Offset", Range(0, 1)) = 0
		_FakeLightColor ("Fake Light Color", Vector) = (1,1,1,1)
		_FakeLightX ("Fake Light X", Range(-1, 1)) = 1
		_FakeLightY ("Fake Light Y", Range(-1, 1)) = 0.7
		_FakeLightZ ("Fake Light Z", Range(-1, 1)) = 0
		_RimStrength ("Rim Strength", Range(0, 1)) = 0
		_RimSharpness ("Rim Sharpness", Range(0, 1)) = 0
		_RimIntensity ("Rim Intensity", Range(-1, 1)) = 0
		_Metallic ("Metallic", Range(0, 1)) = 0
		_MetallicMap ("Metallic Map", 2D) = "white" {}
		_Glossiness ("Smoothness", Range(0, 1)) = 0
		_GlossinessMap ("Smoothness Map", 2D) = "white" {}
		_TangentMap ("Tangent Map", 2D) = "white" {}
		_Anisotropy ("Anisotropy", Range(0, 1)) = 0
		_AnisotropyMap ("Anisotropy Map", 2D) = "white" {}
		_FakeHighlights ("Fake Highlights", 2D) = "black" {}
		_Matcap ("Matcap", 2D) = "white" {}
		_Cubemap ("Cubemap", Cube) = "" {}
		_IndirectColor ("Color", Vector) = (0.7,0.7,0.7,1)
		_HighlightPattern ("Highlight Pattern", 2D) = "white" {}
		_HighlightRamp ("Highlight Ramp Texture", 2D) = "white" {}
		_HighlightRampColor ("Highlight Ramp Color", Vector) = (1,1,1,1)
		_HighlightRampOffset ("Highlight Ramp Offset", Range(-1, 1)) = 0
		_HighlightIntensity ("Highlight Intensity", Range(0, 1)) = 1
		_FakeHighlightIntensity ("Fake Highlight Intensity", Range(0, 1)) = 0.5
		_DetailMask ("Detail Mask", 2D) = "white" {}
		_DetailIntensity ("Detail Intensity", Range(0, 1)) = 1
		_DetailTexture ("Albedo (RGB)", 2D) = "white" {}
		_DetailColor ("Color", Vector) = (1,1,1,1)
		[Normal] _DetailBumpMap ("Detail Normal Map", 2D) = "bump" {}
		_DetailBumpScale ("Detail Normal Scale", Float) = 1
		_Cutoff ("Alpha cutoff", Range(0, 1)) = 0.5
		[Enum(UnityEngine.Rendering.CullMode)] _Cull ("Cull Mode", Float) = 2
		[HideInInspector] _Mode ("__Mode", Float) = 0
		[HideInInspector] _SpMode ("__SpMode", Float) = 0
		[HideInInspector] _IndirectSpecular ("__IndirectSpecular", Float) = 0
		[HideInInspector] _Workflow ("__Workflow", Float) = 0
		[HideInInspector] _SrcBlend ("__src", Float) = 1
		[HideInInspector] _DstBlend ("__dst", Float) = 0
		[HideInInspector] _ZWrite ("__zw", Float) = 1
		[HideInInspector] _ToonyHighlights ("__ToonyHighlights", Float) = 0
		[HideInInspector] _FakeLight ("__FakeLight", Float) = 0
		[HideInInspector] _OcclusionOffset ("_-OcclusionOffset", Float) = 0
		[HideInInspector] _EnableSpecular ("__EnableSpecular", Float) = 0
		[HideInInspector] _DetailMap ("__DetailMap", Float) = 0
		[HideInInspector] _ToonRampBox ("__ToonRampBox", Float) = 0
		[HideInInspector] _RimLightBox ("__RimLightBox", Float) = 0
		[HideInInspector] _SpecularBox ("__SpecularBox", Float) = 0
		[HideInInspector] _DetailBox ("__DetailBox", Float) = 0
	}
	SubShader {
		LOD 100
		Tags { "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		Pass {
			Name "FORWARD"
			LOD 100
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ColorMask RGB -1
			ZWrite Off
			Cull Off
			GpuProgramID 42692
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                10   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mov o9.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                10   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mov o9.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.yzxy
					mov o2.x, r2.z
					mul r0.x, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o9.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.yzxy
					mov o2.x, r2.z
					mul r0.x, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o9.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.yzxy
					mov o2.x, r2.z
					mul r0.x, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o9.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r1.yzxy
					mov o2.x, r2.z
					mul r0.x, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o9.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					mov o2.x, r2.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.w, r1.xyzw, r1.xyzw
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o7.xyz, r1.xyzx
					mul r2.xyz, r1.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r1.zxyz, -r2.xyzx
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r2.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					mad r2.xyzw, r1.xyzw, r1.xyzw, r2.xyzw
					mad r1.xyzw, r1.xyzw, r3.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r3.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r2.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r2.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r2.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o9.xyz, r0.xyzx, r1.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					mov o2.x, r2.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.w, r1.xyzw, r1.xyzw
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o7.xyz, r1.xyzx
					mul r2.xyz, r1.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r1.zxyz, -r2.xyzx
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r2.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					mad r2.xyzw, r1.xyzw, r1.xyzw, r2.xyzw
					mad r1.xyzw, r1.xyzw, r3.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r3.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r2.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r2.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r2.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o9.xyz, r0.xyzx, r1.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					mov o2.x, r2.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.w, r1.xyzw, r1.xyzw
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o7.xyz, r1.xyzx
					mul r2.xyz, r1.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r1.zxyz, -r2.xyzx
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r2.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					mad r2.xyzw, r1.xyzw, r1.xyzw, r2.xyzw
					mad r1.xyzw, r1.xyzw, r3.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r3.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r2.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r2.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r2.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o9.xyz, r0.xyzx, r1.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					// TEXCOORD                10   xyzw       10     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_output o10.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mov o2.w, r0.x
					mul r1.xyzw, v1.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					mov o2.x, r2.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r3.x, v2.xyzx, cb2[4].xyzx
					dp3 r3.y, v2.xyzx, cb2[5].xyzx
					dp3 r3.z, v2.xyzx, cb2[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.w, r1.xyzw, r1.xyzw
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o7.xyz, r1.xyzx
					mul r2.xyz, r1.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r1.zxyz, -r2.xyzx
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r2.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					mad r2.xyzw, r1.xyzw, r1.xyzw, r2.xyzw
					mad r1.xyzw, r1.xyzw, r3.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r3.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r2.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r2.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r2.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r1.xyzw, r3.yzzx, r3.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o9.xyz, r0.xyzx, r1.xyzx
					mov o10.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                10   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mov o9.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                10   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					mov o9.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                10   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[26], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[22].xyzw
					sample r3.xyzw, v1.xyxx, t3.xyzw, s1
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					sample r4.xyzw, v1.xyxx, t4.xyzw, s1
					add r0.x, r4.x, l(-1.000000)
					mad r0.x, cb0[17].x, r0.x, l(1.000000)
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r0.yzw, r1.wwww, r4.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb3[6].xxyz
					  mul r4.yzw, r0.yyzw, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.z, r4.xyzx, r4.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.yzw, r0.yyyy, cb0[2].xxyz
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.yzw, r0.yyzw, r4.xxyz
					max r0.y, r0.z, r0.y
					max r0.y, r0.w, r0.y
					round_ne r0.y, r0.y
					dp3 r0.z, cb2[0].xyzx, cb2[0].xyzx
					ne r0.z, r0.z, l(0.000000)
					ieq r0.z, r0.z, l(0)
					eq r0.w, cb0[4].y, l(1.000000)
					and r0.z, r0.w, r0.z
					mov r4.xyz, cb2[0].xyzx
					movc r4.xyz, r0.zzzz, cb0[24].xyzx, r4.xyzx
					movc r0.y, r0.z, l(1.000000), r0.y
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.w, r3.xyzx, r4.xyzx
					min r0.y, r0.y, r0.w
					mad r0.x, r0.x, cb0[4].w, cb0[17].z
					add r0.x, r0.x, -cb0[4].w
					max r0.w, r0.x, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.x, r0.x, l(0.000000)
					mul r0.y, r0.y, l(0.500000)
					add r0.x, -r0.w, r0.x
					mad r0.x, r0.y, r0.x, r0.w
					sample r4.xyzw, r0.xxxx, t0.xyzw, s2
					mul r0.xyw, r4.xyxz, cb0[20].xyxz
					add r1.w, -cb0[17].y, l(1.000000)
					add r3.w, -r1.w, l(1.000000)
					mad r0.xyw, r0.xyxw, r3.wwww, r1.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.yzw, r3.xxyz, -cb2[45].xxyz
					add r1.yzw, r1.yyzw, cb0[2].xxyz
					mul r0.xyw, r0.xyxw, r1.yzyw
					mul r0.xyw, r0.xyxw, r2.xyxz
					mul r1.yzw, r0.xxyw, cb0[23].xxyz
					movc r0.xyz, r0.zzzz, r1.yzwy, r0.xywx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[25].x, l(1.000000)
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                10   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[26], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb3[0].x
					add r1.xyz, -r0.yzwy, cb2[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[22].xyzw
					sample r3.xyzw, v1.xyxx, t3.xyzw, s1
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					sample r4.xyzw, v1.xyxx, t4.xyzw, s1
					add r0.x, r4.x, l(-1.000000)
					mad r0.x, cb0[17].x, r0.x, l(1.000000)
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r0.yzw, r1.wwww, r4.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb4[6].xxyz
					  mul r4.yzw, r0.yyzw, cb4[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.z, r4.xyzx, r4.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.yzw, r0.yyyy, cb0[2].xxyz
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.yzw, r0.yyzw, r4.xxyz
					max r0.y, r0.z, r0.y
					max r0.y, r0.w, r0.y
					round_ne r0.y, r0.y
					dp3 r0.z, cb1[0].xyzx, cb1[0].xyzx
					ne r0.z, r0.z, l(0.000000)
					ieq r0.z, r0.z, l(0)
					eq r0.w, cb0[4].y, l(1.000000)
					and r0.z, r0.w, r0.z
					mov r4.xyz, cb1[0].xyzx
					movc r4.xyz, r0.zzzz, cb0[24].xyzx, r4.xyzx
					movc r0.y, r0.z, l(1.000000), r0.y
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.w, r3.xyzx, r4.xyzx
					min r0.y, r0.y, r0.w
					mad r0.x, r0.x, cb0[4].w, cb0[17].z
					add r0.x, r0.x, -cb0[4].w
					max r0.w, r0.x, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.x, r0.x, l(0.000000)
					mul r0.y, r0.y, l(0.500000)
					add r0.x, -r0.w, r0.x
					mad r0.x, r0.y, r0.x, r0.w
					sample r4.xyzw, r0.xxxx, t0.xyzw, s2
					mul r0.xyw, r4.xyxz, cb0[20].xyxz
					add r1.w, -cb0[17].y, l(1.000000)
					add r3.w, -r1.w, l(1.000000)
					mad r0.xyw, r0.xyxw, r3.wwww, r1.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.yzw, r3.xxyz, -cb1[45].xxyz
					add r1.yzw, r1.yyzw, cb0[2].xxyz
					mul r0.xyw, r0.xyxw, r1.yzyw
					mul r0.xyw, r0.xyxw, r2.xyxz
					mul r1.yzw, r0.xxyw, cb0[23].xxyz
					movc r0.xyz, r0.zzzz, r1.yzwy, r0.xywx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[25].x, l(1.000000)
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					// TEXCOORD                10   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 17
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[22].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s2
					mul r1.w, r6.x, cb0[19].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s2
					mul r2.w, r7.x, cb0[18].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s6
					sample r9.xyzw, v1.xyxx, t12.xyzw, s2
					add r3.w, r9.x, l(-1.000000)
					mad r3.w, cb0[17].x, r3.w, l(1.000000)
					eq r6.yz, cb0[4].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r5.w, -r2.xyzx, r10.xyzx
					  add r5.w, r5.w, r5.w
					  mad r6.yw, r10.xxxy, -r5.wwww, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r5.w, r2.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s5, r5.w
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r2.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r3.wwww, r7.yyzw
					else 
					  eq r5.w, cb0[4].z, l(2.000000)
					  if_nz r5.w
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r5.w, -r2.xyzx, r9.xyzx
					    add r5.w, r5.w, r5.w
					    mad r8.yzw, r9.xxyz, -r5.wwww, -r2.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s7, r2.w
					    mul r7.yzw, r3.wwww, r9.xxyz
					  else 
					    eq r2.w, cb0[4].z, l(3.000000)
					    mul r8.yzw, r3.wwww, cb0[26].xxyz
					    movc r7.yzw, r2.wwww, r8.yyzw, cb0[7].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[18].xxxx, cb0[21].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r9.xyz, v3.wwww, cb4[2].xyzx
					  mad r9.xyz, cb4[1].xyzx, v2.wwww, r9.xyzx
					  mad r9.xyz, cb4[3].xyzx, v4.wwww, r9.xyzx
					  add r9.xyz, r9.xyzx, cb4[4].xyzx
					  movc r9.xyz, r2.wwww, r9.xyzx, r0.xyzx
					  add r9.xyz, r9.xyzx, -cb4[6].xyzx
					  mul r9.yzw, r9.xxyz, cb4[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r5.w
					  sample r9.xyzw, r9.xzwx, t7.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb2[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mad r5.w, -r7.x, cb0[18].z, l(1.000000)
					dp3 r6.y, -r2.xyzx, r5.xyzx
					add r6.y, r6.y, r6.y
					mad r9.xyz, r5.xyzx, -r6.yyyy, -r2.xyzx
					mul r10.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r9.xyzx, r9.xyzx
					  rsq r2.w, r2.w
					  mul r11.xyz, r2.wwww, r9.xyzx
					  add r12.xyz, -r0.xyzx, cb3[0].xyzx
					  div r12.xyz, r12.xyzx, r11.xyzx
					  add r13.xyz, -r0.xyzx, cb3[1].xyzx
					  div r13.xyz, r13.xyzx, r11.xyzx
					  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					  min r2.w, r12.y, r12.x
					  min r2.w, r12.z, r2.w
					  add r12.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r11.xyz, r11.xyzx, r2.wwww, r12.xyzx
					else 
					  mov r11.xyz, r9.xyzx
					endif 
					mad r2.w, -r5.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r11.xyzw, r11.xyzx, t5.xyzw, s0, r2.w
					add r6.y, r11.w, l(-1.000000)
					mad r6.y, cb3[3].w, r6.y, l(1.000000)
					log r6.y, r6.y
					mul r6.y, r6.y, cb3[3].y
					exp r6.y, r6.y
					mul r6.y, r6.y, cb3[3].x
					mul r12.xyz, r11.xyzx, r6.yyyy
					lt r6.w, cb3[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb3[6].w
					  if_nz r6.w
					    dp3 r6.w, r9.xyzx, r9.xyzx
					    rsq r6.w, r6.w
					    mul r13.xyz, r6.wwww, r9.xyzx
					    add r14.xyz, -r0.xyzx, cb3[4].xyzx
					    div r14.xyz, r14.xyzx, r13.xyzx
					    add r15.xyz, -r0.xyzx, cb3[5].xyzx
					    div r15.xyz, r15.xyzx, r13.xyzx
					    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
					    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
					    min r6.w, r14.y, r14.x
					    min r6.w, r14.z, r6.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r9.xyz, r13.xyzx, r6.wwww, r0.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t6.xyzw, s0, r2.w
					  add r0.x, r9.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r9.xyzx, r0.xxxx
					  mad r9.xyz, r6.yyyy, r11.xyzx, -r0.xyzx
					  mad r12.xyz, cb3[1].wwww, r9.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r3.wwww, r12.xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r10.xyzx, r9.xyzx
					max r2.w, r9.y, r9.x
					max r2.w, r9.z, r2.w
					round_ne r9.w, r2.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r6.z, r2.w
					movc r6.yzw, r2.wwww, cb0[24].xxyz, cb2[0].xxyz
					mov r10.xyz, cb0[24].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r2.wwww, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[22].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r10.x, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r4.xyzx, r10.xxxx
					dp3 r9.x, r5.xyzx, r9.xyzx
					min r9.x, r9.w, r9.x
					mad r3.w, r3.w, cb0[4].w, cb0[17].z
					add r3.w, r3.w, -cb0[4].w
					max r9.y, r3.w, l(0.000000)
					add r3.w, r3.w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					add r9.x, r9.x, l(1.000000)
					mul r9.x, r9.x, l(0.500000)
					add r3.w, -r9.y, r3.w
					mad r3.w, r9.x, r3.w, r9.y
					sample r9.xyzw, r3.wwww, t3.xyzw, s3
					mul r9.xyz, r9.xyzx, cb0[20].xyzx
					add r3.w, -cb0[17].y, l(1.000000)
					add r9.w, -r3.w, l(1.000000)
					mad r9.xyz, r9.xyzx, r9.wwww, r3.wwww
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r5.w, r5.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r0.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, |r0.w|, r1.z
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.w, r2.y, r2.z, -r2.y
					mad r2.y, r3.w, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[17].w, l(0.000000)
					add r3.w, cb0[17].w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					min r5.x, r2.y, l(2.000000)
					mul r5.x, r5.x, l(0.500000)
					add r3.w, -r2.z, r3.w
					mad r2.z, r5.x, r3.w, r2.z
					sample r5.xyzw, r2.zzzz, t4.xyzw, s4
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[19].x, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r1.wwww, -r2.yyyy
					mad r5.xyz, cb0[4].xxxx, r5.xyzx, r2.yyyy
					mul r5.xyz, r8.xxxx, r5.xyzx
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r5.xyz, r5.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r2.xxxx, r5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r3.xyzx, r3.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r10.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[18].z, r1.z
					lt r1.w, l(0.000000), cb0[4].z
					movc r0.xyz, r1.wwww, r7.yzwy, r0.xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[23].xyzx
					mul r6.xyz, r4.xyzx, cb0[23].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r2.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r9.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r3.xyzx
					mul r0.xyz, r0.xyzx, r1.yyyy
					mul r0.xyz, r1.wwww, r0.xyzx
					mul r0.xyz, r9.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r3.xxyz, r1.zzzz
					mad r1.xyz, r1.xxxx, r1.yzwy, r3.xyzx
					mad r2.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[25].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[25].x, l(0.500000), r1.x
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					// TEXCOORD                10   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 17
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[22].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s2
					mul r1.w, r6.x, cb0[19].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s2
					mul r2.w, r7.x, cb0[18].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s6
					sample r9.xyzw, v1.xyxx, t12.xyzw, s2
					add r3.w, r9.x, l(-1.000000)
					mad r3.w, cb0[17].x, r3.w, l(1.000000)
					eq r6.yz, cb0[4].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r5.w, -r2.xyzx, r10.xyzx
					  add r5.w, r5.w, r5.w
					  mad r6.yw, r10.xxxy, -r5.wwww, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r5.w, r2.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s5, r5.w
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r2.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r3.wwww, r7.yyzw
					else 
					  eq r5.w, cb0[4].z, l(2.000000)
					  if_nz r5.w
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r5.w, -r2.xyzx, r9.xyzx
					    add r5.w, r5.w, r5.w
					    mad r8.yzw, r9.xxyz, -r5.wwww, -r2.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s7, r2.w
					    mul r7.yzw, r3.wwww, r9.xxyz
					  else 
					    eq r2.w, cb0[4].z, l(3.000000)
					    mul r8.yzw, r3.wwww, cb0[26].xxyz
					    movc r7.yzw, r2.wwww, r8.yyzw, cb0[7].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[18].xxxx, cb0[21].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r9.xyz, v3.wwww, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v2.wwww, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v4.wwww, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r9.xyz, r2.wwww, r9.xyzx, r0.xyzx
					  add r9.xyz, r9.xyzx, -cb5[6].xyzx
					  mul r9.yzw, r9.xxyz, cb5[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r5.w
					  sample r9.xyzw, r9.xzwx, t7.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb1[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mad r5.w, -r7.x, cb0[18].z, l(1.000000)
					dp3 r6.y, -r2.xyzx, r5.xyzx
					add r6.y, r6.y, r6.y
					mad r9.xyz, r5.xyzx, -r6.yyyy, -r2.xyzx
					mul r10.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb4[2].w
					if_nz r2.w
					  dp3 r2.w, r9.xyzx, r9.xyzx
					  rsq r2.w, r2.w
					  mul r11.xyz, r2.wwww, r9.xyzx
					  add r12.xyz, -r0.xyzx, cb4[0].xyzx
					  div r12.xyz, r12.xyzx, r11.xyzx
					  add r13.xyz, -r0.xyzx, cb4[1].xyzx
					  div r13.xyz, r13.xyzx, r11.xyzx
					  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					  min r2.w, r12.y, r12.x
					  min r2.w, r12.z, r2.w
					  add r12.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r11.xyz, r11.xyzx, r2.wwww, r12.xyzx
					else 
					  mov r11.xyz, r9.xyzx
					endif 
					mad r2.w, -r5.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r11.xyzw, r11.xyzx, t5.xyzw, s0, r2.w
					add r6.y, r11.w, l(-1.000000)
					mad r6.y, cb4[3].w, r6.y, l(1.000000)
					log r6.y, r6.y
					mul r6.y, r6.y, cb4[3].y
					exp r6.y, r6.y
					mul r6.y, r6.y, cb4[3].x
					mul r12.xyz, r11.xyzx, r6.yyyy
					lt r6.w, cb4[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb4[6].w
					  if_nz r6.w
					    dp3 r6.w, r9.xyzx, r9.xyzx
					    rsq r6.w, r6.w
					    mul r13.xyz, r6.wwww, r9.xyzx
					    add r14.xyz, -r0.xyzx, cb4[4].xyzx
					    div r14.xyz, r14.xyzx, r13.xyzx
					    add r15.xyz, -r0.xyzx, cb4[5].xyzx
					    div r15.xyz, r15.xyzx, r13.xyzx
					    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
					    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
					    min r6.w, r14.y, r14.x
					    min r6.w, r14.z, r6.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r9.xyz, r13.xyzx, r6.wwww, r0.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t6.xyzw, s0, r2.w
					  add r0.x, r9.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r9.xyzx, r0.xxxx
					  mad r9.xyz, r6.yyyy, r11.xyzx, -r0.xyzx
					  mad r12.xyz, cb4[1].wwww, r9.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r3.wwww, r12.xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r10.xyzx, r9.xyzx
					max r2.w, r9.y, r9.x
					max r2.w, r9.z, r2.w
					round_ne r9.w, r2.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r6.z, r2.w
					movc r6.yzw, r2.wwww, cb0[24].xxyz, cb1[0].xxyz
					mov r10.xyz, cb0[24].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r2.wwww, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[22].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r10.x, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r4.xyzx, r10.xxxx
					dp3 r9.x, r5.xyzx, r9.xyzx
					min r9.x, r9.w, r9.x
					mad r3.w, r3.w, cb0[4].w, cb0[17].z
					add r3.w, r3.w, -cb0[4].w
					max r9.y, r3.w, l(0.000000)
					add r3.w, r3.w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					add r9.x, r9.x, l(1.000000)
					mul r9.x, r9.x, l(0.500000)
					add r3.w, -r9.y, r3.w
					mad r3.w, r9.x, r3.w, r9.y
					sample r9.xyzw, r3.wwww, t3.xyzw, s3
					mul r9.xyz, r9.xyzx, cb0[20].xyzx
					add r3.w, -cb0[17].y, l(1.000000)
					add r9.w, -r3.w, l(1.000000)
					mad r9.xyz, r9.xyzx, r9.wwww, r3.wwww
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r5.w, r5.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r0.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, |r0.w|, r1.z
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.w, r2.y, r2.z, -r2.y
					mad r2.y, r3.w, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[17].w, l(0.000000)
					add r3.w, cb0[17].w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					min r5.x, r2.y, l(2.000000)
					mul r5.x, r5.x, l(0.500000)
					add r3.w, -r2.z, r3.w
					mad r2.z, r5.x, r3.w, r2.z
					sample r5.xyzw, r2.zzzz, t4.xyzw, s4
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[19].x, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r1.wwww, -r2.yyyy
					mad r5.xyz, cb0[4].xxxx, r5.xyzx, r2.yyyy
					mul r5.xyz, r8.xxxx, r5.xyzx
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r5.xyz, r5.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r2.xxxx, r5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r3.xyzx, r3.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r10.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[18].z, r1.z
					lt r1.w, l(0.000000), cb0[4].z
					movc r0.xyz, r1.wwww, r7.yzwy, r0.xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[23].xyzx
					mul r6.xyz, r4.xyzx, cb0[23].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r2.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r9.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r3.xyzx
					mul r0.xyz, r0.xyzx, r1.yyyy
					mul r0.xyz, r1.wwww, r0.xyzx
					mul r0.xyz, r9.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r3.xxyz, r1.zzzz
					mad r1.xyz, r1.xxxx, r1.yzwy, r3.xyzx
					mad r2.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[25].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[25].x, l(0.500000), r1.x
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					// TEXCOORD                10   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[26], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[22].xyzw
					sample r3.xyzw, v1.xyxx, t3.xyzw, s1
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					sample r4.xyzw, v1.xyxx, t4.xyzw, s1
					add r0.x, r4.x, l(-1.000000)
					mad r0.x, cb0[17].x, r0.x, l(1.000000)
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r0.yzw, r1.wwww, r4.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb3[6].xxyz
					  mul r4.yzw, r0.yyzw, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.z, r4.xyzx, r4.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.yzw, r0.yyyy, cb0[2].xxyz
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.yzw, r0.yyzw, r4.xxyz
					max r0.y, r0.z, r0.y
					max r0.y, r0.w, r0.y
					round_ne r0.y, r0.y
					dp3 r0.z, cb2[0].xyzx, cb2[0].xyzx
					ne r0.z, r0.z, l(0.000000)
					ieq r0.z, r0.z, l(0)
					eq r0.w, cb0[4].y, l(1.000000)
					and r0.z, r0.w, r0.z
					mov r4.xyz, cb2[0].xyzx
					movc r4.xyz, r0.zzzz, cb0[24].xyzx, r4.xyzx
					movc r0.y, r0.z, l(1.000000), r0.y
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.w, r3.xyzx, r4.xyzx
					min r0.y, r0.y, r0.w
					mad r0.x, r0.x, cb0[4].w, cb0[17].z
					add r0.x, r0.x, -cb0[4].w
					max r0.w, r0.x, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.x, r0.x, l(0.000000)
					mul r0.y, r0.y, l(0.500000)
					add r0.x, -r0.w, r0.x
					mad r0.x, r0.y, r0.x, r0.w
					sample r4.xyzw, r0.xxxx, t0.xyzw, s2
					mul r0.xyw, r4.xyxz, cb0[20].xyxz
					add r1.w, -cb0[17].y, l(1.000000)
					add r3.w, -r1.w, l(1.000000)
					mad r0.xyw, r0.xyxw, r3.wwww, r1.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.yzw, r3.xxyz, -cb2[45].xxyz
					add r1.yzw, r1.yyzw, cb0[2].xxyz
					mul r0.xyw, r0.xyxw, r1.yzyw
					mul r0.xyw, r0.xyxw, r2.xyxz
					mul r1.yzw, r0.xxyw, cb0[23].xxyz
					movc r0.xyz, r0.zzzz, r1.yzwy, r0.xywx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[25].x, l(1.000000)
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					// TEXCOORD                10   xyzw       10     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[26], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb3[0].x
					add r1.xyz, -r0.yzwy, cb2[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s1
					mul r2.xyzw, r2.xyzw, cb0[22].xyzw
					sample r3.xyzw, v1.xyxx, t3.xyzw, s1
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[15].zzzz
					dp2 r0.x, r3.xyxx, r3.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r3.z, r0.x
					sample r4.xyzw, v1.xyxx, t4.xyzw, s1
					add r0.x, r4.x, l(-1.000000)
					mad r0.x, cb0[17].x, r0.x, l(1.000000)
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r0.yzw, r1.wwww, r4.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb4[6].xxyz
					  mul r4.yzw, r0.yyzw, cb4[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.z, r4.xyzx, r4.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.yzw, r0.yyyy, cb0[2].xxyz
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r0.yzw, r0.yyzw, r4.xxyz
					max r0.y, r0.z, r0.y
					max r0.y, r0.w, r0.y
					round_ne r0.y, r0.y
					dp3 r0.z, cb1[0].xyzx, cb1[0].xyzx
					ne r0.z, r0.z, l(0.000000)
					ieq r0.z, r0.z, l(0)
					eq r0.w, cb0[4].y, l(1.000000)
					and r0.z, r0.w, r0.z
					mov r4.xyz, cb1[0].xyzx
					movc r4.xyz, r0.zzzz, cb0[24].xyzx, r4.xyzx
					movc r0.y, r0.z, l(1.000000), r0.y
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.w, r3.xyzx, r4.xyzx
					min r0.y, r0.y, r0.w
					mad r0.x, r0.x, cb0[4].w, cb0[17].z
					add r0.x, r0.x, -cb0[4].w
					max r0.w, r0.x, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.x, r0.x, l(0.000000)
					mul r0.y, r0.y, l(0.500000)
					add r0.x, -r0.w, r0.x
					mad r0.x, r0.y, r0.x, r0.w
					sample r4.xyzw, r0.xxxx, t0.xyzw, s2
					mul r0.xyw, r4.xyxz, cb0[20].xyxz
					add r1.w, -cb0[17].y, l(1.000000)
					add r3.w, -r1.w, l(1.000000)
					mad r0.xyw, r0.xyxw, r3.wwww, r1.wwww
					dp3 r1.x, r3.xyzx, r1.xyzx
					dp2 r3.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.yzw, r3.xxyz, -cb1[45].xxyz
					add r1.yzw, r1.yyzw, cb0[2].xxyz
					mul r0.xyw, r0.xyxw, r1.yzyw
					mul r0.xyw, r0.xyxw, r2.xyxz
					mul r1.yzw, r0.xxyw, cb0[23].xxyz
					movc r0.xyz, r0.zzzz, r1.yzwy, r0.xywx
					add r0.w, -|r1.x|, l(1.000000)
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[25].x, l(1.000000)
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                10   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 17
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[22].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s2
					mul r1.w, r6.x, cb0[19].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s2
					mul r2.w, r7.x, cb0[18].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s6
					sample r9.xyzw, v1.xyxx, t12.xyzw, s2
					add r3.w, r9.x, l(-1.000000)
					mad r3.w, cb0[17].x, r3.w, l(1.000000)
					eq r6.yz, cb0[4].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r5.w, -r2.xyzx, r10.xyzx
					  add r5.w, r5.w, r5.w
					  mad r6.yw, r10.xxxy, -r5.wwww, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r5.w, r2.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s5, r5.w
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r2.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r3.wwww, r7.yyzw
					else 
					  eq r5.w, cb0[4].z, l(2.000000)
					  if_nz r5.w
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r5.w, -r2.xyzx, r9.xyzx
					    add r5.w, r5.w, r5.w
					    mad r8.yzw, r9.xxyz, -r5.wwww, -r2.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s7, r2.w
					    mul r7.yzw, r3.wwww, r9.xxyz
					  else 
					    eq r2.w, cb0[4].z, l(3.000000)
					    mul r8.yzw, r3.wwww, cb0[26].xxyz
					    movc r7.yzw, r2.wwww, r8.yyzw, cb0[7].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[18].xxxx, cb0[21].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r9.xyz, v3.wwww, cb4[2].xyzx
					  mad r9.xyz, cb4[1].xyzx, v2.wwww, r9.xyzx
					  mad r9.xyz, cb4[3].xyzx, v4.wwww, r9.xyzx
					  add r9.xyz, r9.xyzx, cb4[4].xyzx
					  movc r9.xyz, r2.wwww, r9.xyzx, r0.xyzx
					  add r9.xyz, r9.xyzx, -cb4[6].xyzx
					  mul r9.yzw, r9.xxyz, cb4[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r5.w
					  sample r9.xyzw, r9.xzwx, t7.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb2[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mad r5.w, -r7.x, cb0[18].z, l(1.000000)
					dp3 r6.y, -r2.xyzx, r5.xyzx
					add r6.y, r6.y, r6.y
					mad r9.xyz, r5.xyzx, -r6.yyyy, -r2.xyzx
					mul r10.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r9.xyzx, r9.xyzx
					  rsq r2.w, r2.w
					  mul r11.xyz, r2.wwww, r9.xyzx
					  add r12.xyz, -r0.xyzx, cb3[0].xyzx
					  div r12.xyz, r12.xyzx, r11.xyzx
					  add r13.xyz, -r0.xyzx, cb3[1].xyzx
					  div r13.xyz, r13.xyzx, r11.xyzx
					  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					  min r2.w, r12.y, r12.x
					  min r2.w, r12.z, r2.w
					  add r12.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r11.xyz, r11.xyzx, r2.wwww, r12.xyzx
					else 
					  mov r11.xyz, r9.xyzx
					endif 
					mad r2.w, -r5.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r11.xyzw, r11.xyzx, t5.xyzw, s0, r2.w
					add r6.y, r11.w, l(-1.000000)
					mad r6.y, cb3[3].w, r6.y, l(1.000000)
					log r6.y, r6.y
					mul r6.y, r6.y, cb3[3].y
					exp r6.y, r6.y
					mul r6.y, r6.y, cb3[3].x
					mul r12.xyz, r11.xyzx, r6.yyyy
					lt r6.w, cb3[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb3[6].w
					  if_nz r6.w
					    dp3 r6.w, r9.xyzx, r9.xyzx
					    rsq r6.w, r6.w
					    mul r13.xyz, r6.wwww, r9.xyzx
					    add r14.xyz, -r0.xyzx, cb3[4].xyzx
					    div r14.xyz, r14.xyzx, r13.xyzx
					    add r15.xyz, -r0.xyzx, cb3[5].xyzx
					    div r15.xyz, r15.xyzx, r13.xyzx
					    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
					    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
					    min r6.w, r14.y, r14.x
					    min r6.w, r14.z, r6.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r9.xyz, r13.xyzx, r6.wwww, r0.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t6.xyzw, s0, r2.w
					  add r0.x, r9.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r9.xyzx, r0.xxxx
					  mad r9.xyz, r6.yyyy, r11.xyzx, -r0.xyzx
					  mad r12.xyz, cb3[1].wwww, r9.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r3.wwww, r12.xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r10.xyzx, r9.xyzx
					max r2.w, r9.y, r9.x
					max r2.w, r9.z, r2.w
					round_ne r9.w, r2.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r6.z, r2.w
					movc r6.yzw, r2.wwww, cb0[24].xxyz, cb2[0].xxyz
					mov r10.xyz, cb0[24].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb2[0].xyzx
					movc r9.xyzw, r2.wwww, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[22].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r10.x, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r4.xyzx, r10.xxxx
					dp3 r9.x, r5.xyzx, r9.xyzx
					min r9.x, r9.w, r9.x
					mad r3.w, r3.w, cb0[4].w, cb0[17].z
					add r3.w, r3.w, -cb0[4].w
					max r9.y, r3.w, l(0.000000)
					add r3.w, r3.w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					add r9.x, r9.x, l(1.000000)
					mul r9.x, r9.x, l(0.500000)
					add r3.w, -r9.y, r3.w
					mad r3.w, r9.x, r3.w, r9.y
					sample r9.xyzw, r3.wwww, t3.xyzw, s3
					mul r9.xyz, r9.xyzx, cb0[20].xyzx
					add r3.w, -cb0[17].y, l(1.000000)
					add r9.w, -r3.w, l(1.000000)
					mad r9.xyz, r9.xyzx, r9.wwww, r3.wwww
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r5.w, r5.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r0.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, |r0.w|, r1.z
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.w, r2.y, r2.z, -r2.y
					mad r2.y, r3.w, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[17].w, l(0.000000)
					add r3.w, cb0[17].w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					min r5.x, r2.y, l(2.000000)
					mul r5.x, r5.x, l(0.500000)
					add r3.w, -r2.z, r3.w
					mad r2.z, r5.x, r3.w, r2.z
					sample r5.xyzw, r2.zzzz, t4.xyzw, s4
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[19].x, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r1.wwww, -r2.yyyy
					mad r5.xyz, cb0[4].xxxx, r5.xyzx, r2.yyyy
					mul r5.xyz, r8.xxxx, r5.xyzx
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r5.xyz, r5.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r2.xxxx, r5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r3.xyzx, r3.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r10.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[18].z, r1.z
					lt r1.w, l(0.000000), cb0[4].z
					movc r0.xyz, r1.wwww, r7.yzwy, r0.xyzx
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[23].xyzx
					mul r6.xyz, r4.xyzx, cb0[23].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r2.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r9.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r3.xyzx
					mul r0.xyz, r0.xyzx, r1.yyyy
					mul r0.xyz, r1.wwww, r0.xyzx
					mul r0.xyz, r9.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r3.xxyz, r1.zzzz
					mad r1.xyz, r1.xxxx, r1.yzwy, r3.xyzx
					mad r2.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[25].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[25].x, l(0.500000), r1.x
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                10   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 17
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[22].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[15].zzzz
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s2
					mul r1.w, r6.x, cb0[19].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s2
					mul r2.w, r7.x, cb0[18].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s6
					sample r9.xyzw, v1.xyxx, t12.xyzw, s2
					add r3.w, r9.x, l(-1.000000)
					mad r3.w, cb0[17].x, r3.w, l(1.000000)
					eq r6.yz, cb0[4].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r5.w, -r2.xyzx, r10.xyzx
					  add r5.w, r5.w, r5.w
					  mad r6.yw, r10.xxxy, -r5.wwww, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r5.w, r2.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s5, r5.w
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r2.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r3.wwww, r7.yyzw
					else 
					  eq r5.w, cb0[4].z, l(2.000000)
					  if_nz r5.w
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r5.w, -r2.xyzx, r9.xyzx
					    add r5.w, r5.w, r5.w
					    mad r8.yzw, r9.xxyz, -r5.wwww, -r2.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s7, r2.w
					    mul r7.yzw, r3.wwww, r9.xxyz
					  else 
					    eq r2.w, cb0[4].z, l(3.000000)
					    mul r8.yzw, r3.wwww, cb0[26].xxyz
					    movc r7.yzw, r2.wwww, r8.yyzw, cb0[7].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[18].xxxx, cb0[21].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r9.xyz, v3.wwww, cb5[2].xyzx
					  mad r9.xyz, cb5[1].xyzx, v2.wwww, r9.xyzx
					  mad r9.xyz, cb5[3].xyzx, v4.wwww, r9.xyzx
					  add r9.xyz, r9.xyzx, cb5[4].xyzx
					  movc r9.xyz, r2.wwww, r9.xyzx, r0.xyzx
					  add r9.xyz, r9.xyzx, -cb5[6].xyzx
					  mul r9.yzw, r9.xxyz, cb5[5].xxyz
					  mad r2.w, r9.y, l(0.250000), l(0.750000)
					  mad r5.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r9.x, r2.w, r5.w
					  sample r9.xyzw, r9.xzwx, t7.xyzw, s1
					else 
					  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r9.xyzw, cb1[46].xyzw
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mad r5.w, -r7.x, cb0[18].z, l(1.000000)
					dp3 r6.y, -r2.xyzx, r5.xyzx
					add r6.y, r6.y, r6.y
					mad r9.xyz, r5.xyzx, -r6.yyyy, -r2.xyzx
					mul r10.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb4[2].w
					if_nz r2.w
					  dp3 r2.w, r9.xyzx, r9.xyzx
					  rsq r2.w, r2.w
					  mul r11.xyz, r2.wwww, r9.xyzx
					  add r12.xyz, -r0.xyzx, cb4[0].xyzx
					  div r12.xyz, r12.xyzx, r11.xyzx
					  add r13.xyz, -r0.xyzx, cb4[1].xyzx
					  div r13.xyz, r13.xyzx, r11.xyzx
					  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					  min r2.w, r12.y, r12.x
					  min r2.w, r12.z, r2.w
					  add r12.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r11.xyz, r11.xyzx, r2.wwww, r12.xyzx
					else 
					  mov r11.xyz, r9.xyzx
					endif 
					mad r2.w, -r5.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r11.xyzw, r11.xyzx, t5.xyzw, s0, r2.w
					add r6.y, r11.w, l(-1.000000)
					mad r6.y, cb4[3].w, r6.y, l(1.000000)
					log r6.y, r6.y
					mul r6.y, r6.y, cb4[3].y
					exp r6.y, r6.y
					mul r6.y, r6.y, cb4[3].x
					mul r12.xyz, r11.xyzx, r6.yyyy
					lt r6.w, cb4[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb4[6].w
					  if_nz r6.w
					    dp3 r6.w, r9.xyzx, r9.xyzx
					    rsq r6.w, r6.w
					    mul r13.xyz, r6.wwww, r9.xyzx
					    add r14.xyz, -r0.xyzx, cb4[4].xyzx
					    div r14.xyz, r14.xyzx, r13.xyzx
					    add r15.xyz, -r0.xyzx, cb4[5].xyzx
					    div r15.xyz, r15.xyzx, r13.xyzx
					    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
					    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
					    min r6.w, r14.y, r14.x
					    min r6.w, r14.z, r6.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r9.xyz, r13.xyzx, r6.wwww, r0.xyzx
					  endif 
					  sample_l r9.xyzw, r9.xyzx, t6.xyzw, s0, r2.w
					  add r0.x, r9.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r9.xyzx, r0.xxxx
					  mad r9.xyz, r6.yyyy, r11.xyzx, -r0.xyzx
					  mad r12.xyz, cb4[1].wwww, r9.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r3.wwww, r12.xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r10.xyzx, r9.xyzx
					max r2.w, r9.y, r9.x
					max r2.w, r9.z, r2.w
					round_ne r9.w, r2.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r6.z, r2.w
					movc r6.yzw, r2.wwww, cb0[24].xxyz, cb1[0].xxyz
					mov r10.xyz, cb0[24].xyzx
					mov r10.w, l(1.000000)
					mov r9.xyz, cb1[0].xyzx
					movc r9.xyzw, r2.wwww, r10.xyzw, r9.xyzw
					mad r3.xyz, r3.xyzx, cb0[22].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r10.x, -r1.w, l(0.960000), l(0.960000)
					mul r4.xyz, r4.xyzx, r10.xxxx
					dp3 r9.x, r5.xyzx, r9.xyzx
					min r9.x, r9.w, r9.x
					mad r3.w, r3.w, cb0[4].w, cb0[17].z
					add r3.w, r3.w, -cb0[4].w
					max r9.y, r3.w, l(0.000000)
					add r3.w, r3.w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					add r9.x, r9.x, l(1.000000)
					mul r9.x, r9.x, l(0.500000)
					add r3.w, -r9.y, r3.w
					mad r3.w, r9.x, r3.w, r9.y
					sample r9.xyzw, r3.wwww, t3.xyzw, s3
					mul r9.xyz, r9.xyzx, cb0[20].xyzx
					add r3.w, -cb0[17].y, l(1.000000)
					add r9.w, -r3.w, l(1.000000)
					mad r9.xyz, r9.xyzx, r9.wwww, r3.wwww
					mad r1.xyz, r1.xyzx, r0.wwww, r6.yzwy
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r5.w, r5.w
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r0.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, |r0.w|, r1.z
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.w, r2.y, r2.z, -r2.y
					mad r2.y, r3.w, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[17].w, l(0.000000)
					add r3.w, cb0[17].w, l(1.000000)
					max r3.w, r3.w, l(0.000000)
					min r5.x, r2.y, l(2.000000)
					mul r5.x, r5.x, l(0.500000)
					add r3.w, -r2.z, r3.w
					mad r2.z, r5.x, r3.w, r2.z
					sample r5.xyzw, r2.zzzz, t4.xyzw, s4
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[19].x, l(1.000000)
					mad r1.w, r1.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r1.wwww, -r2.yyyy
					mad r5.xyz, cb0[4].xxxx, r5.xyzx, r2.yyyy
					mul r5.xyz, r8.xxxx, r5.xyzx
					mul r5.xyz, r1.zzzz, r5.xyzx
					mul r5.xyz, r5.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
					mul r2.xyz, r2.xxxx, r5.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r3.xyzx, r3.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r10.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[18].z, r1.z
					lt r1.w, l(0.000000), cb0[4].z
					movc r0.xyz, r1.wwww, r7.yzwy, r0.xyzx
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r9.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[23].xyzx
					mul r6.xyz, r4.xyzx, cb0[23].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r4.xyz, r2.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r9.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r3.xyzx
					mul r0.xyz, r0.xyzx, r1.yyyy
					mul r0.xyz, r1.wwww, r0.xyzx
					mul r0.xyz, r9.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r3.xxyz, r1.zzzz
					mad r1.xyz, r1.xxxx, r1.yzwy, r3.xyzx
					mad r2.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[25].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[25].x, l(0.500000), r1.x
					mad r0.w, -cb0[25].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			LOD 100
			Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha One, SrcAlpha One
			ColorMask RGB -1
			ZWrite Off
			Cull Off
			GpuProgramID 110633
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v3.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[34], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v3.xxxy, cb0[34].xxxy, cb0[34].zzzw
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.y, r1.xyzx, r1.xyzx
					rsq r0.y, r0.y
					mul r0.yzw, r0.yyyy, r1.yyzx
					dp3 r2.x, v2.xyzx, cb1[4].xyzx
					dp3 r2.y, v2.xyzx, cb1[5].xyzx
					dp3 r2.z, v2.xyzx, cb1[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r0.yzwy, r2.zxyz
					mad r3.xyz, r2.yzxy, r0.zwyz, -r3.xyzx
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r0.w
					mov o2.z, r2.x
					mov o3.x, r0.y
					mov o4.x, r0.z
					mov o3.z, r2.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o4.z, r2.z
					mov o6.xyz, l(0,0,0,0)
					mov o7.xyz, r2.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o8.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r2.zxyz
					mad o9.xyz, r2.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t3.xyzw, s2
					mul r2.xyzw, r2.xyzw, cb0[26].xyzw
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					sample r4.xyzw, v1.xyxx, t5.xyzw, s2
					add r0.w, r4.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s1
					mul r1.w, r1.w, r4.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r1.w, r4.y, r4.x
					max r1.w, r4.z, r1.w
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r4.x, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r4.x
					movc r0.xyz, r3.wwww, cb0[28].xyzx, r0.xyzx
					movc r4.x, r3.w, l(1.000000), r1.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r4.x, r0.x
					mad r0.y, r0.w, cb0[8].w, cb0[21].z
					add r0.y, r0.y, -cb0[8].w
					max r0.z, r0.y, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.y, r0.y, l(0.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.y, -r0.z, r0.y
					mad r0.x, r0.x, r0.y, r0.z
					sample r0.xyzw, r0.xxxx, t1.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[24].xyzx
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r0.wwww
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp2 r1.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[45].xyzx
					mad r1.xyz, cb0[2].xyzx, r1.wwww, r1.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r1.xyz, r0.xyzx, cb0[27].xyzx
					movc r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t3.xyzw, s2
					mul r2.xyzw, r2.xyzw, cb0[26].xyzw
					sample r3.xyzw, v1.xyxx, t4.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					sample r4.xyzw, v1.xyxx, t5.xyzw, s2
					add r0.w, r4.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t0.xyzw, s1
					mul r1.w, r1.w, r4.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r1.w, r4.y, r4.x
					max r1.w, r4.z, r1.w
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r4.x, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r4.x
					movc r0.xyz, r3.wwww, cb0[28].xyzx, r0.xyzx
					movc r4.x, r3.w, l(1.000000), r1.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r4.x, r0.x
					mad r0.y, r0.w, cb0[8].w, cb0[21].z
					add r0.y, r0.y, -cb0[8].w
					max r0.z, r0.y, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.y, r0.y, l(0.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.y, -r0.z, r0.y
					mad r0.x, r0.x, r0.y, r0.z
					sample r0.xyzw, r0.xxxx, t1.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[24].xyzx
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r0.wwww
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp2 r1.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb1[45].xyzx
					mad r1.xyz, cb0[2].xyzx, r1.wwww, r1.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r1.xyz, r0.xyzx, cb0[27].xyzx
					movc r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t6.xyzw, s1
					mul r3.xyzw, r2.xyzw, cb0[22].xyzw
					sample r4.xyzw, v1.xyxx, t7.xyzw, s1
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t8.xyzw, s1
					mul r1.w, r5.x, cb0[19].x
					sample r6.xyzw, v1.xyxx, t9.xyzw, s1
					mul r2.w, r6.x, cb0[18].z
					sample r7.xyzw, v1.zwzz, t0.xyzw, s5
					sample r8.xyzw, v1.xyxx, t10.xyzw, s1
					add r4.w, r8.x, l(-1.000000)
					mad r4.w, cb0[17].x, r4.w, l(1.000000)
					eq r5.yz, cb0[4].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r5.y
					  sample r8.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s4
					  dp3 r9.x, v2.xyzx, r4.xyzx
					  dp3 r9.y, v3.xyzx, r4.xyzx
					  dp3 r9.z, v4.xyzx, r4.xyzx
					  dp3 r5.y, -r1.xyzx, r9.xyzx
					  add r5.y, r5.y, r5.y
					  mad r5.yw, r9.xxxy, -r5.yyyy, -r1.xxxy
					  add r5.yw, r5.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r5.yw, r5.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r6.y, r2.w, l(-5.000000), l(5.000000)
					  sample_l r9.xyzw, r5.ywyy, t1.xyzw, s4, r6.y
					  add r6.yzw, -r8.xxyz, r9.xxyz
					  mad r6.yzw, r2.wwww, r6.yyzw, r8.xxyz
					  mul r6.yzw, r4.wwww, r6.yyzw
					else 
					  eq r5.y, cb0[4].z, l(2.000000)
					  if_nz r5.y
					    dp3 r8.x, v2.xyzx, r4.xyzx
					    dp3 r8.y, v3.xyzx, r4.xyzx
					    dp3 r8.z, v4.xyzx, r4.xyzx
					    dp3 r5.y, -r1.xyzx, r8.xyzx
					    add r5.y, r5.y, r5.y
					    mad r7.yzw, r8.xxyz, -r5.yyyy, -r1.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r8.xyzw, r7.yzwy, t2.xyzw, s6, r2.w
					    mul r6.yzw, r4.wwww, r8.xxyz
					  else 
					    eq r2.w, cb0[4].z, l(3.000000)
					    mul r7.yzw, r4.wwww, cb0[26].xxyz
					    movc r6.yzw, r2.wwww, r7.yyzw, cb0[7].xxyz
					  endif 
					endif 
					mul r7.yzw, cb0[18].xxxx, cb0[21].xxyz
					mul r7.yzw, r7.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r8.xyz, v5.yyyy, cb3[2].xyzx
					  mad r8.xyz, cb3[1].xyzx, v5.xxxx, r8.xyzx
					  mad r8.xyz, cb3[3].xyzx, v5.zzzz, r8.xyzx
					  add r8.xyz, r8.xyzx, cb3[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, v5.xyzx
					  add r8.xyz, r8.xyzx, -cb3[6].xyzx
					  mul r8.yzw, r8.xxyz, cb3[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r5.y
					  sample r8.xyzw, r8.xzwx, t5.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb2[46].xyzw
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r8.xyz, r2.wwww, cb0[2].xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r8.xyz, r8.xyzx, r9.xyzx
					max r2.w, r8.y, r8.x
					max r2.w, r8.z, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r5.z, r2.w
					movc r5.yzw, r2.wwww, cb0[24].xxyz, cb2[0].xxyz
					mov r9.xyz, cb0[24].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[22].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r9.x, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r9.xxxx
					dp3 r8.x, r4.xyzx, r8.xyzx
					min r8.x, r8.w, r8.x
					mad r4.w, r4.w, cb0[4].w, cb0[17].z
					add r4.w, r4.w, -cb0[4].w
					max r8.y, r4.w, l(0.000000)
					add r4.w, r4.w, l(1.000000)
					max r4.w, r4.w, l(0.000000)
					add r8.x, r8.x, l(1.000000)
					mul r8.x, r8.x, l(0.500000)
					add r4.w, -r8.y, r4.w
					mad r4.w, r8.x, r4.w, r8.y
					sample r8.xyzw, r4.wwww, t3.xyzw, s2
					mul r8.xyz, r8.xyzx, cb0[20].xyzx
					add r4.w, -cb0[17].y, l(1.000000)
					add r8.w, -r4.w, l(1.000000)
					mad r8.xyz, r8.xyzx, r8.wwww, r4.wwww
					mad r4.w, -r6.x, cb0[18].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r4.w, r4.w
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[17].w, l(0.000000)
					add r4.x, cb0[17].w, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r4.xyzw, r1.zzzz, t4.xyzw, s3
					mul r4.xyz, r7.yzwy, r4.xyzx
					mad r1.z, -r5.x, cb0[19].x, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r9.x, l(1.000000)
					mad_sat r0.z, r6.x, cb0[18].z, r0.z
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r6.yzwy, r1.wwww
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r8.xyzx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[23].xyzx
					mul r6.xyz, r3.xyzx, cb0[23].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r8.xyzx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r8.xyzx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[25].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[25].x, l(0.500000), r1.x
					mad r0.x, -cb0[25].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t6.xyzw, s1
					mul r3.xyzw, r2.xyzw, cb0[22].xyzw
					sample r4.xyzw, v1.xyxx, t7.xyzw, s1
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[15].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t8.xyzw, s1
					mul r1.w, r5.x, cb0[19].x
					sample r6.xyzw, v1.xyxx, t9.xyzw, s1
					mul r2.w, r6.x, cb0[18].z
					sample r7.xyzw, v1.zwzz, t0.xyzw, s5
					sample r8.xyzw, v1.xyxx, t10.xyzw, s1
					add r4.w, r8.x, l(-1.000000)
					mad r4.w, cb0[17].x, r4.w, l(1.000000)
					eq r5.yz, cb0[4].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r5.y
					  sample r8.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s4
					  dp3 r9.x, v2.xyzx, r4.xyzx
					  dp3 r9.y, v3.xyzx, r4.xyzx
					  dp3 r9.z, v4.xyzx, r4.xyzx
					  dp3 r5.y, -r1.xyzx, r9.xyzx
					  add r5.y, r5.y, r5.y
					  mad r5.yw, r9.xxxy, -r5.yyyy, -r1.xxxy
					  add r5.yw, r5.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r5.yw, r5.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r6.y, r2.w, l(-5.000000), l(5.000000)
					  sample_l r9.xyzw, r5.ywyy, t1.xyzw, s4, r6.y
					  add r6.yzw, -r8.xxyz, r9.xxyz
					  mad r6.yzw, r2.wwww, r6.yyzw, r8.xxyz
					  mul r6.yzw, r4.wwww, r6.yyzw
					else 
					  eq r5.y, cb0[4].z, l(2.000000)
					  if_nz r5.y
					    dp3 r8.x, v2.xyzx, r4.xyzx
					    dp3 r8.y, v3.xyzx, r4.xyzx
					    dp3 r8.z, v4.xyzx, r4.xyzx
					    dp3 r5.y, -r1.xyzx, r8.xyzx
					    add r5.y, r5.y, r5.y
					    mad r7.yzw, r8.xxyz, -r5.yyyy, -r1.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r8.xyzw, r7.yzwy, t2.xyzw, s6, r2.w
					    mul r6.yzw, r4.wwww, r8.xxyz
					  else 
					    eq r2.w, cb0[4].z, l(3.000000)
					    mul r7.yzw, r4.wwww, cb0[26].xxyz
					    movc r6.yzw, r2.wwww, r7.yyzw, cb0[7].xxyz
					  endif 
					endif 
					mul r7.yzw, cb0[18].xxxx, cb0[21].xxyz
					mul r7.yzw, r7.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r8.xyz, v5.yyyy, cb4[2].xyzx
					  mad r8.xyz, cb4[1].xyzx, v5.xxxx, r8.xyzx
					  mad r8.xyz, cb4[3].xyzx, v5.zzzz, r8.xyzx
					  add r8.xyz, r8.xyzx, cb4[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, v5.xyzx
					  add r8.xyz, r8.xyzx, -cb4[6].xyzx
					  mul r8.yzw, r8.xxyz, cb4[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r5.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r5.y
					  sample r8.xyzw, r8.xzwx, t5.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb1[46].xyzw
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r8.xyz, r2.wwww, cb0[2].xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r8.xyz, r8.xyzx, r9.xyzx
					max r2.w, r8.y, r8.x
					max r2.w, r8.z, r2.w
					round_ne r8.w, r2.w
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r5.z, r2.w
					movc r5.yzw, r2.wwww, cb0[24].xxyz, cb1[0].xxyz
					mov r9.xyz, cb0[24].xyzx
					mov r9.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r8.xyzw, r2.wwww, r9.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[22].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r9.x, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r9.xxxx
					dp3 r8.x, r4.xyzx, r8.xyzx
					min r8.x, r8.w, r8.x
					mad r4.w, r4.w, cb0[4].w, cb0[17].z
					add r4.w, r4.w, -cb0[4].w
					max r8.y, r4.w, l(0.000000)
					add r4.w, r4.w, l(1.000000)
					max r4.w, r4.w, l(0.000000)
					add r8.x, r8.x, l(1.000000)
					mul r8.x, r8.x, l(0.500000)
					add r4.w, -r8.y, r4.w
					mad r4.w, r8.x, r4.w, r8.y
					sample r8.xyzw, r4.wwww, t3.xyzw, s2
					mul r8.xyz, r8.xyzx, cb0[20].xyzx
					add r4.w, -cb0[17].y, l(1.000000)
					add r8.w, -r4.w, l(1.000000)
					mad r8.xyz, r8.xyzx, r8.wwww, r4.wwww
					mad r4.w, -r6.x, cb0[18].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r4.w, r4.w
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[17].w, l(0.000000)
					add r4.x, cb0[17].w, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r4.xyzw, r1.zzzz, t4.xyzw, s3
					mul r4.xyz, r7.yzwy, r4.xyzx
					mad r1.z, -r5.x, cb0[19].x, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[4].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r9.x, l(1.000000)
					mad_sat r0.z, r6.x, cb0[18].z, r0.z
					lt r1.w, l(0.000000), cb0[4].z
					and r4.xyz, r6.yzwy, r1.wwww
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					add r5.xyz, r5.xyzx, cb0[2].xyzx
					mul r6.xyz, r8.xyzx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[23].xyzx
					mul r6.xyz, r3.xyzx, cb0[23].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, cb0[2].xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r8.xyzx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r8.xyzx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[25].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[25].x, l(0.500000), r1.x
					mad r0.x, -cb0[25].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[26], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[22].xyzw
					sample r2.xyzw, v1.xyxx, t3.xyzw, s1
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[15].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					sample r3.xyzw, v1.xyxx, t4.xyzw, s1
					add r0.w, r3.x, l(-1.000000)
					mad r0.w, cb0[17].x, r0.w, l(1.000000)
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r2.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r2.w, r3.y, r3.x
					max r2.w, r3.z, r2.w
					round_ne r2.w, r2.w
					dp3 r3.x, cb2[0].xyzx, cb2[0].xyzx
					ne r3.x, r3.x, l(0.000000)
					ieq r3.x, r3.x, l(0)
					eq r3.y, cb0[4].y, l(1.000000)
					and r3.x, r3.y, r3.x
					mov r3.yzw, cb2[0].xxyz
					movc r3.yzw, r3.xxxx, cb0[24].xxyz, r3.yyzw
					movc r2.w, r3.x, l(1.000000), r2.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.y, r2.xyzx, r3.yzwy
					min r2.w, r2.w, r3.y
					mad r0.w, r0.w, cb0[4].w, cb0[17].z
					add r0.w, r0.w, -cb0[4].w
					max r3.y, r0.w, l(0.000000)
					add r0.w, r0.w, l(1.000000)
					max r0.w, r0.w, l(0.000000)
					add r2.w, r2.w, l(1.000000)
					mul r2.w, r2.w, l(0.500000)
					add r0.w, -r3.y, r0.w
					mad r0.w, r2.w, r0.w, r3.y
					sample r4.xyzw, r0.wwww, t0.xyzw, s2
					mul r3.yzw, r4.xxyz, cb0[20].xxyz
					add r0.w, -cb0[17].y, l(1.000000)
					add r2.w, -r0.w, l(1.000000)
					mad r3.yzw, r3.yyzw, r2.wwww, r0.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb2[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[23].xyzx
					movc r0.yzw, r3.xxxx, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[25].x, l(1.000000)
					mad r0.x, -cb0[25].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[26], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[22].xyzw
					sample r2.xyzw, v1.xyxx, t3.xyzw, s1
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[15].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					sample r3.xyzw, v1.xyxx, t4.xyzw, s1
					add r0.w, r3.x, l(-1.000000)
					mad r0.w, cb0[17].x, r0.w, l(1.000000)
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb4[2].xyzx
					  mad r3.xyz, cb4[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb4[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb4[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb4[6].xyzx
					  mul r3.yzw, r3.xxyz, cb4[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r2.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r2.w, r3.y, r3.x
					max r2.w, r3.z, r2.w
					round_ne r2.w, r2.w
					dp3 r3.x, cb1[0].xyzx, cb1[0].xyzx
					ne r3.x, r3.x, l(0.000000)
					ieq r3.x, r3.x, l(0)
					eq r3.y, cb0[4].y, l(1.000000)
					and r3.x, r3.y, r3.x
					mov r3.yzw, cb1[0].xxyz
					movc r3.yzw, r3.xxxx, cb0[24].xxyz, r3.yyzw
					movc r2.w, r3.x, l(1.000000), r2.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.y, r2.xyzx, r3.yzwy
					min r2.w, r2.w, r3.y
					mad r0.w, r0.w, cb0[4].w, cb0[17].z
					add r0.w, r0.w, -cb0[4].w
					max r3.y, r0.w, l(0.000000)
					add r0.w, r0.w, l(1.000000)
					max r0.w, r0.w, l(0.000000)
					add r2.w, r2.w, l(1.000000)
					mul r2.w, r2.w, l(0.500000)
					add r0.w, -r3.y, r0.w
					mad r0.w, r2.w, r0.w, r3.y
					sample r4.xyzw, r0.wwww, t0.xyzw, s2
					mul r3.yzw, r4.xxyz, cb0[20].xxyz
					add r0.w, -cb0[17].y, l(1.000000)
					add r2.w, -r0.w, l(1.000000)
					mad r3.yzw, r3.yyzw, r2.wwww, r0.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb1[45].xxyz
					add r0.yzw, r0.yyzw, cb0[2].xxyz
					mul r0.yzw, r3.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[23].xyzx
					movc r0.yzw, r3.xxxx, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[24].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[25].x, l(1.000000)
					mad r0.x, -cb0[25].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[25].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[26].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s3
					mul r2.w, r6.x, cb0[23].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s3
					mul r3.w, r7.x, cb0[22].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s7
					sample r9.xyzw, v1.xyxx, t12.xyzw, s3
					add r5.w, r9.x, l(-1.000000)
					mad r5.w, cb0[21].x, r5.w, l(1.000000)
					eq r6.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s6
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r6.y, -r2.xyzx, r10.xyzx
					  add r6.y, r6.y, r6.y
					  mad r6.yw, r10.xxxy, -r6.yyyy, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r7.y, r3.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s6, r7.y
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r3.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r5.wwww, r7.yyzw
					else 
					  eq r6.y, cb0[8].z, l(2.000000)
					  if_nz r6.y
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r6.y, -r2.xyzx, r9.xyzx
					    add r6.y, r6.y, r6.y
					    mad r8.yzw, r9.xxyz, -r6.yyyy, -r2.xxyz
					    mad r3.w, r3.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s8, r3.w
					    mul r7.yzw, r5.wwww, r9.xxyz
					  else 
					    eq r3.w, cb0[8].z, l(3.000000)
					    mul r8.yzw, r5.wwww, cb0[30].xxyz
					    movc r7.yzw, r3.wwww, r8.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r10.xyz, v5.yyyy, cb3[2].xyzx
					  mad r10.xyz, cb3[1].xyzx, v5.xxxx, r10.xyzx
					  mad r10.xyz, cb3[3].xyzx, v5.zzzz, r10.xyzx
					  add r10.xyz, r10.xyzx, cb3[4].xyzx
					  movc r10.xyz, r3.wwww, r10.xyzx, v5.xyzx
					  add r10.xyz, r10.xyzx, -cb3[6].xyzx
					  mul r10.yzw, r10.xxyz, cb3[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r6.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r6.y
					  sample r10.xyzw, r10.xzwx, t7.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb2[46].xyzw
					lt r6.y, l(0.000000), r9.z
					and r6.y, r6.y, l(0x3f800000)
					div r10.xy, r9.xyxx, r9.wwww
					add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r10.xyzw, r10.xyxx, t3.xyzw, s1
					mul r6.y, r6.y, r10.w
					dp3 r6.w, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.wwww, t4.xyzw, s2
					mul r6.y, r6.y, r9.x
					mul r3.w, r3.w, r6.y
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r9.xyz, r3.wwww, cb0[2].xyzx
					add r10.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r9.xyzx, r10.xyzx
					max r3.w, r9.y, r9.x
					max r0.w, r9.z, r3.w
					mul r9.xyz, r0.wwww, cb0[2].xyzx
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					and r3.w, r6.z, r3.w
					movc r6.yzw, r3.wwww, cb0[28].xxyz, r0.xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					movc r10.xyzw, r3.wwww, r10.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r10.xyzx
					min r3.y, r10.w, r3.y
					mad r3.z, r5.w, cb0[8].w, cb0[21].z
					add r3.z, r3.z, -cb0[8].w
					max r5.w, r3.z, l(0.000000)
					add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					max r3.z, r3.z, l(0.000000)
					mul r3.y, r3.y, l(0.500000)
					add r3.z, -r5.w, r3.z
					mad r3.y, r3.y, r3.z, r5.w
					sample r10.xyzw, r3.yyyy, t5.xyzw, s4
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r3.y, -cb0[21].y, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].z, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r6.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[21].w, l(0.000000)
					add r3.y, cb0[21].w, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t6.xyzw, s5
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[23].x, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].z, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r7.yzwy, r2.wwww
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[27].xyzx
					mul r6.xyz, r4.xyzx, cb0[27].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r9.xyzx
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[29].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[29].x, l(0.500000), r1.x
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[26].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s3
					mul r2.w, r6.x, cb0[23].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s3
					mul r3.w, r7.x, cb0[22].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s7
					sample r9.xyzw, v1.xyxx, t12.xyzw, s3
					add r5.w, r9.x, l(-1.000000)
					mad r5.w, cb0[21].x, r5.w, l(1.000000)
					eq r6.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s6
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r6.y, -r2.xyzx, r10.xyzx
					  add r6.y, r6.y, r6.y
					  mad r6.yw, r10.xxxy, -r6.yyyy, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r7.y, r3.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s6, r7.y
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r3.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r5.wwww, r7.yyzw
					else 
					  eq r6.y, cb0[8].z, l(2.000000)
					  if_nz r6.y
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r6.y, -r2.xyzx, r9.xyzx
					    add r6.y, r6.y, r6.y
					    mad r8.yzw, r9.xxyz, -r6.yyyy, -r2.xxyz
					    mad r3.w, r3.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s8, r3.w
					    mul r7.yzw, r5.wwww, r9.xxyz
					  else 
					    eq r3.w, cb0[8].z, l(3.000000)
					    mul r8.yzw, r5.wwww, cb0[30].xxyz
					    movc r7.yzw, r3.wwww, r8.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyzw, v5.yyyy, cb0[5].xyzw
					mad r9.xyzw, cb0[4].xyzw, v5.xxxx, r9.xyzw
					mad r9.xyzw, cb0[6].xyzw, v5.zzzz, r9.xyzw
					add r9.xyzw, r9.xyzw, cb0[7].xyzw
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r10.xyz, v5.yyyy, cb4[2].xyzx
					  mad r10.xyz, cb4[1].xyzx, v5.xxxx, r10.xyzx
					  mad r10.xyz, cb4[3].xyzx, v5.zzzz, r10.xyzx
					  add r10.xyz, r10.xyzx, cb4[4].xyzx
					  movc r10.xyz, r3.wwww, r10.xyzx, v5.xyzx
					  add r10.xyz, r10.xyzx, -cb4[6].xyzx
					  mul r10.yzw, r10.xxyz, cb4[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r6.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r6.y
					  sample r10.xyzw, r10.xzwx, t7.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb1[46].xyzw
					lt r6.y, l(0.000000), r9.z
					and r6.y, r6.y, l(0x3f800000)
					div r10.xy, r9.xyxx, r9.wwww
					add r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r10.xyzw, r10.xyxx, t3.xyzw, s1
					mul r6.y, r6.y, r10.w
					dp3 r6.w, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.wwww, t4.xyzw, s2
					mul r6.y, r6.y, r9.x
					mul r3.w, r3.w, r6.y
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r9.xyz, r3.wwww, cb0[2].xyzx
					add r10.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r9.xyzx, r10.xyzx
					max r3.w, r9.y, r9.x
					max r0.w, r9.z, r3.w
					mul r9.xyz, r0.wwww, cb0[2].xyzx
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					and r3.w, r6.z, r3.w
					movc r6.yzw, r3.wwww, cb0[28].xxyz, r0.xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					movc r10.xyzw, r3.wwww, r10.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r10.xyzx
					min r3.y, r10.w, r3.y
					mad r3.z, r5.w, cb0[8].w, cb0[21].z
					add r3.z, r3.z, -cb0[8].w
					max r5.w, r3.z, l(0.000000)
					add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					max r3.z, r3.z, l(0.000000)
					mul r3.y, r3.y, l(0.500000)
					add r3.z, -r5.w, r3.z
					mad r3.y, r3.y, r3.z, r5.w
					sample r10.xyzw, r3.yyyy, t5.xyzw, s4
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r3.y, -cb0[21].y, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].z, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r6.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[21].w, l(0.000000)
					add r3.y, cb0[21].w, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t6.xyzw, s5
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[23].x, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].z, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r7.yzwy, r2.wwww
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[27].xyzx
					mul r6.xyz, r4.xyzx, cb0[27].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r9.xyzx
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t4.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[26].xyzw
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					sample r4.xyzw, v1.xyxx, t6.xyzw, s3
					add r0.w, r4.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r4.xyzw, v5.yyyy, cb0[5].xyzw
					mad r4.xyzw, cb0[4].xyzw, v5.xxxx, r4.xyzw
					mad r4.xyzw, cb0[6].xyzw, v5.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[7].xyzw
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s1
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s2
					mul r3.w, r3.w, r4.x
					mul r1.w, r1.w, r3.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r1.w, r4.y, r4.x
					max r1.w, r4.z, r1.w
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r4.x, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r4.x
					movc r0.xyz, r3.wwww, cb0[28].xyzx, r0.xyzx
					movc r4.x, r3.w, l(1.000000), r1.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r4.x, r0.x
					mad r0.y, r0.w, cb0[8].w, cb0[21].z
					add r0.y, r0.y, -cb0[8].w
					max r0.z, r0.y, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.y, r0.y, l(0.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.y, -r0.z, r0.y
					mad r0.x, r0.x, r0.y, r0.z
					sample r0.xyzw, r0.xxxx, t2.xyzw, s4
					mul r0.xyz, r0.xyzx, cb0[24].xyzx
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r0.wwww
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp2 r1.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[45].xyzx
					mad r1.xyz, cb0[2].xyzx, r1.wwww, r1.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r1.xyz, r0.xyzx, cb0[27].xyzx
					movc r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t4.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[26].xyzw
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					sample r4.xyzw, v1.xyxx, t6.xyzw, s3
					add r0.w, r4.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r4.xyzw, v5.yyyy, cb0[5].xyzw
					mad r4.xyzw, cb0[4].xyzw, v5.xxxx, r4.xyzw
					mad r4.xyzw, cb0[6].xyzw, v5.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[7].xyzw
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s1
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t1.xyzw, s2
					mul r3.w, r3.w, r4.x
					mul r1.w, r1.w, r3.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r1.w, r4.y, r4.x
					max r1.w, r4.z, r1.w
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r4.x, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r4.x
					movc r0.xyz, r3.wwww, cb0[28].xyzx, r0.xyzx
					movc r4.x, r3.w, l(1.000000), r1.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r4.x, r0.x
					mad r0.y, r0.w, cb0[8].w, cb0[21].z
					add r0.y, r0.y, -cb0[8].w
					max r0.z, r0.y, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.y, r0.y, l(0.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.y, -r0.z, r0.y
					mad r0.x, r0.x, r0.y, r0.z
					sample r0.xyzw, r0.xxxx, t2.xyzw, s4
					mul r0.xyz, r0.xyzx, cb0[24].xyzx
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r0.wwww
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp2 r1.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb1[45].xyzx
					mad r1.xyz, cb0[2].xyzx, r1.wwww, r1.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r1.xyz, r0.xyzx, cb0[27].xyzx
					movc r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[26].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s3
					mul r2.w, r6.x, cb0[23].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s3
					mul r3.w, r7.x, cb0[22].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s7
					sample r9.xyzw, v1.xyxx, t12.xyzw, s3
					add r5.w, r9.x, l(-1.000000)
					mad r5.w, cb0[21].x, r5.w, l(1.000000)
					eq r6.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s6
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r6.y, -r2.xyzx, r10.xyzx
					  add r6.y, r6.y, r6.y
					  mad r6.yw, r10.xxxy, -r6.yyyy, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r7.y, r3.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s6, r7.y
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r3.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r5.wwww, r7.yyzw
					else 
					  eq r6.y, cb0[8].z, l(2.000000)
					  if_nz r6.y
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r6.y, -r2.xyzx, r9.xyzx
					    add r6.y, r6.y, r6.y
					    mad r8.yzw, r9.xxyz, -r6.yyyy, -r2.xxyz
					    mad r3.w, r3.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s8, r3.w
					    mul r7.yzw, r5.wwww, r9.xxyz
					  else 
					    eq r3.w, cb0[8].z, l(3.000000)
					    mul r8.yzw, r5.wwww, cb0[30].xxyz
					    movc r7.yzw, r3.wwww, r8.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyz, v5.yyyy, cb0[5].xyzx
					mad r9.xyz, cb0[4].xyzx, v5.xxxx, r9.xyzx
					mad r9.xyz, cb0[6].xyzx, v5.zzzz, r9.xyzx
					add r9.xyz, r9.xyzx, cb0[7].xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r10.xyz, v5.yyyy, cb3[2].xyzx
					  mad r10.xyz, cb3[1].xyzx, v5.xxxx, r10.xyzx
					  mad r10.xyz, cb3[3].xyzx, v5.zzzz, r10.xyzx
					  add r10.xyz, r10.xyzx, cb3[4].xyzx
					  movc r10.xyz, r3.wwww, r10.xyzx, v5.xyzx
					  add r10.xyz, r10.xyzx, -cb3[6].xyzx
					  mul r10.yzw, r10.xxyz, cb3[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r6.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r6.y
					  sample r10.xyzw, r10.xzwx, t7.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb2[46].xyzw
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r10.xyzw, r6.yyyy, t3.xyzw, s2
					sample r9.xyzw, r9.xyzx, t4.xyzw, s1
					mul r6.y, r9.w, r10.x
					mul r3.w, r3.w, r6.y
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r9.xyz, r3.wwww, cb0[2].xyzx
					add r10.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r9.xyzx, r10.xyzx
					max r3.w, r9.y, r9.x
					max r0.w, r9.z, r3.w
					mul r9.xyz, r0.wwww, cb0[2].xyzx
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					and r3.w, r6.z, r3.w
					movc r6.yzw, r3.wwww, cb0[28].xxyz, r0.xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					movc r10.xyzw, r3.wwww, r10.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r10.xyzx
					min r3.y, r10.w, r3.y
					mad r3.z, r5.w, cb0[8].w, cb0[21].z
					add r3.z, r3.z, -cb0[8].w
					max r5.w, r3.z, l(0.000000)
					add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					max r3.z, r3.z, l(0.000000)
					mul r3.y, r3.y, l(0.500000)
					add r3.z, -r5.w, r3.z
					mad r3.y, r3.y, r3.z, r5.w
					sample r10.xyzw, r3.yyyy, t5.xyzw, s4
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r3.y, -cb0[21].y, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].z, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r6.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[21].w, l(0.000000)
					add r3.y, cb0[21].w, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t6.xyzw, s5
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[23].x, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].z, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r7.yzwy, r2.wwww
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[27].xyzx
					mul r6.xyz, r4.xyzx, cb0[27].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r9.xyzx
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[29].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[29].x, l(0.500000), r1.x
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_resource_texture2d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t8.xyzw, s3
					mul r4.xyzw, r3.xyzw, cb0[26].xyzw
					sample r5.xyzw, v1.xyxx, t9.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t10.xyzw, s3
					mul r2.w, r6.x, cb0[23].x
					sample r7.xyzw, v1.xyxx, t11.xyzw, s3
					mul r3.w, r7.x, cb0[22].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s7
					sample r9.xyzw, v1.xyxx, t12.xyzw, s3
					add r5.w, r9.x, l(-1.000000)
					mad r5.w, cb0[21].x, r5.w, l(1.000000)
					eq r6.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s6
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r6.y, -r2.xyzx, r10.xyzx
					  add r6.y, r6.y, r6.y
					  mad r6.yw, r10.xxxy, -r6.yyyy, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r7.y, r3.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s6, r7.y
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r3.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r5.wwww, r7.yyzw
					else 
					  eq r6.y, cb0[8].z, l(2.000000)
					  if_nz r6.y
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r6.y, -r2.xyzx, r9.xyzx
					    add r6.y, r6.y, r6.y
					    mad r8.yzw, r9.xxyz, -r6.yyyy, -r2.xxyz
					    mad r3.w, r3.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s8, r3.w
					    mul r7.yzw, r5.wwww, r9.xxyz
					  else 
					    eq r3.w, cb0[8].z, l(3.000000)
					    mul r8.yzw, r5.wwww, cb0[30].xxyz
					    movc r7.yzw, r3.wwww, r8.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyz, v5.yyyy, cb0[5].xyzx
					mad r9.xyz, cb0[4].xyzx, v5.xxxx, r9.xyzx
					mad r9.xyz, cb0[6].xyzx, v5.zzzz, r9.xyzx
					add r9.xyz, r9.xyzx, cb0[7].xyzx
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r10.xyz, v5.yyyy, cb4[2].xyzx
					  mad r10.xyz, cb4[1].xyzx, v5.xxxx, r10.xyzx
					  mad r10.xyz, cb4[3].xyzx, v5.zzzz, r10.xyzx
					  add r10.xyz, r10.xyzx, cb4[4].xyzx
					  movc r10.xyz, r3.wwww, r10.xyzx, v5.xyzx
					  add r10.xyz, r10.xyzx, -cb4[6].xyzx
					  mul r10.yzw, r10.xxyz, cb4[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r6.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r6.y
					  sample r10.xyzw, r10.xzwx, t7.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb1[46].xyzw
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r10.xyzw, r6.yyyy, t3.xyzw, s2
					sample r9.xyzw, r9.xyzx, t4.xyzw, s1
					mul r6.y, r9.w, r10.x
					mul r3.w, r3.w, r6.y
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r9.xyz, r3.wwww, cb0[2].xyzx
					add r10.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r9.xyzx, r10.xyzx
					max r3.w, r9.y, r9.x
					max r0.w, r9.z, r3.w
					mul r9.xyz, r0.wwww, cb0[2].xyzx
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					and r3.w, r6.z, r3.w
					movc r6.yzw, r3.wwww, cb0[28].xxyz, r0.xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					movc r10.xyzw, r3.wwww, r10.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r10.xyzx
					min r3.y, r10.w, r3.y
					mad r3.z, r5.w, cb0[8].w, cb0[21].z
					add r3.z, r3.z, -cb0[8].w
					max r5.w, r3.z, l(0.000000)
					add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					max r3.z, r3.z, l(0.000000)
					mul r3.y, r3.y, l(0.500000)
					add r3.z, -r5.w, r3.z
					mad r3.y, r3.y, r3.z, r5.w
					sample r10.xyzw, r3.yyyy, t5.xyzw, s4
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r3.y, -cb0[21].y, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].z, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r6.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[21].w, l(0.000000)
					add r3.y, cb0[21].w, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t6.xyzw, s5
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[23].x, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].z, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r7.yzwy, r2.wwww
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[27].xyzx
					mul r6.xyz, r4.xyzx, cb0[27].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r9.xyzx
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t4.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[26].xyzw
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					sample r4.xyzw, v1.xyxx, t6.xyzw, s3
					add r0.w, r4.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r3.wwww, t0.xyzw, s2
					sample r4.xyzw, r4.xyzx, t1.xyzw, s1
					mul r3.w, r4.w, r5.x
					mul r1.w, r1.w, r3.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r1.w, r4.y, r4.x
					max r1.w, r4.z, r1.w
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r4.x, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r4.x
					movc r0.xyz, r3.wwww, cb0[28].xyzx, r0.xyzx
					movc r4.x, r3.w, l(1.000000), r1.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r4.x, r0.x
					mad r0.y, r0.w, cb0[8].w, cb0[21].z
					add r0.y, r0.y, -cb0[8].w
					max r0.z, r0.y, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.y, r0.y, l(0.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.y, -r0.z, r0.y
					mad r0.x, r0.x, r0.y, r0.z
					sample r0.xyzw, r0.xxxx, t2.xyzw, s4
					mul r0.xyz, r0.xyzx, cb0[24].xyzx
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r0.wwww
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp2 r1.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb2[45].xyzx
					mad r1.xyz, cb0[2].xyzx, r1.wwww, r1.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r1.xyz, r0.xyzx, cb0[27].xyzx
					movc r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r0.w, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t4.xyzw, s3
					mul r2.xyzw, r2.xyzw, cb0[26].xyzw
					sample r3.xyzw, v1.xyxx, t5.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[19].zzzz
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					sample r4.xyzw, v1.xyxx, t6.xyzw, s3
					add r0.w, r4.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r4.xyz, v5.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r3.wwww, t0.xyzw, s2
					sample r4.xyzw, r4.xyzx, t1.xyzw, s1
					mul r3.w, r4.w, r5.x
					mul r1.w, r1.w, r3.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r4.xyz, r4.xyzx, r5.xyzx
					max r1.w, r4.y, r4.x
					max r1.w, r4.z, r1.w
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					eq r4.x, cb0[8].y, l(1.000000)
					and r3.w, r3.w, r4.x
					movc r0.xyz, r3.wwww, cb0[28].xyzx, r0.xyzx
					movc r4.x, r3.w, l(1.000000), r1.w
					mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r0.x, r3.xyzx, r0.xyzx
					min r0.x, r4.x, r0.x
					mad r0.y, r0.w, cb0[8].w, cb0[21].z
					add r0.y, r0.y, -cb0[8].w
					max r0.z, r0.y, l(0.000000)
					add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					max r0.y, r0.y, l(0.000000)
					mul r0.x, r0.x, l(0.500000)
					add r0.y, -r0.z, r0.y
					mad r0.x, r0.x, r0.y, r0.z
					sample r0.xyzw, r0.xxxx, t2.xyzw, s4
					mul r0.xyz, r0.xyzx, cb0[24].xyzx
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r0.xyz, r0.xyzx, r4.xxxx, r0.wwww
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp2 r1.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r1.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.xyz, r1.xyzx, -cb1[45].xyzx
					mad r1.xyz, cb0[2].xyzx, r1.wwww, r1.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r1.xyz, r0.xyzx, cb0[27].xyzx
					movc r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					add r0.w, -|r0.w|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r2.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t7.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[26].xyzw
					sample r4.xyzw, v1.xyxx, t8.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t9.xyzw, s2
					mul r1.w, r5.x, cb0[23].x
					sample r6.xyzw, v1.xyxx, t10.xyzw, s2
					mul r2.w, r6.x, cb0[22].z
					sample r7.xyzw, v1.zwzz, t0.xyzw, s6
					sample r8.xyzw, v1.xyxx, t11.xyzw, s2
					add r4.w, r8.x, l(-1.000000)
					mad r4.w, cb0[21].x, r4.w, l(1.000000)
					eq r5.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r5.y
					  sample r8.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r9.x, v2.xyzx, r4.xyzx
					  dp3 r9.y, v3.xyzx, r4.xyzx
					  dp3 r9.z, v4.xyzx, r4.xyzx
					  dp3 r5.y, -r1.xyzx, r9.xyzx
					  add r5.y, r5.y, r5.y
					  mad r5.yw, r9.xxxy, -r5.yyyy, -r1.xxxy
					  add r5.yw, r5.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r5.yw, r5.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r6.y, r2.w, l(-5.000000), l(5.000000)
					  sample_l r9.xyzw, r5.ywyy, t1.xyzw, s5, r6.y
					  add r6.yzw, -r8.xxyz, r9.xxyz
					  mad r6.yzw, r2.wwww, r6.yyzw, r8.xxyz
					  mul r6.yzw, r4.wwww, r6.yyzw
					else 
					  eq r5.y, cb0[8].z, l(2.000000)
					  if_nz r5.y
					    dp3 r8.x, v2.xyzx, r4.xyzx
					    dp3 r8.y, v3.xyzx, r4.xyzx
					    dp3 r8.z, v4.xyzx, r4.xyzx
					    dp3 r5.y, -r1.xyzx, r8.xyzx
					    add r5.y, r5.y, r5.y
					    mad r7.yzw, r8.xxyz, -r5.yyyy, -r1.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r8.xyzw, r7.yzwy, t2.xyzw, s7, r2.w
					    mul r6.yzw, r4.wwww, r8.xxyz
					  else 
					    eq r2.w, cb0[8].z, l(3.000000)
					    mul r7.yzw, r4.wwww, cb0[30].xxyz
					    movc r6.yzw, r2.wwww, r7.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r7.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r7.yzw, r7.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r5.yw, v5.yyyy, cb0[5].xxxy
					mad r5.yw, cb0[4].xxxy, v5.xxxx, r5.yyyw
					mad r5.yw, cb0[6].xxxy, v5.zzzz, r5.yyyw
					add r5.yw, r5.yyyw, cb0[7].xxxy
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r8.xyz, v5.yyyy, cb3[2].xyzx
					  mad r8.xyz, cb3[1].xyzx, v5.xxxx, r8.xyzx
					  mad r8.xyz, cb3[3].xyzx, v5.zzzz, r8.xyzx
					  add r8.xyz, r8.xyzx, cb3[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, v5.xyzx
					  add r8.xyz, r8.xyzx, -cb3[6].xyzx
					  mul r8.yzw, r8.xxyz, cb3[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r8.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r8.y
					  sample r8.xyzw, r8.xzwx, t6.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb2[46].xyzw
					sample r8.xyzw, r5.ywyy, t3.xyzw, s1
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r8.xyz, r2.wwww, cb0[2].xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r8.xyz, r8.xyzx, r9.xyzx
					max r2.w, r8.y, r8.x
					max r8.w, r8.z, r2.w
					mul r9.xyz, r8.wwww, cb0[2].xyzx
					dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r5.z, r2.w
					movc r5.yzw, r2.wwww, cb0[28].xxyz, cb2[0].xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					mov r8.xyz, cb2[0].xyzx
					movc r10.xyzw, r2.wwww, r10.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r8.x, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r8.xxxx
					dp3 r8.y, r4.xyzx, r10.xyzx
					min r8.y, r10.w, r8.y
					mad r4.w, r4.w, cb0[8].w, cb0[21].z
					add r4.w, r4.w, -cb0[8].w
					max r8.z, r4.w, l(0.000000)
					add r4.w, r4.w, l(1.000000)
					max r4.w, r4.w, l(0.000000)
					add r8.y, r8.y, l(1.000000)
					mul r8.y, r8.y, l(0.500000)
					add r4.w, -r8.z, r4.w
					mad r4.w, r8.y, r4.w, r8.z
					sample r10.xyzw, r4.wwww, t4.xyzw, s3
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r4.w, -cb0[21].y, l(1.000000)
					add r8.y, -r4.w, l(1.000000)
					mad r10.xyz, r10.xyzx, r8.yyyy, r4.wwww
					mad r4.w, -r6.x, cb0[22].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r4.w, r4.w
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[21].w, l(0.000000)
					add r4.x, cb0[21].w, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r4.xyzw, r1.zzzz, t5.xyzw, s4
					mul r4.xyz, r7.yzwy, r4.xyzx
					mad r1.z, -r5.x, cb0[23].x, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r8.x, l(1.000000)
					mad_sat r0.z, r6.x, cb0[22].z, r0.z
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r6.yzwy, r1.wwww
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r8.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[27].xyzx
					mul r6.xyz, r3.xyzx, cb0[27].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, r9.xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r10.xyzx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r10.xyzx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[29].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[29].x, l(0.500000), r1.x
					mad r0.x, -cb0[29].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					sample r2.xyzw, v1.xyxx, t7.xyzw, s2
					mul r3.xyzw, r2.xyzw, cb0[26].xyzw
					sample r4.xyzw, v1.xyxx, t8.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r4.xyxx, cb0[19].zzzz
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					sample r5.xyzw, v1.xyxx, t9.xyzw, s2
					mul r1.w, r5.x, cb0[23].x
					sample r6.xyzw, v1.xyxx, t10.xyzw, s2
					mul r2.w, r6.x, cb0[22].z
					sample r7.xyzw, v1.zwzz, t0.xyzw, s6
					sample r8.xyzw, v1.xyxx, t11.xyzw, s2
					add r4.w, r8.x, l(-1.000000)
					mad r4.w, cb0[21].x, r4.w, l(1.000000)
					eq r5.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r5.y
					  sample r8.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r9.x, v2.xyzx, r4.xyzx
					  dp3 r9.y, v3.xyzx, r4.xyzx
					  dp3 r9.z, v4.xyzx, r4.xyzx
					  dp3 r5.y, -r1.xyzx, r9.xyzx
					  add r5.y, r5.y, r5.y
					  mad r5.yw, r9.xxxy, -r5.yyyy, -r1.xxxy
					  add r5.yw, r5.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r5.yw, r5.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r6.y, r2.w, l(-5.000000), l(5.000000)
					  sample_l r9.xyzw, r5.ywyy, t1.xyzw, s5, r6.y
					  add r6.yzw, -r8.xxyz, r9.xxyz
					  mad r6.yzw, r2.wwww, r6.yyzw, r8.xxyz
					  mul r6.yzw, r4.wwww, r6.yyzw
					else 
					  eq r5.y, cb0[8].z, l(2.000000)
					  if_nz r5.y
					    dp3 r8.x, v2.xyzx, r4.xyzx
					    dp3 r8.y, v3.xyzx, r4.xyzx
					    dp3 r8.z, v4.xyzx, r4.xyzx
					    dp3 r5.y, -r1.xyzx, r8.xyzx
					    add r5.y, r5.y, r5.y
					    mad r7.yzw, r8.xxyz, -r5.yyyy, -r1.xxyz
					    mad r2.w, r2.w, l(-5.000000), l(5.000000)
					    sample_l r8.xyzw, r7.yzwy, t2.xyzw, s7, r2.w
					    mul r6.yzw, r4.wwww, r8.xxyz
					  else 
					    eq r2.w, cb0[8].z, l(3.000000)
					    mul r7.yzw, r4.wwww, cb0[30].xxyz
					    movc r6.yzw, r2.wwww, r7.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r7.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r7.yzw, r7.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r5.yw, v5.yyyy, cb0[5].xxxy
					mad r5.yw, cb0[4].xxxy, v5.xxxx, r5.yyyw
					mad r5.yw, cb0[6].xxxy, v5.zzzz, r5.yyyw
					add r5.yw, r5.yyyw, cb0[7].xxxy
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r8.xyz, v5.yyyy, cb4[2].xyzx
					  mad r8.xyz, cb4[1].xyzx, v5.xxxx, r8.xyzx
					  mad r8.xyz, cb4[3].xyzx, v5.zzzz, r8.xyzx
					  add r8.xyz, r8.xyzx, cb4[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, v5.xyzx
					  add r8.xyz, r8.xyzx, -cb4[6].xyzx
					  mul r8.yzw, r8.xxyz, cb4[5].xxyz
					  mad r2.w, r8.y, l(0.250000), l(0.750000)
					  mad r8.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r8.x, r2.w, r8.y
					  sample r8.xyzw, r8.xzwx, t6.xyzw, s0
					else 
					  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r8.xyzw, cb1[46].xyzw
					sample r8.xyzw, r5.ywyy, t3.xyzw, s1
					mul r2.w, r2.w, r8.w
					dp3 r8.x, v2.xyzx, r4.xyzx
					dp3 r8.y, v3.xyzx, r4.xyzx
					dp3 r8.z, v4.xyzx, r4.xyzx
					dp3 r4.x, r8.xyzx, r8.xyzx
					rsq r4.x, r4.x
					mul r4.xyz, r4.xxxx, r8.xyzx
					mul r8.xyz, r2.wwww, cb0[2].xyzx
					add r9.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r8.xyz, r8.xyzx, r9.xyzx
					max r2.w, r8.y, r8.x
					max r8.w, r8.z, r2.w
					mul r9.xyz, r8.wwww, cb0[2].xyzx
					dp3 r2.w, cb1[0].xyzx, cb1[0].xyzx
					ne r2.w, r2.w, l(0.000000)
					ieq r2.w, r2.w, l(0)
					and r2.w, r5.z, r2.w
					movc r5.yzw, r2.wwww, cb0[28].xxyz, cb1[0].xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					mov r8.xyz, cb1[0].xyzx
					movc r10.xyzw, r2.wwww, r10.xyzw, r8.xyzw
					mad r2.xyz, r2.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r8.x, -r1.w, l(0.960000), l(0.960000)
					mul r3.xyz, r3.xyzx, r8.xxxx
					dp3 r8.y, r4.xyzx, r10.xyzx
					min r8.y, r10.w, r8.y
					mad r4.w, r4.w, cb0[8].w, cb0[21].z
					add r4.w, r4.w, -cb0[8].w
					max r8.z, r4.w, l(0.000000)
					add r4.w, r4.w, l(1.000000)
					max r4.w, r4.w, l(0.000000)
					add r8.y, r8.y, l(1.000000)
					mul r8.y, r8.y, l(0.500000)
					add r4.w, -r8.z, r4.w
					mad r4.w, r8.y, r4.w, r8.z
					sample r10.xyzw, r4.wwww, t4.xyzw, s3
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r4.w, -cb0[21].y, l(1.000000)
					add r8.y, -r4.w, l(1.000000)
					mad r10.xyz, r10.xyzx, r8.yyyy, r4.wwww
					mad r4.w, -r6.x, cb0[22].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r5.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, r5.yzwy
					dp3_sat r1.y, r4.xyzx, r0.xyzx
					dp3_sat r0.x, r5.yzwy, r0.xyzx
					mul r0.y, r4.w, r4.w
					max r0.y, r0.y, l(0.002000)
					add r0.z, -r0.y, l(1.000000)
					mad r1.z, |r0.w|, r0.z, r0.y
					mad r0.z, r1.x, r0.z, r0.y
					mul r0.z, r0.z, |r0.w|
					mad r0.z, r1.x, r1.z, r0.z
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r1.z, r0.y, r0.y
					mad r4.x, r1.y, r1.z, -r1.y
					mad r1.y, r4.x, r1.y, l(1.000000)
					mul r1.z, r1.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r1.y, r1.z, r1.y
					max r1.z, cb0[21].w, l(0.000000)
					add r4.x, cb0[21].w, l(1.000000)
					max r4.x, r4.x, l(0.000000)
					min r4.y, r1.y, l(2.000000)
					mul r4.y, r4.y, l(0.500000)
					add r4.x, -r1.z, r4.x
					mad r1.z, r4.y, r4.x, r1.z
					sample r4.xyzw, r1.zzzz, t5.xyzw, s4
					mul r4.xyz, r7.yzwy, r4.xyzx
					mad r1.z, -r5.x, cb0[23].x, l(1.000000)
					mad r1.z, r1.w, l(0.100000), r1.z
					mad r4.xyz, r4.xyzx, r1.zzzz, -r1.yyyy
					mad r1.yzw, cb0[8].xxxx, r4.xxyz, r1.yyyy
					mul r1.yzw, r7.xxxx, r1.yyzw
					mul r1.yzw, r0.zzzz, r1.yyzw
					mul r1.yzw, r1.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r1.xyz, r1.xxxx, r1.yzwy
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r0.y, r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					dp3 r0.z, r2.xyzx, r2.xyzx
					ne r0.z, r0.z, l(0.000000)
					and r0.z, r0.z, l(0x3f800000)
					mul r1.xyz, r0.zzzz, r1.xyzx
					add r0.z, -r8.x, l(1.000000)
					mad_sat r0.z, r6.x, cb0[22].z, r0.z
					lt r1.w, l(0.000000), cb0[8].z
					and r4.xyz, r6.yzwy, r1.wwww
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r8.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					add r1.w, r5.y, r5.x
					add r1.w, r5.z, r1.w
					mul r1.w, r1.w, l(0.333333)
					mul r5.xyz, r1.wwww, cb0[27].xyzx
					mul r6.xyz, r3.xyzx, cb0[27].xyzx
					movc r5.xyz, r2.wwww, r5.xyzx, r9.xyzx
					movc r3.xyz, r2.wwww, r6.xyzx, r3.xyzx
					mul r1.xyz, r10.xyzx, r1.xyzx
					mul r1.xyz, r5.xyzx, r1.xyzx
					add r0.x, -r0.x, l(1.000000)
					mul r2.w, r0.x, r0.x
					mul r2.w, r2.w, r2.w
					mul r0.x, r0.x, r2.w
					add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r0.xxxx, r2.xyzx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mul r4.xyz, r1.wwww, r4.xyzx
					mul r4.xyz, r10.xyzx, r4.xyzx
					add r0.x, -|r0.w|, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.x, r0.y
					add r6.xyz, -r2.xyzx, r0.zzzz
					mad r0.yzw, r0.yyyy, r6.xxyz, r2.xxyz
					mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
					mad r0.yzw, r4.xxyz, r0.yyzw, r1.xxyz
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					mad r1.x, -cb0[29].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[29].x, l(0.500000), r1.x
					mad r0.x, -cb0[29].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r3.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mul r1.xyzw, r1.xyzw, cb0[26].xyzw
					sample r2.xyzw, v1.xyxx, t4.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[19].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					sample r3.xyzw, v1.xyxx, t5.xyzw, s2
					add r0.w, r3.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r3.xy, v5.yyyy, cb0[5].xyxx
					mad r3.xy, cb0[4].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[6].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[7].xyxx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.z
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					mul r2.w, r2.w, r3.w
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r2.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r2.w, r3.y, r3.x
					max r2.w, r3.z, r2.w
					dp3 r3.x, cb2[0].xyzx, cb2[0].xyzx
					ne r3.x, r3.x, l(0.000000)
					ieq r3.x, r3.x, l(0)
					eq r3.y, cb0[8].y, l(1.000000)
					and r3.x, r3.y, r3.x
					mov r3.yzw, cb2[0].xxyz
					movc r3.yzw, r3.xxxx, cb0[28].xxyz, r3.yyzw
					movc r4.x, r3.x, l(1.000000), r2.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.y, r2.xyzx, r3.yzwy
					min r3.y, r4.x, r3.y
					mad r0.w, r0.w, cb0[8].w, cb0[21].z
					add r0.w, r0.w, -cb0[8].w
					max r3.z, r0.w, l(0.000000)
					add r0.w, r0.w, l(1.000000)
					max r0.w, r0.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r0.w, -r3.z, r0.w
					mad r0.w, r3.y, r0.w, r3.z
					sample r4.xyzw, r0.wwww, t1.xyzw, s3
					mul r3.yzw, r4.xxyz, cb0[24].xxyz
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r3.yzw, r3.yyzw, r4.xxxx, r0.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb2[45].xxyz
					mad r0.yzw, cb0[2].xxyz, r2.wwww, r0.yyzw
					mul r0.yzw, r3.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[27].xyzx
					movc r0.yzw, r3.xxxx, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.x, -cb0[29].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s2
					mul r1.xyzw, r1.xyzw, cb0[26].xyzw
					sample r2.xyzw, v1.xyxx, t4.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[19].zzzz
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r2.z, r0.w
					sample r3.xyzw, v1.xyxx, t5.xyzw, s2
					add r0.w, r3.x, l(-1.000000)
					mad r0.w, cb0[21].x, r0.w, l(1.000000)
					mul r3.xy, v5.yyyy, cb0[5].xyxx
					mad r3.xy, cb0[4].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[6].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[7].xyxx
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.z, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.z
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					mul r2.w, r2.w, r3.w
					dp3 r3.x, v2.xyzx, r2.xyzx
					dp3 r3.y, v3.xyzx, r2.xyzx
					dp3 r3.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r3.xyzx, r3.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r3.xyzx
					mul r3.xyz, r2.wwww, cb0[2].xyzx
					add r4.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r3.xyz, r3.xyzx, r4.xyzx
					max r2.w, r3.y, r3.x
					max r2.w, r3.z, r2.w
					dp3 r3.x, cb1[0].xyzx, cb1[0].xyzx
					ne r3.x, r3.x, l(0.000000)
					ieq r3.x, r3.x, l(0)
					eq r3.y, cb0[8].y, l(1.000000)
					and r3.x, r3.y, r3.x
					mov r3.yzw, cb1[0].xxyz
					movc r3.yzw, r3.xxxx, cb0[28].xxyz, r3.yyzw
					movc r4.x, r3.x, l(1.000000), r2.w
					mul r1.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					dp3 r3.y, r2.xyzx, r3.yzwy
					min r3.y, r4.x, r3.y
					mad r0.w, r0.w, cb0[8].w, cb0[21].z
					add r0.w, r0.w, -cb0[8].w
					max r3.z, r0.w, l(0.000000)
					add r0.w, r0.w, l(1.000000)
					max r0.w, r0.w, l(0.000000)
					add r3.y, r3.y, l(1.000000)
					mul r3.y, r3.y, l(0.500000)
					add r0.w, -r3.z, r0.w
					mad r0.w, r3.y, r0.w, r3.z
					sample r4.xyzw, r0.wwww, t1.xyzw, s3
					mul r3.yzw, r4.xxyz, cb0[24].xxyz
					add r0.w, -cb0[21].y, l(1.000000)
					add r4.x, -r0.w, l(1.000000)
					mad r3.yzw, r3.yyzw, r4.xxxx, r0.wwww
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp2 r2.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r0.yzw, r2.xxyz, -cb1[45].xxyz
					mad r0.yzw, cb0[2].xxyz, r2.wwww, r0.yyzw
					mul r0.yzw, r3.yyzw, r0.yyzw
					mul r0.yzw, r0.yyzw, r1.xxyz
					mul r1.xyz, r0.yzwy, cb0[27].xyzx
					movc r0.yzw, r3.xxxx, r1.xxyz, r0.yyzw
					add r0.x, -|r0.x|, l(1.000000)
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.x, r0.x
					mul r0.x, r0.x, r1.x
					exp r0.x, r0.x
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.x, -cb0[29].x, l(0.500000), r0.x
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.x, r0.x, r1.x
					mad r1.x, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t7.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[26].xyzw
					sample r5.xyzw, v1.xyxx, t8.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t9.xyzw, s2
					mul r2.w, r6.x, cb0[23].x
					sample r7.xyzw, v1.xyxx, t10.xyzw, s2
					mul r3.w, r7.x, cb0[22].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s6
					sample r9.xyzw, v1.xyxx, t11.xyzw, s2
					add r5.w, r9.x, l(-1.000000)
					mad r5.w, cb0[21].x, r5.w, l(1.000000)
					eq r6.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r6.y, -r2.xyzx, r10.xyzx
					  add r6.y, r6.y, r6.y
					  mad r6.yw, r10.xxxy, -r6.yyyy, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r7.y, r3.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s5, r7.y
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r3.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r5.wwww, r7.yyzw
					else 
					  eq r6.y, cb0[8].z, l(2.000000)
					  if_nz r6.y
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r6.y, -r2.xyzx, r9.xyzx
					    add r6.y, r6.y, r6.y
					    mad r8.yzw, r9.xxyz, -r6.yyyy, -r2.xxyz
					    mad r3.w, r3.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s7, r3.w
					    mul r7.yzw, r5.wwww, r9.xxyz
					  else 
					    eq r3.w, cb0[8].z, l(3.000000)
					    mul r8.yzw, r5.wwww, cb0[30].xxyz
					    movc r7.yzw, r3.wwww, r8.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyz, v5.yyyy, cb0[5].xyzx
					mad r9.xyz, cb0[4].xyzx, v5.xxxx, r9.xyzx
					mad r9.xyz, cb0[6].xyzx, v5.zzzz, r9.xyzx
					add r9.xyz, r9.xyzx, cb0[7].xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r10.xyz, v5.yyyy, cb3[2].xyzx
					  mad r10.xyz, cb3[1].xyzx, v5.xxxx, r10.xyzx
					  mad r10.xyz, cb3[3].xyzx, v5.zzzz, r10.xyzx
					  add r10.xyz, r10.xyzx, cb3[4].xyzx
					  movc r10.xyz, r3.wwww, r10.xyzx, v5.xyzx
					  add r10.xyz, r10.xyzx, -cb3[6].xyzx
					  mul r10.yzw, r10.xxyz, cb3[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r6.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r6.y
					  sample r10.xyzw, r10.xzwx, t6.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb2[46].xyzw
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t3.xyzw, s1
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r9.xyz, r3.wwww, cb0[2].xyzx
					add r10.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r9.xyzx, r10.xyzx
					max r3.w, r9.y, r9.x
					max r0.w, r9.z, r3.w
					mul r9.xyz, r0.wwww, cb0[2].xyzx
					dp3 r3.w, cb2[0].xyzx, cb2[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					and r3.w, r6.z, r3.w
					movc r6.yzw, r3.wwww, cb0[28].xxyz, r0.xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					movc r10.xyzw, r3.wwww, r10.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r10.xyzx
					min r3.y, r10.w, r3.y
					mad r3.z, r5.w, cb0[8].w, cb0[21].z
					add r3.z, r3.z, -cb0[8].w
					max r5.w, r3.z, l(0.000000)
					add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					max r3.z, r3.z, l(0.000000)
					mul r3.y, r3.y, l(0.500000)
					add r3.z, -r5.w, r3.z
					mad r3.y, r3.y, r3.z, r5.w
					sample r10.xyzw, r3.yyyy, t4.xyzw, s3
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r3.y, -cb0[21].y, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].z, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r6.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[21].w, l(0.000000)
					add r3.y, cb0[21].w, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t5.xyzw, s4
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[23].x, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r1.z, -r3.x, l(1.000000)
					mad_sat r1.z, r7.x, cb0[22].z, r1.z
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r7.yzwy, r2.wwww
					dp2 r5.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb2[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[27].xyzx
					mul r6.xyz, r4.xyzx, cb0[27].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r9.xyzx
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					mad r1.x, -cb0[29].x, l(0.500000), l(1.000000)
					mad r1.x, -cb0[29].x, l(0.500000), r1.x
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture2d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov r1.x, cb3[0].x
					add r1.xyz, -v5.xyzx, cb2[r1.x + 64].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t7.xyzw, s2
					mul r4.xyzw, r3.xyzw, cb0[26].xyzw
					sample r5.xyzw, v1.xyxx, t8.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[19].zzzz
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					sample r6.xyzw, v1.xyxx, t9.xyzw, s2
					mul r2.w, r6.x, cb0[23].x
					sample r7.xyzw, v1.xyxx, t10.xyzw, s2
					mul r3.w, r7.x, cb0[22].z
					sample r8.xyzw, v1.zwzz, t0.xyzw, s6
					sample r9.xyzw, v1.xyxx, t11.xyzw, s2
					add r5.w, r9.x, l(-1.000000)
					mad r5.w, cb0[21].x, r5.w, l(1.000000)
					eq r6.yz, cb0[8].zzyz, l(0.000000, 1.000000, 1.000000, 0.000000)
					if_nz r6.y
					  sample r9.xyzw, l(0.500000, 0.500000, 0.000000, 0.000000), t1.xyzw, s5
					  dp3 r10.x, v2.xyzx, r5.xyzx
					  dp3 r10.y, v3.xyzx, r5.xyzx
					  dp3 r10.z, v4.xyzx, r5.xyzx
					  dp3 r6.y, -r2.xyzx, r10.xyzx
					  add r6.y, r6.y, r6.y
					  mad r6.yw, r10.xxxy, -r6.yyyy, -r2.xxxy
					  add r6.yw, r6.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
					  mad r6.yw, r6.yyyw, l(0.000000, 0.400000, 0.000000, 0.400000), l(0.000000, 0.100000, 0.000000, 0.100000)
					  mad r7.y, r3.w, l(-5.000000), l(5.000000)
					  sample_l r10.xyzw, r6.ywyy, t1.xyzw, s5, r7.y
					  add r7.yzw, -r9.xxyz, r10.xxyz
					  mad r7.yzw, r3.wwww, r7.yyzw, r9.xxyz
					  mul r7.yzw, r5.wwww, r7.yyzw
					else 
					  eq r6.y, cb0[8].z, l(2.000000)
					  if_nz r6.y
					    dp3 r9.x, v2.xyzx, r5.xyzx
					    dp3 r9.y, v3.xyzx, r5.xyzx
					    dp3 r9.z, v4.xyzx, r5.xyzx
					    dp3 r6.y, -r2.xyzx, r9.xyzx
					    add r6.y, r6.y, r6.y
					    mad r8.yzw, r9.xxyz, -r6.yyyy, -r2.xxyz
					    mad r3.w, r3.w, l(-5.000000), l(5.000000)
					    sample_l r9.xyzw, r8.yzwy, t2.xyzw, s7, r3.w
					    mul r7.yzw, r5.wwww, r9.xxyz
					  else 
					    eq r3.w, cb0[8].z, l(3.000000)
					    mul r8.yzw, r5.wwww, cb0[30].xxyz
					    movc r7.yzw, r3.wwww, r8.yyzw, cb0[11].xxyz
					  endif 
					endif 
					mul r8.yzw, cb0[22].xxxx, cb0[25].xxyz
					mul r8.yzw, r8.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
					mul r9.xyz, v5.yyyy, cb0[5].xyzx
					mad r9.xyz, cb0[4].xyzx, v5.xxxx, r9.xyzx
					mad r9.xyz, cb0[6].xyzx, v5.zzzz, r9.xyzx
					add r9.xyz, r9.xyzx, cb0[7].xyzx
					eq r3.w, cb4[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r10.xyz, v5.yyyy, cb4[2].xyzx
					  mad r10.xyz, cb4[1].xyzx, v5.xxxx, r10.xyzx
					  mad r10.xyz, cb4[3].xyzx, v5.zzzz, r10.xyzx
					  add r10.xyz, r10.xyzx, cb4[4].xyzx
					  movc r10.xyz, r3.wwww, r10.xyzx, v5.xyzx
					  add r10.xyz, r10.xyzx, -cb4[6].xyzx
					  mul r10.yzw, r10.xxyz, cb4[5].xxyz
					  mad r3.w, r10.y, l(0.250000), l(0.750000)
					  mad r6.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r10.x, r3.w, r6.y
					  sample r10.xyzw, r10.xzwx, t6.xyzw, s0
					else 
					  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r10.xyzw, cb1[46].xyzw
					dp3 r6.y, r9.xyzx, r9.xyzx
					sample r9.xyzw, r6.yyyy, t3.xyzw, s1
					mul r3.w, r3.w, r9.x
					dp3 r9.x, v2.xyzx, r5.xyzx
					dp3 r9.y, v3.xyzx, r5.xyzx
					dp3 r9.z, v4.xyzx, r5.xyzx
					dp3 r5.x, r9.xyzx, r9.xyzx
					rsq r5.x, r5.x
					mul r5.xyz, r5.xxxx, r9.xyzx
					mul r9.xyz, r3.wwww, cb0[2].xyzx
					add r10.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r9.xyz, r9.xyzx, r10.xyzx
					max r3.w, r9.y, r9.x
					max r0.w, r9.z, r3.w
					mul r9.xyz, r0.wwww, cb0[2].xyzx
					dp3 r3.w, cb1[0].xyzx, cb1[0].xyzx
					ne r3.w, r3.w, l(0.000000)
					ieq r3.w, r3.w, l(0)
					and r3.w, r6.z, r3.w
					movc r6.yzw, r3.wwww, cb0[28].xxyz, r0.xxyz
					mov r10.xyz, cb0[28].xyzx
					mov r10.w, l(1.000000)
					movc r10.xyzw, r3.wwww, r10.xyzw, r0.xyzw
					mad r0.xyz, r3.xyzx, cb0[26].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
					mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
					mad r3.x, -r2.w, l(0.960000), l(0.960000)
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.y, r5.xyzx, r10.xyzx
					min r3.y, r10.w, r3.y
					mad r3.z, r5.w, cb0[8].w, cb0[21].z
					add r3.z, r3.z, -cb0[8].w
					max r5.w, r3.z, l(0.000000)
					add r3.yz, r3.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					max r3.z, r3.z, l(0.000000)
					mul r3.y, r3.y, l(0.500000)
					add r3.z, -r5.w, r3.z
					mad r3.y, r3.y, r3.z, r5.w
					sample r10.xyzw, r3.yyyy, t4.xyzw, s3
					mul r10.xyz, r10.xyzx, cb0[24].xyzx
					add r3.y, -cb0[21].y, l(1.000000)
					add r3.z, -r3.y, l(1.000000)
					mad r10.xyz, r10.xyzx, r3.zzzz, r3.yyyy
					mad r3.y, -r7.x, cb0[22].z, l(1.000000)
					mad r1.xyz, r1.xyzx, r1.wwww, r6.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.yzwy
					dp3_sat r2.y, r5.xyzx, r1.xyzx
					dp3_sat r1.x, r6.yzwy, r1.xyzx
					mul r1.y, r3.y, r3.y
					max r1.y, r1.y, l(0.002000)
					add r1.z, -r1.y, l(1.000000)
					mad r2.z, |r1.w|, r1.z, r1.y
					mad r1.z, r2.x, r1.z, r1.y
					mul r1.z, r1.z, |r1.w|
					mad r1.z, r2.x, r2.z, r1.z
					add r1.z, r1.z, l(0.000010)
					div r1.z, l(0.500000), r1.z
					mul r2.z, r1.y, r1.y
					mad r3.y, r2.y, r2.z, -r2.y
					mad r2.y, r3.y, r2.y, l(1.000000)
					mul r2.z, r2.z, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.z, r2.y
					max r2.z, cb0[21].w, l(0.000000)
					add r3.y, cb0[21].w, l(1.000000)
					max r3.y, r3.y, l(0.000000)
					min r3.z, r2.y, l(2.000000)
					mul r3.z, r3.z, l(0.500000)
					add r3.y, -r2.z, r3.y
					mad r2.z, r3.z, r3.y, r2.z
					sample r5.xyzw, r2.zzzz, t5.xyzw, s4
					mul r5.xyz, r8.yzwy, r5.xyzx
					mad r2.z, -r6.x, cb0[23].x, l(1.000000)
					mad r2.z, r2.w, l(0.100000), r2.z
					mad r5.xyz, r5.xyzx, r2.zzzz, -r2.yyyy
					mad r2.yzw, cb0[8].xxxx, r5.xxyz, r2.yyyy
					mul r2.yzw, r8.xxxx, r2.yyzw
					mul r2.yzw, r1.zzzz, r2.yyzw
					mul r2.yzw, r2.yyzw, l(0.000000, 3.141593, 3.141593, 3.141593)
					mul r2.xyz, r2.xxxx, r2.yzwy
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.y, r1.y, r1.y, l(1.000000)
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					dp3 r1.z, r0.xyzx, r0.xyzx
					ne r1.z, r1.z, l(0.000000)
					and r1.z, r1.z, l(0x3f800000)
					mul r2.xyz, r1.zzzz, r2.xyzx
					mad r1.z, r7.x, cb0[22].z, -r3.x
					add_sat r1.z, r1.z, l(1.000000)
					lt r2.w, l(0.000000), cb0[8].z
					and r3.xyz, r7.yzwy, r2.wwww
					dp2 r5.x, cb1[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.y, cb1[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r5.z, cb1[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r5.xyz, r5.xyzx, -cb1[45].xyzx
					mad r5.xyz, cb0[2].xyzx, r0.wwww, r5.xyzx
					mul r6.xyz, r10.xyzx, r5.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					add r0.w, r5.y, r5.x
					add r0.w, r5.z, r0.w
					mul r0.w, r0.w, l(0.333333)
					mul r5.xyz, r0.wwww, cb0[27].xyzx
					mul r6.xyz, r4.xyzx, cb0[27].xyzx
					movc r5.xyz, r3.wwww, r5.xyzx, r9.xyzx
					movc r4.xyz, r3.wwww, r6.xyzx, r4.xyzx
					mul r2.xyz, r10.xyzx, r2.xyzx
					mul r2.xyz, r5.xyzx, r2.xyzx
					add r1.x, -r1.x, l(1.000000)
					mul r2.w, r1.x, r1.x
					mul r2.w, r2.w, r2.w
					mul r1.x, r1.x, r2.w
					add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r5.xyz, r5.xyzx, r1.xxxx, r0.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r3.xyz, r10.xyzx, r3.xyzx
					add r0.w, -|r1.w|, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r1.x, r0.w, r1.x
					add r1.yzw, -r0.xxyz, r1.zzzz
					mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
					mad r1.xyz, r2.xyzx, r5.xyzx, r4.xyzx
					mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
					add r1.x, -cb0[28].w, l(1.000000)
					mul r1.x, r1.x, l(10.000000)
					max r1.x, r1.x, l(0.001000)
					log r0.w, r0.w
					mul r0.w, r0.w, r1.x
					exp r0.w, r0.w
					add r1.x, -cb0[29].x, l(1.000000)
					mad r0.w, -cb0[29].x, l(0.500000), r0.w
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r0.w, r0.w, r1.x
					mad r1.x, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r1.x
					mad r0.w, r0.w, cb0[29].y, l(1.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, r4.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			LOD 100
			Tags { "LIGHTMODE" = "META" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ColorMask RGB -1
			ZWrite Off
			Cull Off
			GpuProgramID 154171
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_temps 5
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[30].xyxx, cb0[30].zwzz
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_temps 5
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[30].xyxx, cb0[30].zwzz
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_temps 5
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[30].xyxx, cb0[30].zwzz
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_temps 5
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[30].xyxx, cb0[30].zwzz
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mov o2.w, r0.x
					mul r0.x, v1.w, cb1[9].w
					mul r1.xyzw, v1.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, v1.xxxx, r1.xyzw
					mad r1.xyzw, cb1[2].xyzw, v1.zzzz, r1.xyzw
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.yzxy
					dp3 r3.x, v2.xyzx, cb1[4].xyzx
					dp3 r3.y, v2.xyzx, cb1[5].xyzx
					dp3 r3.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.zxyz
					mad r4.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r2.z
					mov o2.z, r3.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r3.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o4.z, r3.z
					mov o5.xyz, l(0,0,0,0)
					mov o6.xyz, r3.xyzx
					dp4 r0.x, r1.xyzw, r1.xyzw
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o7.xyz, r0.xyzx
					mul r1.xyz, r0.yzxy, r3.zxyz
					mad o8.xyz, r3.yzxy, r0.zxyz, -r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[22].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[28].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[28].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[22].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[28].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[28].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[22].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[28].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[28].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_ENABLE_SPECULAR" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.xyz, r0.xyzx, cb0[22].xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[28].z
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[28].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Standard"
	CustomEditor "ToonyStandardGUI"
}