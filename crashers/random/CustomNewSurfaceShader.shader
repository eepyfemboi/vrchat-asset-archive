Shader "Custom/NewSurfaceShader" {
	Properties {
		[HideInInspector] __dirty ("", Float) = 1
		_R ("R", Float) = 0
	}
	SubShader {
		Tags { "IsEmissive" = "true" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" }
		GrabPass {
		}
		Pass {
			Name "FORWARD"
			Tags { "IsEmissive" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Cull Front
			GpuProgramID 46424
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r2.zzzz, r2.xwxx
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o4.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r2.zzzz, r2.xwxx
					mov r1.w, cb4[0].x
					mul r2.xy, r0.wwww, cb3[r1.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r2.xyxx
					mov o3.zw, r0.zzzw
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o4.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r1.x, r0.y, cb0[5].x
					mul r1.w, r1.x, l(0.500000)
					mul r1.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov o3.xyzw, r0.xyzw
					mov o4.xyzw, r0.xyzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r1.x, r0.y, cb0[4].x
					mul r1.w, r1.x, l(0.500000)
					mul r1.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r1.xy, r1.zzzz, r1.xwxx
					mov r1.z, cb3[0].x
					mul r2.xy, r0.wwww, cb2[r1.z + 66].zwzz
					mad r0.xy, r1.xyxx, cb2[r1.z + 66].xyxx, r2.xyxx
					mov o3.xyzw, r0.xyzw
					mov o4.xyzw, r0.xyzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r0.y, cb0[5].x
					mul r2.w, r1.w, l(0.500000)
					mul r2.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mov o3.xyzw, r0.xyzw
					mov o5.xyzw, r0.xyzw
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o4.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r0.y, cb0[4].x
					mul r2.w, r1.w, l(0.500000)
					mul r2.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r2.xy, r2.zzzz, r2.xwxx
					mov r1.w, cb4[0].x
					mul r2.zw, r0.wwww, cb3[r1.w + 66].zzzw
					mad r0.xy, r2.xyxx, cb3[r1.w + 66].xyxx, r2.zwzz
					mov o3.xyzw, r0.xyzw
					mov o5.xyzw, r0.xyzw
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o4.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, cb0[5].x
					mul r3.w, r0.w, l(0.500000)
					mul r3.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r3.zzzz, r3.xwxx
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o4.xyz, r0.xyzx, r1.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, cb0[4].x
					mul r3.w, r0.w, l(0.500000)
					mul r3.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r1.xy, r3.zzzz, r3.xwxx
					mov r0.w, cb4[0].x
					mul r3.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r1.xyxx, cb3[r0.w + 66].xyxx, r3.xyxx
					mov o3.zw, r1.zzzw
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o4.xyz, r0.xyzx, r1.xyzx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r1.x, r0.y, cb0[5].x
					mul r1.w, r1.x, l(0.500000)
					mul r1.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov o3.xyzw, r0.xyzw
					mov o4.xyzw, r0.xyzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r1.x, r0.y, cb0[4].x
					mul r1.w, r1.x, l(0.500000)
					mul r1.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r1.xy, r1.zzzz, r1.xwxx
					mov r1.z, cb3[0].x
					mul r2.xy, r0.wwww, cb2[r1.z + 66].zwzz
					mad r0.xy, r1.xyxx, cb2[r1.z + 66].xyxx, r2.xyxx
					mov o3.xyzw, r0.xyzw
					mov o4.xyzw, r0.xyzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, cb0[5].x
					mul r3.w, r0.w, l(0.500000)
					mul r3.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r1.xy, r3.zzzz, r3.xwxx
					mov o3.xyzw, r1.xyzw
					mov o5.xyzw, r1.xyzw
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o4.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, cb0[4].x
					mul r3.w, r0.w, l(0.500000)
					mul r3.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r3.xy, r3.zzzz, r3.xwxx
					mov r0.w, cb4[0].x
					mul r3.zw, r1.wwww, cb3[r0.w + 66].zzzw
					mad r1.xy, r3.xyxx, cb3[r0.w + 66].xyxx, r3.zwzz
					mov o3.xyzw, r1.xyzw
					mov o5.xyzw, r1.xyzw
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o4.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 6   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[5].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s3
					mad r1.w, cb1[7].x, r3.x, cb1[7].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s2
					sample r5.xyzw, r5.zwzz, t1.xyzw, s2
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s2
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb4[2].xyzx
					  mad r3.xyz, cb4[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb4[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb4[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb4[6].xyzx
					  mul r3.yzw, r3.xxyz, cb4[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb3[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb3[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb3[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb3[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t2.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb3[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb3[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb3[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb3[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb3[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb3[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb3[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb3[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t3.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb3[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb3[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb3[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb3[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 6   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb4[0].x
					add r0.xyz, -v2.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[4].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s3
					mad r1.w, cb1[6].x, r3.x, cb1[6].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s2
					sample r5.xyzw, r5.zwzz, t1.xyzw, s2
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s2
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb6[2].xyzx
					  mad r3.xyz, cb6[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb6[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb6[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb6[6].xyzx
					  mul r3.yzw, r3.xxyz, cb6[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb5[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb5[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb5[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t2.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb5[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb5[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb5[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t3.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[5].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s3
					mad r1.w, cb1[7].x, r3.x, cb1[7].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s2
					sample r5.xyzw, r5.zwzz, t1.xyzw, s2
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s2
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb4[2].xyzx
					  mad r3.xyz, cb4[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb4[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb4[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb4[6].xyzx
					  mul r3.yzw, r3.xxyz, cb4[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb3[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb3[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb3[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb3[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t2.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb3[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb3[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb3[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb3[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb3[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb3[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb3[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb3[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t3.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb3[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb3[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb3[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb3[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb4[0].x
					add r0.xyz, -v2.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[4].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s3
					mad r1.w, cb1[6].x, r3.x, cb1[6].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s2
					sample r5.xyzw, r5.zwzz, t1.xyzw, s2
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s2
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb6[2].xyzx
					  mad r3.xyz, cb6[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb6[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb6[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb6[6].xyzx
					  mul r3.yzw, r3.xxyz, cb6[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb5[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb5[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb5[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t2.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb5[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb5[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb5[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t3.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float   xy w
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[5].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s4
					mad r1.w, cb1[7].x, r3.x, cb1[7].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s3
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s3
					sample r5.xyzw, r5.zwzz, t1.xyzw, s3
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s3
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s3
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.x, cb6[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb6[2].xxyz
					  mad r3.yzw, cb6[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb6[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb6[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb6[6].xyzx
					  mul r3.yzw, r3.xxyz, cb6[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
					div r3.yz, v4.xxyx, v4.wwww
					sample r4.xyzw, r3.yzyy, t2.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.x, r1.w, r3.x
					movc r1.w, r2.w, r3.x, r1.w
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb5[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb5[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb5[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb5[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb5[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb5[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t4.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float   xy w
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[8], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_input_ps linear v4.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb5[0].x
					add r0.xyz, -v2.xyzx, cb4[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[4].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s4
					mad r1.w, cb1[6].x, r3.x, cb1[6].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s3
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s3
					sample r5.xyzw, r5.zwzz, t1.xyzw, s3
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s3
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s3
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					ishl r1.w, cb5[0].x, l(2)
					mov r3.x, cb4[r1.w + 8].z
					mov r3.y, cb4[r1.w + 9].z
					mov r3.z, cb4[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb7[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.x, cb7[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb7[2].xxyz
					  mad r3.yzw, cb7[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb7[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb7[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb7[6].xyzx
					  mul r3.yzw, r3.xxyz, cb7[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb7[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
					div r3.yz, v4.xxyx, v4.wwww
					sample r4.xyzw, r3.yzyy, t2.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.x, r1.w, r3.x
					movc r1.w, r2.w, r3.x, r1.w
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb6[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb6[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb6[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb6[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb6[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb6[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb6[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb6[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb6[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb6[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb6[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb6[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t4.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb6[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb6[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb6[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb6[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[5].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s4
					mad r1.w, cb1[7].x, r3.x, cb1[7].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s3
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s3
					sample r5.xyzw, r5.zwzz, t1.xyzw, s3
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s3
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s3
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.x, cb6[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb6[2].xxyz
					  mad r3.yzw, cb6[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb6[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb6[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb6[6].xyzx
					  mul r3.yzw, r3.xxyz, cb6[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
					div r3.yz, v5.xxyx, v5.wwww
					sample r4.xyzw, r3.yzyy, t2.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.x, r1.w, r3.x
					movc r1.w, r2.w, r3.x, r1.w
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb5[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb5[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb5[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb5[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb5[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb5[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t4.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb5[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[66], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[8], immediateIndexed
					dcl_constantbuffer CB7[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb5[0].x
					add r0.xyz, -v2.xyzx, cb4[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r1.w, v3.w, l(0.000000)
					mul r2.x, r1.w, l(0.500000)
					mad r2.y, -r1.w, l(0.500000), v3.y
					mad r2.y, -r2.y, cb1[4].x, r2.x
					mov r2.x, v3.x
					div r2.xy, r2.xyxx, r1.wwww
					div r2.zw, v3.xxxy, r1.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s4
					mad r1.w, cb1[6].x, r3.x, cb1[6].y
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mul r3.y, r1.w, cb0[4].x
					sample r4.xyzw, r2.xyxx, t1.xyzw, s3
					mad r5.xyzw, r3.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xyxy
					sample r6.xyzw, r5.xyxx, t1.xyzw, s3
					sample r5.xyzw, r5.zwzz, t1.xyzw, s3
					mad r2.zw, r3.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r2.xxxy
					sample r7.xyzw, r2.zwzz, t1.xyzw, s3
					mov r3.x, l(0)
					mad r2.xy, r3.xyxx, r3.yyyy, r2.xyxx
					sample r2.xyzw, r2.xyxx, t1.xyzw, s3
					add r3.xyz, r5.xyzx, r7.xyzx
					add r2.xyz, r2.xyzx, r3.xyzx
					add r2.xyz, r6.xyzx, r2.xyzx
					add r2.xyz, r4.xyzx, r2.xyzx
					ishl r1.w, cb5[0].x, l(2)
					mov r3.x, cb4[r1.w + 8].z
					mov r3.y, cb4[r1.w + 9].z
					mov r3.z, cb4[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb7[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.x, cb7[0].y, l(1.000000)
					  mul r3.yzw, v2.yyyy, cb7[2].xxyz
					  mad r3.yzw, cb7[1].xxyz, v2.xxxx, r3.yyzw
					  mad r3.yzw, cb7[3].xxyz, v2.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb7[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb7[6].xyzx
					  mul r3.yzw, r3.xxyz, cb7[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb7[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
					div r3.yz, v5.xxyx, v5.wwww
					sample r4.xyzw, r3.yzyy, t2.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.x, r1.w, r3.x
					movc r1.w, r2.w, r3.x, r1.w
					dp3 r2.w, -r1.xyzx, v1.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb6[2].w
					if_nz r1.w
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  rsq r1.w, r1.w
					  mul r5.xyz, r1.wwww, r3.xyzx
					  add r6.xyz, -v2.xyzx, cb6[0].xyzx
					  div r6.xyz, r6.xyzx, r5.xyzx
					  add r7.xyz, -v2.xyzx, cb6[1].xyzx
					  div r7.xyz, r7.xyzx, r5.xyzx
					  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
					  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
					  min r1.w, r6.y, r6.x
					  min r1.w, r6.z, r1.w
					  add r6.xyz, v2.xyzx, -cb6[2].xyzx
					  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
					else 
					  mov r5.xyz, r3.xyzx
					endif 
					sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r5.w, l(-1.000000)
					mad r1.w, cb6[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb6[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb6[3].x
					mul r6.xyz, r5.xyzx, r1.wwww
					lt r2.w, cb6[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb6[6].w
					  if_nz r2.w
					    dp3 r2.w, r3.xyzx, r3.xyzx
					    rsq r2.w, r2.w
					    mul r7.xyz, r2.wwww, r3.xyzx
					    add r8.xyz, -v2.xyzx, cb6[4].xyzx
					    div r8.xyz, r8.xyzx, r7.xyzx
					    add r9.xyz, -v2.xyzx, cb6[5].xyzx
					    div r9.xyz, r9.xyzx, r7.xyzx
					    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					    min r2.w, r8.y, r8.x
					    min r2.w, r8.z, r2.w
					    add r8.xyz, v2.xyzx, -cb6[6].xyzx
					    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
					  endif 
					  sample_l r3.xyzw, r3.xyzx, t4.xyzw, s0, l(6.000000)
					  add r2.w, r3.w, l(-1.000000)
					  mad r2.w, cb6[7].w, r2.w, l(1.000000)
					  log r2.w, r2.w
					  mul r2.w, r2.w, cb6[7].y
					  exp r2.w, r2.w
					  mul r2.w, r2.w, cb6[7].x
					  mul r3.xyz, r3.xyzx, r2.wwww
					  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
					  mad r6.xyz, cb6[1].wwww, r5.xyzx, r3.xyzx
					endif 
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r1.xyz, r4.xyzx, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r0.y, r0.x, r0.x
					mul r0.y, r0.y, r0.y
					mul r0.x, r0.x, r0.y
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r0.y, -|r0.w|, l(1.000000)
					mul r0.z, r0.y, r0.y
					mul r0.z, r0.z, r0.z
					mul r0.y, r0.y, r0.z
					mad r0.y, r0.y, l(0.000000), l(0.040000)
					mul r0.yzw, r0.yyyy, r3.xxyz
					mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mad o0.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			Tags { "IsEmissive" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend One One, One One
			ZWrite Off
			Cull Front
			GpuProgramID 110712
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, v2.yyyy, cb0[5].xyzx
					mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
					mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r3.xyzw, r2.wwww, t0.xyzw, s1
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r3.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v2.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, v2.yyyy, cb0[5].xyzx
					mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
					mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[7].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r3.xyzw, r2.wwww, t0.xyzw, s1
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r3.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r2.xyz, v2.yyyy, cb3[2].xyzx
					  mad r2.xyz, cb3[1].xyzx, v2.xxxx, r2.xyzx
					  mad r2.xyz, cb3[3].xyzx, v2.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb3[4].xyzx
					  movc r2.xyz, r1.wwww, r2.xyzx, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb3[6].xyzx
					  mul r2.yzw, r2.xxyz, cb3[5].xxyz
					  mad r1.w, r2.y, l(0.250000), l(0.750000)
					  mad r2.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r2.y
					  sample r2.xyzw, r2.xzwx, t0.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r2.xyzw, cb2[46].xyzw
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r2.xyz, v2.yyyy, cb4[2].xyzx
					  mad r2.xyz, cb4[1].xyzx, v2.xxxx, r2.xyzx
					  mad r2.xyz, cb4[3].xyzx, v2.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb4[4].xyzx
					  movc r2.xyz, r1.wwww, r2.xyzx, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb4[6].xyzx
					  mul r2.yzw, r2.xxyz, cb4[5].xxyz
					  mad r1.w, r2.y, l(0.250000), l(0.750000)
					  mad r2.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r2.y
					  sample r2.xyzw, r2.xzwx, t0.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r2.xyzw, cb1[46].xyzw
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyzw, v2.yyyy, cb0[5].xyzw
					mad r3.xyzw, cb0[4].xyzw, v2.xxxx, r3.xyzw
					mad r3.xyzw, cb0[6].xyzw, v2.zzzz, r3.xyzw
					add r3.xyzw, r3.xyzw, cb0[7].xyzw
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					lt r2.w, l(0.000000), r3.z
					and r2.w, r2.w, l(0x3f800000)
					div r4.xy, r3.xyxx, r3.wwww
					add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r4.xyzw, r4.xyxx, t0.xyzw, s1
					mul r2.w, r2.w, r4.w
					dp3 r3.x, r3.xyzx, r3.xyzx
					sample r3.xyzw, r3.xxxx, t1.xyzw, s2
					mul r2.w, r2.w, r3.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r3.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v2.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyzw, v2.yyyy, cb0[5].xyzw
					mad r3.xyzw, cb0[4].xyzw, v2.xxxx, r3.xyzw
					mad r3.xyzw, cb0[6].xyzw, v2.zzzz, r3.xyzw
					add r3.xyzw, r3.xyzw, cb0[7].xyzw
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r3.z
					and r2.w, r2.w, l(0x3f800000)
					div r4.xy, r3.xyxx, r3.wwww
					add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r4.xyzw, r4.xyxx, t0.xyzw, s1
					mul r2.w, r2.w, r4.w
					dp3 r3.x, r3.xyzx, r3.xyzx
					sample r3.xyzw, r3.xxxx, t1.xyzw, s2
					mul r2.w, r2.w, r3.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r3.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, v2.yyyy, cb0[5].xyzx
					mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
					mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r4.xyzw, r2.wwww, t0.xyzw, s2
					sample r3.xyzw, r3.xyzx, t1.xyzw, s1
					mul r2.w, r3.w, r4.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r3.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v2.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, v2.yyyy, cb0[5].xyzx
					mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
					mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[7].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v2.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v2.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r4.xyzw, r2.wwww, t0.xyzw, s2
					sample r3.xyzw, r3.xyzx, t1.xyzw, s1
					mul r2.w, r3.w, r4.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r3.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xy, v2.yyyy, cb0[5].xyxx
					mad r2.xy, cb0[4].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[6].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[7].xyxx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.z
					  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
					sample r2.xyzw, r2.xyxx, t0.xyzw, s1
					mul r1.w, r1.w, r2.w
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xy, v2.yyyy, cb0[5].xyxx
					mad r2.xy, cb0[4].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[6].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[7].xyxx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb4[2].xyzx
					  mad r3.xyz, cb4[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb4[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb4[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb4[6].xyzx
					  mul r3.yzw, r3.xxyz, cb4[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.z, cb4[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.z
					  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r2.xyzw, r2.xyxx, t0.xyzw, s1
					mul r1.w, r1.w, r2.w
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyzw, v2.yyyy, cb0[5].xyzw
					mad r4.xyzw, cb0[4].xyzw, v2.xxxx, r4.xyzw
					mad r4.xyzw, cb0[6].xyzw, v2.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[7].xyzw
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v2.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v2.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v2.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r2.z, r5.xyxx, t3.xxxx, s1, r5.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r4.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r4.xxyx, r4.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r5.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r5.w
					dp3 r2.y, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r4.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v2.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyzw, v2.yyyy, cb0[5].xyzw
					mad r4.xyzw, cb0[4].xyzw, v2.xxxx, r4.xyzw
					mad r4.xyzw, cb0[6].xyzw, v2.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[7].xyzw
					ishl r1.w, cb4[0].x, l(2)
					mov r5.x, cb3[r1.w + 8].z
					mov r5.y, cb3[r1.w + 9].z
					mov r5.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb1[46].xyzw
					mul r5.xyzw, v2.yyyy, cb2[9].xyzw
					mad r5.xyzw, cb2[8].xyzw, v2.xxxx, r5.xyzw
					mad r5.xyzw, cb2[10].xyzw, v2.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb2[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r2.z, r5.xyxx, t3.xxxx, s1, r5.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r4.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r4.xxyx, r4.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r5.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r5.w
					dp3 r2.y, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r4.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyzw, v2.yyyy, cb0[10].xyzw
					mad r4.xyzw, cb0[9].xyzw, v2.xxxx, r4.xyzw
					mad r4.xyzw, cb0[11].xyzw, v2.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[12].xyzw
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  mul r5.xyzw, v2.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v2.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v2.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r2.zw, r5.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r2.zw, r2.zzzw
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r2.zwzz
					  add r6.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r7.xw, r6.xxxz, r6.xxxz
					  mad r6.xz, r7.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r5.xxyx
					  add r8.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r8.zw, r5.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r8.xy, -r8.zwzz, r8.zwzz, r8.xyxx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r6.ywyy
					  mov r9.x, r6.x
					  mov r9.y, r8.x
					  mov r9.z, r5.x
					  mov r9.w, r7.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r7.x, r6.z
					  mov r7.y, r8.y
					  mov r7.z, r5.y
					  mul r6.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r7.xyzw, r9.ywyw, r9.xzxz
					  add r8.xyzw, r6.yyww, r6.xxzz
					  div r5.xy, r9.ywyy, r7.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.xy, r6.ywyy, r8.ywyy
					  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r9.xy, r5.xyxx, cb0[8].xxxx
					  mul r9.zw, r6.xxxy, cb0[8].yyyy
					  mul r6.xyzw, r7.xyzw, r8.xyzw
					  mad r7.xyzw, r2.zwzw, cb0[8].xyxy, r9.xzyz
					  sample_c_lz r3.w, r7.xyxx, t3.xxxx, s1, r5.z
					  sample_c_lz r5.x, r7.zwzz, t3.xxxx, s1, r5.z
					  mul r5.x, r5.x, r6.y
					  mad r3.w, r6.x, r3.w, r5.x
					  mad r7.xyzw, r2.zwzw, cb0[8].xyxy, r9.xwyw
					  sample_c_lz r2.z, r7.xyxx, t3.xxxx, s1, r5.z
					  mad r2.z, r6.z, r2.z, r3.w
					  sample_c_lz r2.w, r7.zwzz, t3.xxxx, s1, r5.z
					  mad r2.z, r6.w, r2.w, r2.z
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r4.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r4.xxyx, r4.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r5.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r5.w
					dp3 r2.y, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r4.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v2.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyzw, v2.yyyy, cb0[10].xyzw
					mad r4.xyzw, cb0[9].xyzw, v2.xxxx, r4.xyzw
					mad r4.xyzw, cb0[11].xyzw, v2.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[12].xyzw
					ishl r1.w, cb4[0].x, l(2)
					mov r5.x, cb3[r1.w + 8].z
					mov r5.y, cb3[r1.w + 9].z
					mov r5.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  mul r5.xyzw, v2.yyyy, cb2[9].xyzw
					  mad r5.xyzw, cb2[8].xyzw, v2.xxxx, r5.xyzw
					  mad r5.xyzw, cb2[10].xyzw, v2.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb2[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r2.zw, r5.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r2.zw, r2.zzzw
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r2.zwzz
					  add r6.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r7.xw, r6.xxxz, r6.xxxz
					  mad r6.xz, r7.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r5.xxyx
					  add r8.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r8.zw, r5.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r8.xy, -r8.zwzz, r8.zwzz, r8.xyxx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r6.ywyy
					  mov r9.x, r6.x
					  mov r9.y, r8.x
					  mov r9.z, r5.x
					  mov r9.w, r7.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r7.x, r6.z
					  mov r7.y, r8.y
					  mov r7.z, r5.y
					  mul r6.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r7.xyzw, r9.ywyw, r9.xzxz
					  add r8.xyzw, r6.yyww, r6.xxzz
					  div r5.xy, r9.ywyy, r7.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.xy, r6.ywyy, r8.ywyy
					  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r9.xy, r5.xyxx, cb0[8].xxxx
					  mul r9.zw, r6.xxxy, cb0[8].yyyy
					  mul r6.xyzw, r7.xyzw, r8.xyzw
					  mad r7.xyzw, r2.zwzw, cb0[8].xyxy, r9.xzyz
					  sample_c_lz r3.w, r7.xyxx, t3.xxxx, s1, r5.z
					  sample_c_lz r5.x, r7.zwzz, t3.xxxx, s1, r5.z
					  mul r5.x, r5.x, r6.y
					  mad r3.w, r6.x, r3.w, r5.x
					  mad r7.xyzw, r2.zwzw, cb0[8].xyxy, r9.xwyw
					  sample_c_lz r2.z, r7.xyxx, t3.xxxx, s1, r5.z
					  mad r2.z, r6.z, r2.z, r3.w
					  sample_c_lz r2.w, r7.zwzz, t3.xxxx, s1, r5.z
					  mad r2.z, r6.w, r2.w, r2.z
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r4.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r4.xxyx, r4.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r5.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r5.w
					dp3 r2.y, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r4.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r2.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r3.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r3.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.z, r2.y
					  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r3.xyzw, cb2[46].xyzw
					div r2.zw, v3.xxxy, v3.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s1
					add_sat r1.w, r1.w, r3.x
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.x, cb4[0].x
					add r0.xyz, -v2.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r2.x, cb3[r1.w + 8].z
					mov r2.y, cb3[r1.w + 9].z
					mov r2.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r2.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r3.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r3.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.z, r2.y
					  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r3.xyzw, cb1[46].xyzw
					div r2.zw, v3.xxxy, v3.wwww
					sample r3.xyzw, r2.zwzz, t0.xyzw, s1
					add_sat r1.w, r1.w, r3.x
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xy, v2.yyyy, cb0[5].xyxx
					mad r2.xy, cb0[4].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[6].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[7].xyxx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.z, r3.xyzx, r3.xyzx
					sqrt r2.z, r2.z
					add r2.z, -r1.w, r2.z
					mad r1.w, cb3[25].w, r2.z, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.z, cb5[0].x, l(1.000000)
					if_nz r2.z
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t2.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
					div r3.xy, v3.xyxx, v3.wwww
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					add_sat r1.w, r1.w, r3.x
					min r2.w, r1.w, r2.w
					movc r1.w, r2.z, r2.w, r1.w
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.w
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.x, cb4[0].x
					add r0.xyz, -v2.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xy, v2.yyyy, cb0[5].xyxx
					mad r2.xy, cb0[4].xyxx, v2.xxxx, r2.xyxx
					mad r2.xy, cb0[6].xyxx, v2.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[7].xyxx
					ishl r1.w, cb4[0].x, l(2)
					mov r3.x, cb3[r1.w + 8].z
					mov r3.y, cb3[r1.w + 9].z
					mov r3.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.z, r3.xyzx, r3.xyzx
					sqrt r2.z, r2.z
					add r2.z, -r1.w, r2.z
					mad r1.w, cb2[25].w, r2.z, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.z, cb5[0].x, l(1.000000)
					if_nz r2.z
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v2.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r2.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.w, r3.y
					  sample r3.xyzw, r3.xzwx, t2.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
					div r3.xy, v3.xyxx, v3.wwww
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					add_sat r1.w, r1.w, r3.x
					min r2.w, r1.w, r2.w
					movc r1.w, r2.z, r2.w, r1.w
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.w
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r1.xyzx
					dp3_sat r1.x, r3.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.x
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.x, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v2.xyzx, -cb2[1].xyzx
					max r2.z, |r5.y|, |r5.x|
					max r2.z, |r5.z|, r2.z
					add r2.z, r2.z, -cb2[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb2[2].w
					div r2.z, cb2[2].y, r2.z
					add r2.z, r2.z, -cb2[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r5.xyzx, t2.xxxx, s1, r2.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v2.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r5.x, cb3[r1.w + 8].z
					mov r5.y, cb3[r1.w + 9].z
					mov r5.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb1[46].xyzw
					add r5.xyz, v2.xyzx, -cb1[1].xyzx
					max r2.z, |r5.y|, |r5.x|
					max r2.z, |r5.z|, r2.z
					add r2.z, r2.z, -cb1[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb1[2].w
					div r2.z, cb1[2].y, r2.z
					add r2.z, r2.z, -cb1[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r5.xyzx, t2.xxxx, s1, r2.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r5.xyz, v2.xyzx, -cb2[1].xyzx
					  max r2.z, |r5.y|, |r5.x|
					  max r2.z, |r5.z|, r2.z
					  add r2.z, r2.z, -cb2[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb2[2].w
					  div r2.z, cb2[2].y, r2.z
					  add r2.z, r2.z, -cb2[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t2.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t2.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t2.xxxx, s1, r2.z
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t2.xxxx, s1, r2.z
					  dp4 r2.z, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v2.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r5.x, cb3[r1.w + 8].z
					mov r5.y, cb3[r1.w + 9].z
					mov r5.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t1.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r5.xyz, v2.xyzx, -cb1[1].xyzx
					  max r2.z, |r5.y|, |r5.x|
					  max r2.z, |r5.z|, r2.z
					  add r2.z, r2.z, -cb1[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb1[2].w
					  div r2.z, cb1[2].y, r2.z
					  add r2.z, r2.z, -cb1[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t2.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t2.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t2.xxxx, s1, r2.z
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t2.xxxx, s1, r2.z
					  dp4 r2.z, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v2.xyzx, -cb2[1].xyzx
					max r2.z, |r5.y|, |r5.x|
					max r2.z, |r5.z|, r2.z
					add r2.z, r2.z, -cb2[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb2[2].w
					div r2.z, cb2[2].y, r2.z
					add r2.z, r2.z, -cb2[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r5.xyzx, t3.xxxx, s1, r2.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r4.xyzw, r4.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r4.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v2.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r5.x, cb3[r1.w + 8].z
					mov r5.y, cb3[r1.w + 9].z
					mov r5.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb1[46].xyzw
					add r5.xyz, v2.xyzx, -cb1[1].xyzx
					max r2.z, |r5.y|, |r5.x|
					max r2.z, |r5.z|, r2.z
					add r2.z, r2.z, -cb1[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb1[2].w
					div r2.z, cb1[2].y, r2.z
					add r2.z, r2.z, -cb1[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r5.xyzx, t3.xxxx, s1, r2.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r4.xyzw, r4.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r4.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r5.xyz, v2.xyzx, -cb2[1].xyzx
					  max r2.z, |r5.y|, |r5.x|
					  max r2.z, |r5.z|, r2.z
					  add r2.z, r2.z, -cb2[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb2[2].w
					  div r2.z, cb2[2].y, r2.z
					  add r2.z, r2.z, -cb2[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r2.z
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r2.z
					  dp4 r2.z, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r4.xyzw, r4.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r4.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v2.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v2.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, v2.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r5.x, cb3[r1.w + 8].z
					mov r5.y, cb3[r1.w + 9].z
					mov r5.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r5.xyzx
					add r2.xyz, v2.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r5.xyz, v2.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v2.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v2.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r5.xxyz, v2.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r5.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r5.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.z, r2.y
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r5.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r5.xyz, v2.xyzx, -cb1[1].xyzx
					  max r2.z, |r5.y|, |r5.x|
					  max r2.z, |r5.z|, r2.z
					  add r2.z, r2.z, -cb1[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb1[2].w
					  div r2.z, cb1[2].y, r2.z
					  add r2.z, r2.z, -cb1[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r2.z
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r2.z
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r2.z
					  dp4 r2.z, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r4.xyzx, r4.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r4.xyzw, r4.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r4.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r3.xyzx
					dp3_sat r1.w, r4.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					add r0.y, |r0.w|, r1.w
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r0.y, r0.y, l(1.000000)
					mul r0.y, r1.w, r0.y
					mul r0.yzw, r2.xxyz, r0.yyyy
					add r0.x, -r0.x, l(1.000000)
					mul r1.x, r0.x, r0.x
					mul r1.x, r1.x, r1.x
					mul r0.x, r0.x, r1.x
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			Tags { "IsEmissive" = "true" "LIGHTMODE" = "DEFERRED" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" }
			Cull Front
			GpuProgramID 145991
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r2.zzzz, r2.xwxx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r2.zzzz, r2.xwxx
					mov r1.w, cb4[0].x
					mul r2.xy, r0.wwww, cb3[r1.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r2.xyxx
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r2.zzzz, r2.xwxx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r2.zzzz, r2.xwxx
					mov r1.w, cb4[0].x
					mul r2.xy, r0.wwww, cb3[r1.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r2.xyxx
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0.040000,0.040000,0.040000,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov r0.x, v3.x
					add r0.z, v3.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v3.y
					mad r0.y, -r1.x, cb1[5].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v3.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[7].x, r1.x, cb1[7].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0.040000,0.040000,0.040000,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov r0.x, v3.x
					add r0.z, v3.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v3.y
					mad r0.y, -r1.x, cb1[4].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v3.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[6].x, r1.x, cb1[6].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0.040000,0.040000,0.040000,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov r0.x, v3.x
					add r0.z, v3.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v3.y
					mad r0.y, -r1.x, cb1[5].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v3.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[7].x, r1.x, cb1[7].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0.040000,0.040000,0.040000,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov r0.x, v3.x
					add r0.z, v3.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v3.y
					mad r0.y, -r1.x, cb1[4].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v3.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[6].x, r1.x, cb1[6].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0.040000,0.040000,0.040000,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov r0.x, v3.x
					add r0.z, v3.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v3.y
					mad r0.y, -r1.x, cb1[5].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v3.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[7].x, r1.x, cb1[7].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul o3.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					// TEXCOORD                 4   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0.040000,0.040000,0.040000,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov r0.x, v3.x
					add r0.z, v3.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v3.y
					mad r0.y, -r1.x, cb1[4].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v3.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[6].x, r1.x, cb1[6].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul o3.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "SHADOWCASTER"
			Tags { "IsEmissive" = "true" "LIGHTMODE" = "SHADOWCASTER" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Cull Front
			GpuProgramID 230500
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xyz         1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xyz         1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xyz         1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xyz         1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			Tags { "IsEmissive" = "true" "LIGHTMODE" = "META" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 309189
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					mul r1.xyz, v0.yyyy, cb1[1].xyzx
					mad r1.xyz, cb1[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].xyzx, v0.zzzz, r1.xyzx
					mad o1.xyz, cb1[3].xyzx, v0.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o2.zw, r0.zzzw
					add o2.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyzw
					dcl_temps 3
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
					movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
					movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mul r1.xyz, v0.yyyy, cb1[1].xyzx
					mad r1.xyz, cb1[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].xyzx, v0.zzzz, r1.xyzx
					mad o1.xyz, cb1[3].xyzx, v0.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o2.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o2.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyzw        2     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xyw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, v2.x
					add r0.z, v2.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v2.y
					mad r0.y, -r1.x, cb1[5].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v2.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[7].x, r1.x, cb1[7].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.061061, 0.061061, 0.061061, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mul r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.xyz, r0.xyzx, r1.xyzx
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[4].w
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					min r1.xyz, cb0[4].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r1.w, l(1.000000)
					movc r1.xyzw, cb2[1].xxxx, r1.xyzw, l(0,0,0,0)
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb2[1].yyyy, r0.xyzw, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyzw        2     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xyw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, v2.x
					add r0.z, v2.w, l(0.000000)
					mul r0.w, r0.z, l(0.500000)
					mad r1.x, -r0.z, l(0.500000), v2.y
					mad r0.y, -r1.x, cb1[4].x, r0.w
					div r0.xy, r0.xyxx, r0.zzzz
					div r0.zw, v2.xxxy, r0.zzzz
					sample r1.xyzw, r0.zwzz, t0.xyzw, s1
					mad r0.z, cb1[6].x, r1.x, cb1[6].y
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r1.y, r0.z, cb0[4].x
					mad r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.000000, 1.000000), r0.xxxy
					sample r2.xyzw, r0.zwzz, t1.xyzw, s0
					mad r3.xyzw, r1.yyyy, l(1.000000, 0.000000, -1.000000, 0.000000), r0.xyxy
					sample r4.xyzw, r3.zwzz, t1.xyzw, s0
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r4.xyzx
					mov r1.x, l(0)
					mad r0.zw, r1.xxxy, r1.yyyy, r0.xxxy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r3.xyzx, r0.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.061061, 0.061061, 0.061061, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mul r0.xyz, r0.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.xyz, r0.xyzx, r1.xyzx
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[4].w
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					min r1.xyz, cb0[4].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r1.w, l(1.000000)
					movc r1.xyzw, cb2[1].xxxx, r1.xyzw, l(0,0,0,0)
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb2[1].yyyy, r0.xyzw, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
	CustomEditor "ASEMaterialInspector"
}