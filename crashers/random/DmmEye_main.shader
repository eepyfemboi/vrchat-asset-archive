Shader "Dmm/Eye main" {
	Properties {
		_IrisTex ("Iris Tex", 2D) = "white" {}
		[HDR] _IrisColor ("Iris Color", Vector) = (0.0976743,0.5674417,1,1)
		_IrisScale ("Iris Scale", 2D) = "white" {}
		_IrisDeep ("Iris Deep", Float) = 0.5
		_PupilTex ("Pupil Tex", 2D) = "white" {}
		_PupilColor ("Pupil Color", Vector) = (0,0,0,1)
		_PupilScale ("Pupil Scale", 2D) = "gray" {}
		_PupilSize ("Pupil Size", Range(0, 3)) = 1
		_PupilDeep ("Pupil Deep", Float) = 0.5
		_HighLightTex ("HighLight Tex", 2D) = "white" {}
		_HighLightColor ("HighLight Color", Vector) = (0.5,0.5,0.5,1)
		_HighLightHeight ("HighLight Height", Range(0, 1)) = 0.8
		_HLHei ("HL Hei", Float) = 1
		_HLDeep ("HL Deep", Range(0, 2)) = 0.5
		_WaveTex ("Wave Tex", 2D) = "white" {}
		[HDR] _WaveColor ("Wave Color", Vector) = (0.4896555,0,1,1)
		_WaveDeep ("Wave Deep", Float) = 0.8
		_WaveSpeed ("Wave Speed", Float) = 0.05
		_EyeHeightMap ("Eye Height Map", 2D) = "gray" {}
	}
	SubShader {
		Tags { "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDBASE" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 2024
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TANGENT                  0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyzw, cb0[3].xyzw, v0.wwww, r0.xyzw
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o1.xy, v3.xyxx
					dp3 r0.x, v1.xyzx, cb0[4].xyzx
					dp3 r0.y, v1.xyzx, cb0[5].xyzx
					dp3 r0.z, v1.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, v2.yyyy, cb0[1].xyzx
					mad r1.xyz, cb0[0].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].xyzx, v2.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o4.xyz, r1.xyzx
					mul r2.xyz, r0.zxyz, r1.yzxy
					mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.xyz, r0.xyzx, v2.wwww
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					add r1.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					mov r0.z, cb3[0].x
					add r1.xyz, -v2.xyzx, cb2[r0.z + 64].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					add r1.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					mov r0.z, cb3[0].x
					add r1.xyz, -v2.xyzx, cb2[r0.z + 64].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					add r1.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					mov r0.z, cb3[0].x
					add r1.xyz, -v2.xyzx, cb2[r0.z + 64].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					add r1.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s5
					add r0.x, r0.w, l(-1.000000)
					mul r0.xy, r0.xxxx, cb0[14].yzyy
					mov r0.z, cb3[0].x
					add r1.xyz, -v2.xyzx, cb2[r0.z + 64].xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r1.xyz, r0.zzzz, r1.xyzx
					dp3 r2.x, v4.xyzx, r1.xyzx
					dp3 r2.y, v5.xyzx, r1.xyzx
					mad r0.xyzw, r0.xxyy, r2.yxxy, v1.yxxy
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r0.zzzw, cb0[7].xxxy, cb0[7].zzzw
					sample r1.xyzw, r0.zwzz, t5.xyzw, s3
					mul r1.xyz, r1.xyzx, cb0[5].xyzx
					max r0.z, |r0.y|, |r0.x|
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					min r0.w, |r0.y|, |r0.x|
					mul r0.z, r0.z, r0.w
					mul r0.w, r0.z, r0.z
					mad r1.w, r0.w, l(0.020835), l(-0.085133)
					mad r1.w, r0.w, r1.w, l(0.180141)
					mad r1.w, r0.w, r1.w, l(-0.330299)
					mad r0.w, r0.w, r1.w, l(0.999866)
					mul r1.w, r0.w, r0.z
					mad r1.w, r1.w, l(-2.000000), l(1.570796)
					lt r2.z, |r0.y|, |r0.x|
					and r1.w, r1.w, r2.z
					mad r0.z, r0.z, r0.w, r1.w
					lt r0.w, r0.y, -r0.y
					and r0.w, r0.w, l(0xc0490fdb)
					add r0.z, r0.w, r0.z
					min r0.w, r0.y, r0.x
					lt r0.w, r0.w, -r0.w
					max r1.w, r0.y, r0.x
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					ge r0.y, r1.w, -r1.w
					and r0.y, r0.y, r0.w
					movc r0.y, r0.y, -r0.z, r0.z
					mad r3.y, r0.y, l(0.159155), l(0.500000)
					mul r0.y, cb0[14].x, cb1[0].y
					mad r3.x, r0.x, l(0.600000), r0.y
					mad r0.xy, r3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s6
					mul r0.xyz, r0.xyzx, cb0[13].xyzx
					mad r2.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
					sample r3.xyzw, r2.zwzz, t2.xyzw, s2
					mad r4.xyz, cb0[6].xyzx, r3.xyzx, -r0.xyzx
					mad r3.xyz, cb0[6].xyzx, r3.xyzx, -r1.xyzx
					mad r2.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					sample r5.xyzw, r2.zwzz, t3.xyzw, s1
					add r0.w, r5.z, l(-0.500000)
					mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.w, r0.w, cb0[14].w
					mad r2.zw, r0.wwww, r2.xxxy, v1.xxxy
					add r0.w, cb0[10].x, l(1.000000)
					add r0.w, r0.w, cb0[10].x
					mad r2.zw, r2.zzzw, r0.wwww, -cb0[10].xxxx
					mad r2.zw, r2.zzzw, cb0[2].xxxy, cb0[2].zzzw
					sample r6.xyzw, r2.zwzz, t4.xyzw, s0
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					mad r1.xyz, r6.xyzx, r3.xyzx, r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					add r0.w, cb0[15].x, l(-0.500000)
					mul r0.w, r0.w, cb0[10].z
					mad r1.xy, r0.wwww, r2.xyxx, v1.xyxx
					mov r2.x, l(1.000000)
					div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].y
					mul r1.xy, r1.xyxx, r2.xyxx
					mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
					sample r1.xyzw, r1.xyxx, t6.xyzw, s4
					mul r1.xyz, r5.xyzx, r1.xyzx
					mad o0.xyz, r1.xyzx, cb0[9].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
	CustomEditor "ShaderForgeMaterialInspector"
}