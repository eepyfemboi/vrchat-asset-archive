Shader "All4thlulz/StarNest (Screen space)" {
	Properties {
		_Iterations ("Iterations", Range(1, 20)) = 15
		_Volsteps ("Volumetric Steps", Range(1, 20)) = 17
		[HideInInspector] _UVOffset ("UV Offset", Range(0, 1)) = 0.5
		_Zoom ("Zoom", Float) = 800
		_StarNestMainColor ("Main StarNest Color", Vector) = (1,1,1,1)
		[Toggle(CLAMPOUT)] _CLAMPOUT ("Clamp Output with Main Color ----->", Float) = 0
		_Scroll ("Scrolling direction (x,y,z) * w * time", Vector) = (3,1,0.6,0.1)
		[HideInInspector] _Center ("Center Position (x, y, z, time)", Vector) = (0,0,0.5,0)
		[Toggle(Enable3DRotation)] _3DRotation ("Enable 3D Rotation ----->", Float) = 0
		_Rotation ("Rotation (x,y,z)*w angles", Vector) = (0,0,0,0.1)
		_Formuparam ("Formuparam", Range(0, 800)) = 575
		_StepSize ("Step Size", Range(0, 1000)) = 228
		_Tile ("Tile", Range(0, 1000)) = 500
		_Brightness ("Brightness", Range(-50, 50)) = 2
		_Darkmatter ("Dark Matter", Range(0, 500)) = 25
		_DarkmatterContrastMultiplier ("Dark Matter Contrast Multiplier", Range(1, 20)) = 1
		_Distfading ("Distance Fading", Range(-100, 100)) = 68
		_Saturation ("Saturation", Range(-300, 300)) = 85
	}
	SubShader {
		Tags { "QUEUE" = "Geometry" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Cull Off
			GpuProgramID 54458
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o4.zw, r1.zzzw
					add o4.xy, r0.zzzz, r0.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o4.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o4.zw, r1.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o4.zw, r1.zzzw
					add o4.xy, r0.zzzz, r0.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o4.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o4.zw, r1.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o4.zw, r1.zzzw
					add o4.xy, r0.zzzz, r0.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o4.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o4.zw, r1.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r1.xyz, cb0[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r0.xyzw
					dp4 r2.y, cb0[40].xyzw, r0.xyzw
					dp4 r2.z, cb0[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o4.zw, r0.zzzw
					add o4.xy, r1.zzzz, r1.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb1[42].xyzw, r2.xyzw
					dp4 r1.y, cb1[43].xyzw, r2.xyzw
					dp4 r1.z, cb1[44].xyzw, r2.xyzw
					mad o3.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o4.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o4.zw, r0.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[39].xyzw, r1.xyzw
					dp4 r3.y, cb0[40].xyzw, r1.xyzw
					dp4 r3.z, cb0[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[3].xyzw
					add r0.xyzw, -r0.zzzz, cb0[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[8].xyzx
					mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o4.zw, r1.zzzw
					add o4.xy, r0.zzzz, r0.xwxx
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.xyz, r2.xyzx
					mov o2.xyz, r0.xyzx
					add r3.xyzw, -r0.xxxx, cb1[3].xyzw
					add r4.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb1[8].xyzx
					mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					add o3.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o4.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o4.zw, r1.zzzw
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 5   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v2.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v2.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
			Blend One One, One One
			ZWrite Off
			Cull Off
			GpuProgramID 70051
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "PREPASS"
			Tags { "LIGHTMODE" = "PREPASSBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 167371
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.x + 25].xyzw
					mad r2.xyzw, cb1[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					mad o0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "PREPASS"
			Tags { "LIGHTMODE" = "PREPASSFINAL" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
			ZWrite Off
			Cull Off
			GpuProgramID 224752
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					add o2.xyz, -r0.xyzx, cb0[4].xyzx
					mul r0.x, r1.y, cb0[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o3.zw, r1.zzzw
					add o3.xy, r0.zzzz, r0.xwxx
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mov o1.xyz, r0.xyzx
					mov r0.w, cb4[0].x
					add o2.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					mul r0.x, r1.y, cb0[4].x
					mul r2.w, r0.x, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r2.zzzz, r2.xwxx
					mul r1.xy, r1.wwww, cb3[r0.w + 66].zwzz
					mad o3.xy, r0.xyxx, cb3[r0.w + 66].xyxx, r1.xyxx
					mov o3.zw, r1.zzzw
					mov o4.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add o5.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v2.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v2.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v2.xyzx, v2.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v2.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v2.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			Tags { "LIGHTMODE" = "DEFERRED" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 292602
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[66], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.w + 25].xyzw
					mad r2.xyzw, cb1[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb2[0].x
					add o3.xyz, -r0.xyzx, cb1[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[66], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.w + 25].xyzw
					mad r2.xyzw, cb1[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb2[0].x
					add o3.xyz, -r0.xyzx, cb1[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[66], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.w + 25].xyzw
					mad r2.xyzw, cb1[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb2[0].x
					add o3.xyz, -r0.xyzx, cb1[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[66], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb2[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb1[r0.w + 25].xyzw
					mad r2.xyzw, cb1[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb0[4].xyzx
					dp3 r1.y, v2.xyzx, cb0[5].xyzx
					dp3 r1.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb2[0].x
					add o3.xyz, -r0.xyzx, cb1[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					add o3.xyz, -r0.xyzx, cb0[4].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r0.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r1.xyzw
					dp4 r2.y, cb1[40].xyzw, r1.xyzw
					dp4 r2.z, cb1[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[46], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mov r0.w, cb3[0].x
					add o3.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					mov o4.xyzw, l(0,0,0,0)
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[42].xyzw, r2.xyzw
					dp4 r3.y, cb0[43].xyzw, r2.xyzw
					dp4 r3.z, cb0[44].xyzw, r2.xyzw
					mad r0.xyz, cb0[45].xyzx, r0.xxxx, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r2.x, cb0[39].xyzw, r1.xyzw
					dp4 r2.y, cb0[40].xyzw, r1.xyzw
					dp4 r2.z, cb0[41].xyzw, r1.xyzw
					add r0.xyz, r0.xyzx, r2.xyzx
					max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.y, r0.x, v3.z
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xw, v3.xxxy, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r0.zzzz, r0.xwxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.z, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.y, r0.z
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyz         5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 11
					dp3 r0.x, v3.xyzx, v3.xyzx
					rsq r0.x, r0.x
					mul r0.yzw, r0.xxxx, v3.xxyz
					mul r1.x, cb0[11].z, l(0.001000)
					mad r1.yz, v3.xxyx, r0.xxxx, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r1.yzyy
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.w, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r0.xyz, r0.yzwy, r4.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul o3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mov o0.xyzw, l(0,0,0,1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			Tags { "LIGHTMODE" = "META" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 387543
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
					movc r0.xyz, cb3[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb2[1].xyxx, cb2[1].zwzz
					movc r0.xyz, cb3[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
					movc r0.xyz, cb3[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb2[1].xyxx, cb2[1].zwzz
					movc r0.xyz, cb3[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
					movc r0.xyz, cb3[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb2[1].xyxx, cb2[1].zwzz
					movc r0.xyz, cb3[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
					movc r0.xyz, cb3[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb2[1].xyxx, cb2[1].zwzz
					movc r0.xyz, cb3[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 3
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v1.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb2[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb2[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v1.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb4[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb4[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v1.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb2[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb2[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v1.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb4[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb4[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v1.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb2[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb2[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v1.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.z, r0.w, r0.z
					mul r1.x, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r1.xy, r1.xxxx, r0.xyxx
					add r0.x, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r0.y, r0.x, r3.z
					mad r3.yz, r3.xxyx, r0.xxxx, cb0[8].xxyx
					mad r3.w, cb0[8].z, r0.z, r0.y
					mul r0.xyz, cb0[10].wwww, cb0[10].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r0.xyzx
					sincos r6.xyz, null, -r0.xyzx
					mov r0.x, r5.z
					mov r0.y, r4.z
					dp2 r7.x, r0.xyxx, r1.xyxx
					mov r6.w, r0.x
					dp2 r8.x, r6.zwzz, r1.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r6.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r6.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r0.xyxx, r3.yzyy
					dp2 r0.x, r6.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r0.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r0.xyxx
					dp2 r4.z, r5.zxzz, r0.xyxx
					mov r1.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r1.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb4[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb4[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v1.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb2[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb2[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "Enable3DRotation" "CLAMPOUT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[2], immediateIndexed
					dcl_input_ps linear v1.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					mov r0.x, cb3[0].x
					add r0.xyz, -v1.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r0.z, cb0[11].z, l(0.001000)
					mad r0.xy, r0.xyxx, r0.wwww, -cb0[4].xxxx
					mul r0.xy, r0.zzzz, r0.xyxx
					add r0.w, cb0[8].w, cb1[0].x
					mul r2.xyz, cb0[12].xywx, l(0.001000, 0.010000, 0.010000, 0.000000)
					mul r3.xyz, cb0[7].wwww, cb0[7].xyzx
					mul r1.w, r0.w, r3.z
					mad r3.yz, r3.xxyx, r0.wwww, cb0[8].xxyx
					mad r3.w, cb0[8].z, r1.z, r1.w
					mul r4.xyz, cb0[10].wwww, cb0[10].xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					sqrt r0.w, r0.w
					lt r0.w, l(0.000000), r0.w
					sincos r4.xyz, r5.xyz, r1.xyzx
					sincos r1.xyz, null, -r1.xyzx
					mov r6.x, r5.z
					mov r6.y, r4.z
					dp2 r7.x, r6.xyxx, r0.xyxx
					mov r1.w, r6.x
					dp2 r8.x, r1.zwzz, r0.xyxx
					mov r9.x, r5.y
					mov r9.y, r4.y
					mov r7.y, l(1.000000)
					dp2 r10.x, r9.xyxx, r7.xyxx
					mov r9.z, r1.y
					dp2 r8.y, r9.zxzz, r7.xyxx
					mov r5.y, r4.x
					dp2 r10.y, r5.xyxx, r8.xyxx
					mov r5.z, r1.x
					dp2 r10.z, r5.zxzz, r8.xyxx
					dp2 r3.x, r6.xyxx, r3.yzyy
					dp2 r1.x, r1.zwzz, r3.yzyy
					dp2 r4.x, r9.xyxx, r3.xwxx
					dp2 r1.y, r9.zxzz, r3.xwxx
					dp2 r4.y, r5.xyxx, r1.xyxx
					dp2 r4.z, r5.zxzz, r1.xyxx
					mov r0.z, l(1.000000)
					movc r0.xyz, r0.wwww, r10.xyzx, r0.xyzx
					movc r1.xyz, r0.wwww, r4.xyzx, r3.yzwy
					mul r3.xy, |cb0[11].wwww|, l(0.001000, 0.002000, 0.000000, 0.000000)
					mov r4.xyz, l(0,0,0,0)
					mov r5.x, l(0.100000)
					mov r0.w, l(1.000000)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[6].x
					  breakc_nz r2.w
					  mul r6.xyz, r0.xyzx, r5.xxxx
					  mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
					  div r6.xyz, |r6.xyzx|, r3.yyyy
					  ge r7.xyz, r6.xyzx, -r6.xyzx
					  frc r6.xyz, r6.xyzx
					  movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
					  mad r6.xyz, -r6.xyzx, r3.yyyy, r3.xxxx
					  mov r7.xyz, |r6.xyzx|
					  mov r2.w, l(0)
					  mov r3.zw, l(0,0,0,0)
					  loop 
					    ige r4.w, r3.w, cb0[6].y
					    breakc_nz r4.w
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    div r8.xyz, |r7.xyzx|, r4.wwww
					    mad r7.xyz, -cb0[11].xxxx, l(0.001000, 0.001000, 0.001000, 0.000000), r8.xyzx
					    dp3 r4.w, r7.xyzx, r7.xyzx
					    sqrt r4.w, r4.w
					    add r5.w, -r2.w, r4.w
					    add r3.z, r3.z, |r5.w|
					    iadd r3.w, r3.w, l(1)
					    mov r2.w, r4.w
					  endloop 
					  mul r2.w, r3.z, r3.z
					  mad r3.w, -r2.w, l(0.001000), r2.y
					  max r3.w, r3.w, l(0.000000)
					  ilt r4.w, l(6), r1.w
					  add r3.w, -r3.w, l(1.000000)
					  mul r3.w, r0.w, r3.w
					  movc r3.w, r4.w, r3.w, r0.w
					  mul r2.w, r2.w, cb0[12].z
					  mul r2.w, r2.w, r3.z
					  add r6.xyz, r3.wwww, r4.xyzx
					  mul r5.y, r5.x, r5.x
					  mul r5.z, r5.y, r5.y
					  mul r5.yzw, r2.wwww, r5.xxyz
					  mul r5.yzw, r2.xxxx, r5.yyzw
					  mad r4.xyz, r5.yzwy, r3.wwww, r6.xyzx
					  mul r0.w, r2.z, r3.w
					  mad r5.x, cb0[11].y, l(0.001000), r5.x
					  iadd r1.w, r1.w, l(1)
					endloop 
					dp3 r0.x, r4.xyzx, r4.xyzx
					sqrt r0.x, r0.x
					mul r0.y, cb0[13].x, l(0.010000)
					add r1.xyz, -r0.xxxx, r4.xyzx
					mad r0.xyz, r0.yyyy, r1.xyzx, r0.xxxx
					mul r1.xyz, cb0[5].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min r0.xyz, r0.xyzx, cb0[5].xyzx
					mul r1.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
					min r2.xyz, cb0[13].zzzz, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r2.w, l(1.000000)
					movc r2.xyzw, cb4[1].xxxx, r2.xyzw, l(0,0,0,0)
					ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[13].w
					mad r0.xyz, r0.xyzx, l(0.003053, 0.003053, 0.003053, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r0.xyz, r1.xyzx, r0.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov r0.w, l(1.000000)
					movc o0.xyzw, cb4[1].yyyy, r0.xyzw, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}