Shader "Mattatz/TextureAnimation" {
	Properties {
		_MainTex ("Texture", 2D) = "white" {}
		_Color ("Color", Vector) = (1,1,1,1)
		_Cols ("Cols Count", Float) = 5
		_Rows ("Rows Count", Float) = 3
		_Frame ("Per Frame Length", Float) = 0.5
	}
	SubShader {
		LOD 100
		Tags { "RenderType" = "Opaque" }
		Pass {
			LOD 100
			Tags { "RenderType" = "Opaque" }
			GpuProgramID 61312
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output o0.xy
					dcl_output_siv o1.xyzw, position
					dcl_temps 2
					mad o0.xy, v1.xyxx, cb0[2].xyxx, cb0[2].zwzz
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o1.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output o0.xy
					dcl_output_siv o1.xyzw, position
					dcl_temps 3
					mad o0.xy, v1.xyxx, cb0[2].xyxx, cb0[2].zwzz
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					ishl r1.x, cb3[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
					mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o1.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v0.xy
					dcl_output o0.xyzw
					dcl_temps 4
					div r0.x, cb1[0].y, cb0[4].z
					imul null, r0.y, cb0[4].x, cb0[4].y
					itof r0.y, r0.y
					div r0.x, r0.x, r0.y
					ge r0.z, r0.x, -r0.x
					frc r0.x, |r0.x|
					movc r0.x, r0.z, r0.x, -r0.x
					mad r0.z, r0.x, r0.y, l(1.000000)
					div r0.z, r0.z, r0.y
					ge r0.w, r0.z, -r0.z
					frc r0.z, |r0.z|
					movc r0.z, r0.w, r0.z, -r0.z
					mul r0.z, r0.y, r0.z
					round_ni r0.z, r0.z
					utof r1.xy, cb0[4].xyxx
					div r0.w, r0.z, r1.x
					ftoi r0.z, r0.z
					udiv r0.z, null, r0.z, cb0[4].x
					utof r0.z, r0.z
					ge r1.z, r0.w, -r0.w
					frc r0.w, |r0.w|
					movc r0.w, r1.z, r0.w, -r0.w
					mul r0.w, r1.x, r0.w
					div r1.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xxyx
					mul r2.xy, r1.yzyy, v0.xyxx
					mad r3.x, r0.w, r1.y, r2.x
					mad r0.z, r0.z, r1.z, r2.y
					add r3.y, -r0.z, l(1.000000)
					sample r3.xyzw, r3.xyxx, t0.xyzw, s0
					mul r0.z, r0.y, r0.x
					round_ni r0.z, r0.z
					div r0.w, r0.z, r1.x
					ge r1.w, r0.w, -r0.w
					frc r0.w, |r0.w|
					movc r0.w, r1.w, r0.w, -r0.w
					mul r0.w, r1.x, r0.w
					mad r1.x, r0.w, r1.y, r2.x
					ftoi r0.w, r0.z
					mad r0.x, r0.x, r0.y, -r0.z
					udiv r0.y, null, r0.w, cb0[4].x
					utof r0.y, r0.y
					mad r0.y, r0.y, r1.z, r2.y
					add r1.y, -r0.y, l(1.000000)
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r2.xyzw, -r1.xyzw, r3.xyzw
					mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
					mul o0.xyzw, r0.xyzw, cb0[3].xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// TEXCOORD                 0   xy          0     NONE   float   xy  
					// SV_POSITION              0   xyzw        1      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v0.xy
					dcl_output o0.xyzw
					dcl_temps 4
					div r0.x, cb1[0].y, cb0[4].z
					imul null, r0.y, cb0[4].x, cb0[4].y
					itof r0.y, r0.y
					div r0.x, r0.x, r0.y
					ge r0.z, r0.x, -r0.x
					frc r0.x, |r0.x|
					movc r0.x, r0.z, r0.x, -r0.x
					mad r0.z, r0.x, r0.y, l(1.000000)
					div r0.z, r0.z, r0.y
					ge r0.w, r0.z, -r0.z
					frc r0.z, |r0.z|
					movc r0.z, r0.w, r0.z, -r0.z
					mul r0.z, r0.y, r0.z
					round_ni r0.z, r0.z
					utof r1.xy, cb0[4].xyxx
					div r0.w, r0.z, r1.x
					ftoi r0.z, r0.z
					udiv r0.z, null, r0.z, cb0[4].x
					utof r0.z, r0.z
					ge r1.z, r0.w, -r0.w
					frc r0.w, |r0.w|
					movc r0.w, r1.z, r0.w, -r0.w
					mul r0.w, r1.x, r0.w
					div r1.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xxyx
					mul r2.xy, r1.yzyy, v0.xyxx
					mad r3.x, r0.w, r1.y, r2.x
					mad r0.z, r0.z, r1.z, r2.y
					add r3.y, -r0.z, l(1.000000)
					sample r3.xyzw, r3.xyxx, t0.xyzw, s0
					mul r0.z, r0.y, r0.x
					round_ni r0.z, r0.z
					div r0.w, r0.z, r1.x
					ge r1.w, r0.w, -r0.w
					frc r0.w, |r0.w|
					movc r0.w, r1.w, r0.w, -r0.w
					mul r0.w, r1.x, r0.w
					mad r1.x, r0.w, r1.y, r2.x
					ftoi r0.w, r0.z
					mad r0.x, r0.x, r0.y, -r0.z
					udiv r0.y, null, r0.w, cb0[4].x
					utof r0.y, r0.y
					mad r0.y, r0.y, r1.z, r2.y
					add r1.y, -r0.y, l(1.000000)
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					add r2.xyzw, -r1.xyzw, r3.xyzw
					mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
					mul o0.xyzw, r0.xyzw, cb0[3].xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}