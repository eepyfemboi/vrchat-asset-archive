Shader "Doppels shaders/MetallicFX v5.0" {
	Properties {
		[Header (Settings)] [Space] [Toggle] _us ("Unlit switch", Float) = 0
		[Enum(UnityEngine.Rendering.CullMode)] _Cull ("Cull", Float) = 2
		[Header (Metallic)] [Space] _metp ("Metallic Power", Range(0, 1)) = 0.85
		[HDR] _Mettint ("Metallic tint", Vector) = (1,1,1,1)
		[Toggle] _BlackRim ("Black Rim", Float) = 0
		_Power ("Power", Range(0, 1)) = 0.75
		_Multiplyer ("Multiplyer", Range(0, 3)) = 0.25
		[Header (MatCap)] [Space] [NoScaleOffset] _MatCap ("MatCap", 2D) = "black" {}
		[HDR] _MatCaptint ("MatCap tint", Vector) = (1,1,1,1)
		[Header (Fake Moving Reflections)] [Space] [NoScaleOffset] _MR ("Moving Reflections", 2D) = "black" {}
		[NoScaleOffset] _MRn ("Moving Reflections Normals", 2D) = "bump" {}
		[HDR] _MRt ("Moving Reflections Tint", Vector) = (1,1,1,1)
		_I ("Intensity", Range(0, 1)) = 0.5
		_In ("Intensity Normals Scale", Range(0, 1)) = 0.5
		_Speed ("Speed", Range(0, 1)) = 0.1
		[Header (Reflection Cubemap)] [Space] [NoScaleOffset] _RC ("Reflection Cubemap", Cube) = "black" {}
		[HDR] _Cubemaptint ("Cubemap tint", Vector) = (0,0,0,1)
		_RCn ("Cubemap Normals", 2D) = "bump" {}
		_RCns ("Cubemap Normals Scale", Range(0, 1)) = 0
		[Header (Main Texture and Maps)] [Space] _MainTex ("Main Texture", 2D) = "white" {}
		_Color ("Main tint", Vector) = (0,0,0,0)
		_Metmap ("Metallic Map (RGB)", 2D) = "white" {}
		_BumpMap ("Normal Map", 2D) = "bump" {}
		_BumpScale ("Normals Scale", Range(0, 1)) = 0
		[HideInInspector] _texcoord ("", 2D) = "white" {}
		[HideInInspector] __dirty ("", Float) = 1
	}
	SubShader {
		Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 65115
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_constantbuffer CB3[47], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					eq r0.x, cb5[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb5[0].y, l(1.000000)
					  mul r3.xyz, v3.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v4.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r0.xyz, r0.xxxx, r3.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb5[6].xyzx
					  mul r0.yzw, r0.xxyz, cb5[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t8.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb3[46].xyzw
					eq r0.y, cb0[2].w, l(0.000000)
					dp2 r3.x, cb3[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb3[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb3[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb3[45].xyzx
					mad r0.zw, v1.xxxy, cb0[6].xxxy, cb0[6].zzzw
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					dp3_sat r2.w, r5.xyzx, r6.xyzx
					mad r2.xyz, -r2.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.zxyz, r2.xyzx
					mul r5.xyz, v3.zzzz, cb4[10].xyzx
					mad r5.xyz, cb4[9].xyzx, v2.zzzz, r5.xyzx
					mad r5.xyz, cb4[11].xyzx, v4.zzzz, r5.xyzx
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r2.y, r5.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r2.z, r5.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r4.zw, v1.xxxy, cb0[11].xxxy, cb0[11].zzzw
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					add r3.w, cb0[14].y, cb0[14].y
					mad r3.w, r6.z, r3.w, r5.z
					mul r4.z, cb0[14].z, cb1[0].y
					mul r4.z, r4.z, l(0.050000)
					sincos r6.x, r8.x, r4.z
					mul r6.yzw, r1.yyyy, cb2[15].xxyz
					mad r6.yzw, cb2[14].xxyz, r1.xxxx, r6.yyzw
					mad r6.yzw, cb2[16].xxyz, r1.zzzz, r6.yyzw
					sample r9.xyzw, r3.wwww, t2.xyzw, s6
					mul r9.x, r9.w, r9.x
					mad r4.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r9.xy, r4.zwzz, cb0[14].xxxx
					dp2 r3.w, r9.xyxx, r9.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r9.z, r3.w
					dp3 r3.w, v2.xyzx, r9.xyzx
					dp3 r4.z, v3.xyzx, r9.xyzx
					dp3 r4.w, v4.xyzx, r9.xyzx
					mul r8.yzw, r4.zzzz, cb2[15].xxyz
					mad r8.yzw, cb2[14].xxyz, r3.wwww, r8.yyzw
					mad r8.yzw, cb2[16].xxyz, r4.wwww, r8.yyzw
					dp3 r3.w, r6.yzwy, r8.yzwy
					add r3.w, r3.w, r3.w
					mad r4.zw, r8.yyyz, -r3.wwww, r6.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r9.x, -r6.x
					mov r9.y, r8.x
					mov r9.z, r6.x
					dp2 r6.x, r4.zwzz, r9.yzyy
					dp2 r6.y, r4.zwzz, r9.xyxx
					add r4.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.zw, v1.xxxy, cb0[17].xxxy, cb0[17].zzzw
					mov_sat r2.x, r2.x
					mad r3.w, cb0[18].x, l(-30.000000), l(30.000000)
					log r2.x, r2.x
					mul r2.x, r2.x, r3.w
					exp r2.x, r2.x
					mul r3.w, cb0[18].z, cb0[18].y
					mul r6.xyz, r0.xxxx, cb0[2].xyzx
					movc r6.xyz, r0.yyyy, l(0,0,0,0), r6.xyzx
					add_sat r3.xyz, r3.xyzx, r6.xyzx
					sample r0.xyzw, r0.zwzz, t3.xyzw, s1
					mad r6.xy, cb0[10].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r6.x
					exp r0.w, r0.w
					log r1.w, r1.w
					mul r2.w, r1.w, r6.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r2.y, r0.w
					mul r0.w, r2.z, r0.w
					mul r1.w, r1.w, l(10.000000)
					exp r1.w, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r0.w, r0.w, r1.w
					mul r2.yzw, r0.wwww, cb0[7].xxyz
					mul r2.yzw, r7.xxyz, r2.yyzw
					mad r0.xyz, cb0[5].xyzx, r0.xyzx, r2.yzwy
					mad r2.yz, r4.xxyx, cb0[8].xxxx, r5.xxyx
					sample r6.xyzw, r2.yzyy, t4.xyzw, s4
					mul r2.yzw, r6.xxyz, cb0[12].xxyz
					mul r2.yzw, r7.xxyz, r2.yyzw
					mad r0.xyz, r2.yzwy, l(4.000000, 4.000000, 4.000000, 0.000000), r0.xyzx
					mul r2.yzw, r7.xxyz, cb0[13].xxyz
					mul r2.yzw, r2.yyzw, l(0.000000, 4.000000, 4.000000, 4.000000)
					mad r4.xy, r4.xyxx, cb0[8].xxxx, r4.zwzz
					sample r4.xyzw, r4.xyxx, t5.xyzw, s5
					mad r0.xyz, r2.yzwy, r4.xyzx, r0.xyzx
					sample r4.xyzw, r5.zwzz, t6.xyzw, s8
					mul r4.x, r4.w, r4.x
					mad r2.yz, r4.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r4.xy, r2.yzyy, cb0[16].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r1.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r5.xyzx, -r0.wwww, -r1.xyzx
					sample r1.xyzw, r1.xyzx, t7.xyzw, s7
					mul r1.xyz, r1.xyzx, cb0[15].xyzx
					mad r0.xyz, r1.xyzx, r7.xyzx, r0.xyzx
					mad r0.xyz, -r2.xxxx, r3.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, -r3.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[4].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb4[0].x
					add r1.xyz, -r0.yzwy, cb3[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					eq r0.x, cb5[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb5[0].y, l(1.000000)
					  mul r3.xyz, v3.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v4.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r0.xyz, r0.xxxx, r3.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb5[6].xyzx
					  mul r0.yzw, r0.xxyz, cb5[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t8.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb2[46].xyzw
					eq r0.y, cb0[2].w, l(0.000000)
					dp2 r3.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb2[45].xyzx
					mad r0.zw, v1.xxxy, cb0[6].xxxy, cb0[6].zzzw
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					dp3_sat r2.w, r5.xyzx, r6.xyzx
					mad r2.xyz, -r2.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.zxyz, r2.xyzx
					ishl r2.y, cb4[0].x, l(2)
					mul r5.xyz, v3.zzzz, cb3[r2.y + 9].xyzx
					mad r5.xyz, cb3[r2.y + 8].xyzx, v2.zzzz, r5.xyzx
					mad r5.xyz, cb3[r2.y + 10].xyzx, v4.zzzz, r5.xyzx
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r2.z, r5.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r3.w, r5.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r4.zw, v1.xxxy, cb0[11].xxxy, cb0[11].zzzw
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					add r4.z, cb0[14].y, cb0[14].y
					mad r4.z, r6.z, r4.z, r5.z
					mul r4.w, cb0[14].z, cb1[0].y
					mul r4.w, r4.w, l(0.050000)
					sincos r6.x, r8.x, r4.w
					mul r6.yzw, r1.yyyy, cb3[r2.y + 49].xxyz
					mad r6.yzw, cb3[r2.y + 48].xxyz, r1.xxxx, r6.yyzw
					mad r6.yzw, cb3[r2.y + 50].xxyz, r1.zzzz, r6.yyzw
					sample r9.xyzw, r4.zzzz, t2.xyzw, s6
					mul r9.x, r9.w, r9.x
					mad r4.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r9.xy, r4.zwzz, cb0[14].xxxx
					dp2 r4.z, r9.xyxx, r9.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r9.z, r4.z
					dp3 r4.z, v2.xyzx, r9.xyzx
					dp3 r4.w, v3.xyzx, r9.xyzx
					dp3 r5.z, v4.xyzx, r9.xyzx
					mul r8.yzw, r4.wwww, cb3[r2.y + 49].xxyz
					mad r8.yzw, cb3[r2.y + 48].xxyz, r4.zzzz, r8.yyzw
					mad r8.yzw, cb3[r2.y + 50].xxyz, r5.zzzz, r8.yyzw
					dp3 r2.y, r6.yzwy, r8.yzwy
					add r2.y, r2.y, r2.y
					mad r4.zw, r8.yyyz, -r2.yyyy, r6.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r9.x, -r6.x
					mov r9.y, r8.x
					mov r9.z, r6.x
					dp2 r6.x, r4.zwzz, r9.yzyy
					dp2 r6.y, r4.zwzz, r9.xyxx
					add r4.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.zw, v1.xxxy, cb0[17].xxxy, cb0[17].zzzw
					mov_sat r2.x, r2.x
					mad r2.y, cb0[18].x, l(-30.000000), l(30.000000)
					log r2.x, r2.x
					mul r2.x, r2.x, r2.y
					exp r2.x, r2.x
					mul r2.y, cb0[18].z, cb0[18].y
					mul r6.xyz, r0.xxxx, cb0[2].xyzx
					movc r6.xyz, r0.yyyy, l(0,0,0,0), r6.xyzx
					add_sat r3.xyz, r3.xyzx, r6.xyzx
					sample r0.xyzw, r0.zwzz, t3.xyzw, s1
					mad r6.xy, cb0[10].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r6.x
					exp r0.w, r0.w
					log r1.w, r1.w
					mul r2.w, r1.w, r6.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r2.z, r0.w
					mul r0.w, r3.w, r0.w
					mul r1.w, r1.w, l(10.000000)
					exp r1.w, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r0.w, r0.w, r1.w
					mul r6.xyz, r0.wwww, cb0[7].xyzx
					mul r6.xyz, r7.xyzx, r6.xyzx
					mad r0.xyz, cb0[5].xyzx, r0.xyzx, r6.xyzx
					mad r2.zw, r4.xxxy, cb0[8].xxxx, r5.xxxy
					sample r6.xyzw, r2.zwzz, t4.xyzw, s4
					mul r6.xyz, r6.xyzx, cb0[12].xyzx
					mul r6.xyz, r7.xyzx, r6.xyzx
					mad r0.xyz, r6.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r0.xyzx
					mul r6.xyz, r7.xyzx, cb0[13].xyzx
					mul r6.xyz, r6.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r2.zw, r4.xxxy, cb0[8].xxxx, r4.zzzw
					sample r4.xyzw, r2.zwzz, t5.xyzw, s5
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					sample r4.xyzw, r5.zwzz, t6.xyzw, s8
					mul r4.x, r4.w, r4.x
					mad r2.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r2.zwzz, cb0[16].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r1.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r5.xyzx, -r0.wwww, -r1.xyzx
					sample r1.xyzw, r1.xyzx, t7.xyzw, s7
					mul r1.xyz, r1.xyzx, cb0[15].xyzx
					mad r0.xyz, r1.xyzx, r7.xyzx, r0.xyzx
					mad r0.xyz, -r2.xxxx, r2.yyyy, r0.xyzx
					mul r1.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, -r3.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[4].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_constantbuffer CB3[47], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					eq r0.x, cb5[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb5[0].y, l(1.000000)
					  mul r3.xyz, v3.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v4.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r0.xyz, r0.xxxx, r3.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb5[6].xyzx
					  mul r0.yzw, r0.xxyz, cb5[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t8.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb3[46].xyzw
					eq r0.y, cb0[2].w, l(0.000000)
					dp2 r3.x, cb3[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb3[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb3[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb3[45].xyzx
					mad r0.zw, v1.xxxy, cb0[6].xxxy, cb0[6].zzzw
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					dp3_sat r2.w, r5.xyzx, r6.xyzx
					mad r2.xyz, -r2.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.zxyz, r2.xyzx
					mul r5.xyz, v3.zzzz, cb4[10].xyzx
					mad r5.xyz, cb4[9].xyzx, v2.zzzz, r5.xyzx
					mad r5.xyz, cb4[11].xyzx, v4.zzzz, r5.xyzx
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r2.y, r5.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r2.z, r5.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r4.zw, v1.xxxy, cb0[11].xxxy, cb0[11].zzzw
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					add r3.w, cb0[14].y, cb0[14].y
					mad r3.w, r6.z, r3.w, r5.z
					mul r4.z, cb0[14].z, cb1[0].y
					mul r4.z, r4.z, l(0.050000)
					sincos r6.x, r8.x, r4.z
					mul r6.yzw, r1.yyyy, cb2[15].xxyz
					mad r6.yzw, cb2[14].xxyz, r1.xxxx, r6.yyzw
					mad r6.yzw, cb2[16].xxyz, r1.zzzz, r6.yyzw
					sample r9.xyzw, r3.wwww, t2.xyzw, s6
					mul r9.x, r9.w, r9.x
					mad r4.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r9.xy, r4.zwzz, cb0[14].xxxx
					dp2 r3.w, r9.xyxx, r9.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r9.z, r3.w
					dp3 r3.w, v2.xyzx, r9.xyzx
					dp3 r4.z, v3.xyzx, r9.xyzx
					dp3 r4.w, v4.xyzx, r9.xyzx
					mul r8.yzw, r4.zzzz, cb2[15].xxyz
					mad r8.yzw, cb2[14].xxyz, r3.wwww, r8.yyzw
					mad r8.yzw, cb2[16].xxyz, r4.wwww, r8.yyzw
					dp3 r3.w, r6.yzwy, r8.yzwy
					add r3.w, r3.w, r3.w
					mad r4.zw, r8.yyyz, -r3.wwww, r6.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r9.x, -r6.x
					mov r9.y, r8.x
					mov r9.z, r6.x
					dp2 r6.x, r4.zwzz, r9.yzyy
					dp2 r6.y, r4.zwzz, r9.xyxx
					add r4.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.zw, v1.xxxy, cb0[17].xxxy, cb0[17].zzzw
					mov_sat r2.x, r2.x
					mad r3.w, cb0[18].x, l(-30.000000), l(30.000000)
					log r2.x, r2.x
					mul r2.x, r2.x, r3.w
					exp r2.x, r2.x
					mul r3.w, cb0[18].z, cb0[18].y
					mul r6.xyz, r0.xxxx, cb0[2].xyzx
					movc r6.xyz, r0.yyyy, l(0,0,0,0), r6.xyzx
					add_sat r3.xyz, r3.xyzx, r6.xyzx
					sample r0.xyzw, r0.zwzz, t3.xyzw, s1
					mad r6.xy, cb0[10].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r6.x
					exp r0.w, r0.w
					log r1.w, r1.w
					mul r2.w, r1.w, r6.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r2.y, r0.w
					mul r0.w, r2.z, r0.w
					mul r1.w, r1.w, l(10.000000)
					exp r1.w, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r0.w, r0.w, r1.w
					mul r2.yzw, r0.wwww, cb0[7].xxyz
					mul r2.yzw, r7.xxyz, r2.yyzw
					mad r0.xyz, cb0[5].xyzx, r0.xyzx, r2.yzwy
					mad r2.yz, r4.xxyx, cb0[8].xxxx, r5.xxyx
					sample r6.xyzw, r2.yzyy, t4.xyzw, s4
					mul r2.yzw, r6.xxyz, cb0[12].xxyz
					mul r2.yzw, r7.xxyz, r2.yyzw
					mad r0.xyz, r2.yzwy, l(4.000000, 4.000000, 4.000000, 0.000000), r0.xyzx
					mul r2.yzw, r7.xxyz, cb0[13].xxyz
					mul r2.yzw, r2.yyzw, l(0.000000, 4.000000, 4.000000, 4.000000)
					mad r4.xy, r4.xyxx, cb0[8].xxxx, r4.zwzz
					sample r4.xyzw, r4.xyxx, t5.xyzw, s5
					mad r0.xyz, r2.yzwy, r4.xyzx, r0.xyzx
					sample r4.xyzw, r5.zwzz, t6.xyzw, s8
					mul r4.x, r4.w, r4.x
					mad r2.yz, r4.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r4.xy, r2.yzyy, cb0[16].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r1.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r5.xyzx, -r0.wwww, -r1.xyzx
					sample r1.xyzw, r1.xyzx, t7.xyzw, s7
					mul r1.xyz, r1.xyzx, cb0[15].xyzx
					mad r0.xyz, r1.xyzx, r7.xyzx, r0.xyzx
					mad r0.xyz, -r2.xxxx, r3.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, -r3.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[4].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float       
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.y, v2.w
					mov r0.z, v3.w
					mov r0.w, v4.w
					mov r0.x, cb4[0].x
					add r1.xyz, -r0.yzwy, cb3[r0.x + 64].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					eq r0.x, cb5[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb5[0].y, l(1.000000)
					  mul r3.xyz, v3.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v2.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v4.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r0.xyz, r0.xxxx, r3.xyzx, r0.yzwy
					  add r0.xyz, r0.xyzx, -cb5[6].xyzx
					  mul r0.yzw, r0.xxyz, cb5[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.w
					  sample r0.xyzw, r0.xzwx, t8.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb2[46].xyzw
					eq r0.y, cb0[2].w, l(0.000000)
					dp2 r3.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r3.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r3.xyz, r3.xyzx, -cb2[45].xyzx
					mad r0.zw, v1.xxxy, cb0[6].xxxy, cb0[6].zzzw
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					dp3_sat r2.w, r5.xyzx, r6.xyzx
					mad r2.xyz, -r2.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.zxyz, r2.xyzx
					ishl r2.y, cb4[0].x, l(2)
					mul r5.xyz, v3.zzzz, cb3[r2.y + 9].xyzx
					mad r5.xyz, cb3[r2.y + 8].xyzx, v2.zzzz, r5.xyzx
					mad r5.xyz, cb3[r2.y + 10].xyzx, v4.zzzz, r5.xyzx
					mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r2.z, r5.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r3.w, r5.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r4.zw, v1.xxxy, cb0[11].xxxy, cb0[11].zzzw
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					add r4.z, cb0[14].y, cb0[14].y
					mad r4.z, r6.z, r4.z, r5.z
					mul r4.w, cb0[14].z, cb1[0].y
					mul r4.w, r4.w, l(0.050000)
					sincos r6.x, r8.x, r4.w
					mul r6.yzw, r1.yyyy, cb3[r2.y + 49].xxyz
					mad r6.yzw, cb3[r2.y + 48].xxyz, r1.xxxx, r6.yyzw
					mad r6.yzw, cb3[r2.y + 50].xxyz, r1.zzzz, r6.yyzw
					sample r9.xyzw, r4.zzzz, t2.xyzw, s6
					mul r9.x, r9.w, r9.x
					mad r4.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r9.xy, r4.zwzz, cb0[14].xxxx
					dp2 r4.z, r9.xyxx, r9.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r9.z, r4.z
					dp3 r4.z, v2.xyzx, r9.xyzx
					dp3 r4.w, v3.xyzx, r9.xyzx
					dp3 r5.z, v4.xyzx, r9.xyzx
					mul r8.yzw, r4.wwww, cb3[r2.y + 49].xxyz
					mad r8.yzw, cb3[r2.y + 48].xxyz, r4.zzzz, r8.yyzw
					mad r8.yzw, cb3[r2.y + 50].xxyz, r5.zzzz, r8.yyzw
					dp3 r2.y, r6.yzwy, r8.yzwy
					add r2.y, r2.y, r2.y
					mad r4.zw, r8.yyyz, -r2.yyyy, r6.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r9.x, -r6.x
					mov r9.y, r8.x
					mov r9.z, r6.x
					dp2 r6.x, r4.zwzz, r9.yzyy
					dp2 r6.y, r4.zwzz, r9.xyxx
					add r4.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.zw, v1.xxxy, cb0[17].xxxy, cb0[17].zzzw
					mov_sat r2.x, r2.x
					mad r2.y, cb0[18].x, l(-30.000000), l(30.000000)
					log r2.x, r2.x
					mul r2.x, r2.x, r2.y
					exp r2.x, r2.x
					mul r2.y, cb0[18].z, cb0[18].y
					mul r6.xyz, r0.xxxx, cb0[2].xyzx
					movc r6.xyz, r0.yyyy, l(0,0,0,0), r6.xyzx
					add_sat r3.xyz, r3.xyzx, r6.xyzx
					sample r0.xyzw, r0.zwzz, t3.xyzw, s1
					mad r6.xy, cb0[10].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r6.x
					exp r0.w, r0.w
					log r1.w, r1.w
					mul r2.w, r1.w, r6.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r2.z, r0.w
					mul r0.w, r3.w, r0.w
					mul r1.w, r1.w, l(10.000000)
					exp r1.w, r1.w
					add r1.w, -r1.w, l(1.000000)
					mul r0.w, r0.w, r1.w
					mul r6.xyz, r0.wwww, cb0[7].xyzx
					mul r6.xyz, r7.xyzx, r6.xyzx
					mad r0.xyz, cb0[5].xyzx, r0.xyzx, r6.xyzx
					mad r2.zw, r4.xxxy, cb0[8].xxxx, r5.xxxy
					sample r6.xyzw, r2.zwzz, t4.xyzw, s4
					mul r6.xyz, r6.xyzx, cb0[12].xyzx
					mul r6.xyz, r7.xyzx, r6.xyzx
					mad r0.xyz, r6.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r0.xyzx
					mul r6.xyz, r7.xyzx, cb0[13].xyzx
					mul r6.xyz, r6.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r2.zw, r4.xxxy, cb0[8].xxxx, r4.zzzw
					sample r4.xyzw, r2.zwzz, t5.xyzw, s5
					mad r0.xyz, r6.xyzx, r4.xyzx, r0.xyzx
					sample r4.xyzw, r5.zwzz, t6.xyzw, s8
					mul r4.x, r4.w, r4.x
					mad r2.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r2.zwzz, cb0[16].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r1.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r5.xyzx, -r0.wwww, -r1.xyzx
					sample r1.xyzw, r1.xyzx, t7.xyzw, s7
					mul r1.xyz, r1.xyzx, cb0[15].xyzx
					mad r0.xyz, r1.xyzx, r7.xyzx, r0.xyzx
					mad r0.xyz, -r2.xxxx, r2.yyyy, r0.xyzx
					mul r1.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, -r3.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[4].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" }
			Blend One One, One One
			ZWrite Off
			Cull Off
			GpuProgramID 126652
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[19].xyxx, cb0[19].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[24], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[23].xyxx, cb0[23].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_constantbuffer CB3[47], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xyz, v5.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v5.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t9.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb3[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t0.xyzw, s1
					mul r0.w, r0.w, r2.x
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb3[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb3[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb3[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb3[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					mul r4.xyz, v3.zzzz, cb4[10].xyzx
					mad r4.xyz, cb4[9].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb4[11].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.z, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r1.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t2.xyzw, s4
					add r4.w, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r4.w, r4.z
					mul r4.w, cb0[18].z, cb1[0].y
					mul r4.w, r4.w, l(0.050000)
					sincos r5.x, r7.x, r4.w
					mul r5.yzw, r0.yyyy, cb2[15].xxyz
					mad r5.yzw, cb2[14].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb2[16].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t3.xyzw, s7
					mul r8.x, r8.w, r8.x
					mad r4.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r4.zwzz, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r4.w, v3.xyzx, r8.xyzx
					dp3 r6.w, v4.xyzx, r8.xyzx
					mul r7.yzw, r4.wwww, cb2[15].xxyz
					mad r7.yzw, cb2[14].xxyz, r4.zzzz, r7.yyzw
					mad r7.yzw, cb2[16].xxyz, r6.wwww, r7.yyzw
					dp3 r4.z, r5.yzwy, r7.yzwy
					add r4.z, r4.z, r4.z
					mad r4.zw, r7.yyyz, -r4.zzzz, r5.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r5.x, r4.zwzz, r8.yzyy
					dp2 r5.y, r4.zwzz, r8.xyxx
					add r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.xy, v1.xyxx, cb0[21].xyxx, cb0[21].zwzz
					mov_sat r1.x, r1.x
					mad r5.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r5.z
					exp r1.x, r1.x
					mul r5.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t4.xyzw, s2
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.z, r0.w
					mul r0.w, r1.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r1.yzw, r0.wwww, cb0[11].xxyz
					mul r1.yzw, r6.xxyz, r1.yyzw
					mad r1.yzw, cb0[9].xxyz, r7.xxyz, r1.yyzw
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.xyxx
					sample r7.xyzw, r3.xyxx, t5.xyzw, s5
					mul r7.xyz, r7.xyzx, cb0[16].xyzx
					mul r7.xyz, r6.xyzx, r7.xyzx
					mad r1.yzw, r7.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r1.yyzw
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.zwzz
					sample r3.xyzw, r3.xyxx, t6.xyzw, s6
					mad r1.yzw, r7.xxyz, r3.xxyz, r1.yyzw
					sample r3.xyzw, r5.xyxx, t7.xyzw, s9
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[20].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.w, -r0.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r4.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t8.xyzw, s8
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r1.yzwy
					mad r0.xyz, -r1.xxxx, r5.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xyz, v5.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v5.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t9.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb2[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.wwww, t0.xyzw, s1
					mul r0.w, r0.w, r2.x
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					ishl r1.z, cb4[0].x, l(2)
					mul r4.xyz, v3.zzzz, cb3[r1.z + 9].xyzx
					mad r4.xyz, cb3[r1.z + 8].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb3[r1.z + 10].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.w, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r4.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t2.xyzw, s4
					add r5.x, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r5.x, r4.z
					mul r5.x, cb0[18].z, cb1[0].y
					mul r5.x, r5.x, l(0.050000)
					sincos r5.x, r7.x, r5.x
					mul r5.yzw, r0.yyyy, cb3[r1.z + 49].xxyz
					mad r5.yzw, cb3[r1.z + 48].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb3[r1.z + 50].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t3.xyzw, s7
					mul r8.x, r8.w, r8.x
					mad r7.yz, r8.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r8.xy, r7.yzyy, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r6.w, v3.xyzx, r8.xyzx
					dp3 r7.y, v4.xyzx, r8.xyzx
					mul r8.xyz, r6.wwww, cb3[r1.z + 49].xyzx
					mad r8.xyz, cb3[r1.z + 48].xyzx, r4.zzzz, r8.xyzx
					mad r7.yzw, cb3[r1.z + 50].xxyz, r7.yyyy, r8.xxyz
					dp3 r1.z, r5.yzwy, r7.yzwy
					add r1.z, r1.z, r1.z
					mad r5.yz, r7.yyzy, -r1.zzzz, r5.yyzy
					add r5.yz, -r5.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r7.x, r5.yzyy, r8.yzyy
					dp2 r7.y, r5.yzyy, r8.xyxx
					add r5.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mad r5.zw, v1.xxxy, cb0[21].xxxy, cb0[21].zzzw
					mov_sat r1.x, r1.x
					mad r1.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r1.z
					exp r1.x, r1.x
					mul r1.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t4.xyzw, s2
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.w, r0.w
					mul r0.w, r4.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r8.xyz, r0.wwww, cb0[11].xyzx
					mul r8.xyz, r6.xyzx, r8.xyzx
					mad r7.xyz, cb0[9].xyzx, r7.xyzx, r8.xyzx
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r4.xxxy
					sample r4.xyzw, r1.ywyy, t5.xyzw, s5
					mul r4.xyz, r4.xyzx, cb0[16].xyzx
					mul r4.xyz, r6.xyzx, r4.xyzx
					mad r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r7.xyzx
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r5.xxxy
					sample r3.xyzw, r1.ywyy, t6.xyzw, s6
					mad r3.xyz, r7.xyzx, r3.xyzx, r4.xyzx
					sample r4.xyzw, r5.zwzz, t7.xyzw, s9
					mul r4.x, r4.w, r4.x
					mad r1.yw, r4.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
					mul r4.xy, r1.ywyy, cb0[20].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r0.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r5.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t8.xyzw, s8
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r3.xyzx
					mad r0.xyz, -r1.xxxx, r1.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_constantbuffer CB3[47], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r2.xyz, v5.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v5.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v5.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb3[46].xyzw
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					add r3.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb3[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb3[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb3[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb3[45].xyzx
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad r3.zw, v1.xxxy, cb0[9].xxxy, cb0[9].zzzw
					sample r4.xyzw, r3.zwzz, t0.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[8].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					mul r4.xyz, v3.zzzz, cb4[10].xyzx
					mad r4.xyz, cb4[9].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb4[11].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.z, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r1.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r6.xyzw, r5.xyxx, t1.xyzw, s3
					add r4.w, cb0[14].y, cb0[14].y
					mad r4.z, r5.z, r4.w, r4.z
					mul r4.w, cb0[14].z, cb1[0].y
					mul r4.w, r4.w, l(0.050000)
					sincos r5.x, r7.x, r4.w
					mul r5.yzw, r0.yyyy, cb2[15].xxyz
					mad r5.yzw, cb2[14].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb2[16].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t2.xyzw, s6
					mul r8.x, r8.w, r8.x
					mad r4.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r4.zwzz, cb0[14].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r4.w, v3.xyzx, r8.xyzx
					dp3 r6.w, v4.xyzx, r8.xyzx
					mul r7.yzw, r4.wwww, cb2[15].xxyz
					mad r7.yzw, cb2[14].xxyz, r4.zzzz, r7.yyzw
					mad r7.yzw, cb2[16].xxyz, r6.wwww, r7.yyzw
					dp3 r4.z, r5.yzwy, r7.yzwy
					add r4.z, r4.z, r4.z
					mad r4.zw, r7.yyyz, -r4.zzzz, r5.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r5.x, r4.zwzz, r8.yzyy
					dp2 r5.y, r4.zwzz, r8.xyxx
					add r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.xy, v1.xyxx, cb0[17].xyxx, cb0[17].zwzz
					mov_sat r1.x, r1.x
					mad r5.z, cb0[18].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r5.z
					exp r1.x, r1.x
					mul r5.z, cb0[18].z, cb0[18].y
					mad_sat r2.xyz, r0.wwww, cb0[2].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t3.xyzw, s1
					mad r3.xy, cb0[10].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.z, r0.w
					mul r0.w, r1.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r1.yzw, r0.wwww, cb0[7].xxyz
					mul r1.yzw, r6.xxyz, r1.yyzw
					mad r1.yzw, cb0[5].xxyz, r7.xxyz, r1.yyzw
					mad r3.xy, r3.zwzz, cb0[8].xxxx, r4.xyxx
					sample r7.xyzw, r3.xyxx, t4.xyzw, s4
					mul r7.xyz, r7.xyzx, cb0[12].xyzx
					mul r7.xyz, r6.xyzx, r7.xyzx
					mad r1.yzw, r7.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r1.yyzw
					mul r7.xyz, r6.xyzx, cb0[13].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r3.xy, r3.zwzz, cb0[8].xxxx, r4.zwzz
					sample r3.xyzw, r3.xyxx, t5.xyzw, s5
					mad r1.yzw, r7.xxyz, r3.xxyz, r1.yyzw
					sample r3.xyzw, r5.xyxx, t6.xyzw, s8
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[16].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.w, -r0.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r4.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t7.xyzw, s7
					mul r0.xyz, r0.xyzx, cb0[15].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r1.yzwy
					mad r0.xyz, -r1.xxxx, r5.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[4].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[19], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r2.xyz, v5.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v5.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v5.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb2[46].xyzw
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					add r3.xyz, cb0[2].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad r3.zw, v1.xxxy, cb0[9].xxxy, cb0[9].zzzw
					sample r4.xyzw, r3.zwzz, t0.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[8].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					ishl r1.z, cb4[0].x, l(2)
					mul r4.xyz, v3.zzzz, cb3[r1.z + 9].xyzx
					mad r4.xyz, cb3[r1.z + 8].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb3[r1.z + 10].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.w, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r4.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
					sample r6.xyzw, r5.xyxx, t1.xyzw, s3
					add r5.x, cb0[14].y, cb0[14].y
					mad r4.z, r5.z, r5.x, r4.z
					mul r5.x, cb0[14].z, cb1[0].y
					mul r5.x, r5.x, l(0.050000)
					sincos r5.x, r7.x, r5.x
					mul r5.yzw, r0.yyyy, cb3[r1.z + 49].xxyz
					mad r5.yzw, cb3[r1.z + 48].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb3[r1.z + 50].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t2.xyzw, s6
					mul r8.x, r8.w, r8.x
					mad r7.yz, r8.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r8.xy, r7.yzyy, cb0[14].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r6.w, v3.xyzx, r8.xyzx
					dp3 r7.y, v4.xyzx, r8.xyzx
					mul r8.xyz, r6.wwww, cb3[r1.z + 49].xyzx
					mad r8.xyz, cb3[r1.z + 48].xyzx, r4.zzzz, r8.xyzx
					mad r7.yzw, cb3[r1.z + 50].xxyz, r7.yyyy, r8.xxyz
					dp3 r1.z, r5.yzwy, r7.yzwy
					add r1.z, r1.z, r1.z
					mad r5.yz, r7.yyzy, -r1.zzzz, r5.yyzy
					add r5.yz, -r5.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r7.x, r5.yzyy, r8.yzyy
					dp2 r7.y, r5.yzyy, r8.xyxx
					add r5.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mad r5.zw, v1.xxxy, cb0[17].xxxy, cb0[17].zzzw
					mov_sat r1.x, r1.x
					mad r1.z, cb0[18].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r1.z
					exp r1.x, r1.x
					mul r1.z, cb0[18].z, cb0[18].y
					mad_sat r2.xyz, r0.wwww, cb0[2].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t3.xyzw, s1
					mad r3.xy, cb0[10].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.w, r0.w
					mul r0.w, r4.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r8.xyz, r0.wwww, cb0[7].xyzx
					mul r8.xyz, r6.xyzx, r8.xyzx
					mad r7.xyz, cb0[5].xyzx, r7.xyzx, r8.xyzx
					mad r1.yw, r3.zzzw, cb0[8].xxxx, r4.xxxy
					sample r4.xyzw, r1.ywyy, t4.xyzw, s4
					mul r4.xyz, r4.xyzx, cb0[12].xyzx
					mul r4.xyz, r6.xyzx, r4.xyzx
					mad r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r7.xyzx
					mul r7.xyz, r6.xyzx, cb0[13].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r1.yw, r3.zzzw, cb0[8].xxxx, r5.xxxy
					sample r3.xyzw, r1.ywyy, t5.xyzw, s5
					mad r3.xyz, r7.xyzx, r3.xyzx, r4.xyzx
					sample r4.xyzw, r5.zwzz, t6.xyzw, s8
					mul r4.x, r4.w, r4.x
					mad r1.yw, r4.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
					mul r4.xy, r1.ywyy, cb0[16].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r0.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r5.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t7.xyzw, s7
					mul r0.xyz, r0.xyzx, cb0[15].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r3.xyzx
					mad r0.xyz, -r1.xxxx, r1.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[4].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_constantbuffer CB3[47], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xyzw, v5.yyyy, cb0[3].xyzw
					mad r2.xyzw, cb0[2].xyzw, v5.xxxx, r2.xyzw
					mad r2.xyzw, cb0[4].xyzw, v5.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[5].xyzw
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb3[46].xyzw
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb3[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb3[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb3[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb3[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					mul r4.xyz, v3.zzzz, cb4[10].xyzx
					mad r4.xyz, cb4[9].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb4[11].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.z, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r1.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t3.xyzw, s5
					add r4.w, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r4.w, r4.z
					mul r4.w, cb0[18].z, cb1[0].y
					mul r4.w, r4.w, l(0.050000)
					sincos r5.x, r7.x, r4.w
					mul r5.yzw, r0.yyyy, cb2[15].xxyz
					mad r5.yzw, cb2[14].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb2[16].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t4.xyzw, s8
					mul r8.x, r8.w, r8.x
					mad r4.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r4.zwzz, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r4.w, v3.xyzx, r8.xyzx
					dp3 r6.w, v4.xyzx, r8.xyzx
					mul r7.yzw, r4.wwww, cb2[15].xxyz
					mad r7.yzw, cb2[14].xxyz, r4.zzzz, r7.yyzw
					mad r7.yzw, cb2[16].xxyz, r6.wwww, r7.yyzw
					dp3 r4.z, r5.yzwy, r7.yzwy
					add r4.z, r4.z, r4.z
					mad r4.zw, r7.yyyz, -r4.zzzz, r5.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r5.x, r4.zwzz, r8.yzyy
					dp2 r5.y, r4.zwzz, r8.xyxx
					add r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.xy, v1.xyxx, cb0[21].xyxx, cb0[21].zwzz
					mov_sat r1.x, r1.x
					mad r5.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r5.z
					exp r1.x, r1.x
					mul r5.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t5.xyzw, s3
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.z, r0.w
					mul r0.w, r1.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r1.yzw, r0.wwww, cb0[11].xxyz
					mul r1.yzw, r6.xxyz, r1.yyzw
					mad r1.yzw, cb0[9].xxyz, r7.xxyz, r1.yyzw
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.xyxx
					sample r7.xyzw, r3.xyxx, t6.xyzw, s6
					mul r7.xyz, r7.xyzx, cb0[16].xyzx
					mul r7.xyz, r6.xyzx, r7.xyzx
					mad r1.yzw, r7.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r1.yyzw
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.zwzz
					sample r3.xyzw, r3.xyxx, t7.xyzw, s7
					mad r1.yzw, r7.xxyz, r3.xxyz, r1.yyzw
					sample r3.xyzw, r5.xyxx, t8.xyzw, s10
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[20].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.w, -r0.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r4.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t9.xyzw, s9
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r1.yzwy
					mad r0.xyz, -r1.xxxx, r5.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xyzw, v5.yyyy, cb0[3].xyzw
					mad r2.xyzw, cb0[2].xyzw, v5.xxxx, r2.xyzw
					mad r2.xyzw, cb0[4].xyzw, v5.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[5].xyzw
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb2[46].xyzw
					lt r1.w, l(0.000000), r2.z
					and r1.w, r1.w, l(0x3f800000)
					div r3.xy, r2.xyxx, r2.wwww
					add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					mul r1.w, r1.w, r3.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t1.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					ishl r1.z, cb4[0].x, l(2)
					mul r4.xyz, v3.zzzz, cb3[r1.z + 9].xyzx
					mad r4.xyz, cb3[r1.z + 8].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb3[r1.z + 10].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.w, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r4.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t3.xyzw, s5
					add r5.x, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r5.x, r4.z
					mul r5.x, cb0[18].z, cb1[0].y
					mul r5.x, r5.x, l(0.050000)
					sincos r5.x, r7.x, r5.x
					mul r5.yzw, r0.yyyy, cb3[r1.z + 49].xxyz
					mad r5.yzw, cb3[r1.z + 48].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb3[r1.z + 50].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t4.xyzw, s8
					mul r8.x, r8.w, r8.x
					mad r7.yz, r8.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r8.xy, r7.yzyy, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r6.w, v3.xyzx, r8.xyzx
					dp3 r7.y, v4.xyzx, r8.xyzx
					mul r8.xyz, r6.wwww, cb3[r1.z + 49].xyzx
					mad r8.xyz, cb3[r1.z + 48].xyzx, r4.zzzz, r8.xyzx
					mad r7.yzw, cb3[r1.z + 50].xxyz, r7.yyyy, r8.xxyz
					dp3 r1.z, r5.yzwy, r7.yzwy
					add r1.z, r1.z, r1.z
					mad r5.yz, r7.yyzy, -r1.zzzz, r5.yyzy
					add r5.yz, -r5.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r7.x, r5.yzyy, r8.yzyy
					dp2 r7.y, r5.yzyy, r8.xyxx
					add r5.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mad r5.zw, v1.xxxy, cb0[21].xxxy, cb0[21].zzzw
					mov_sat r1.x, r1.x
					mad r1.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r1.z
					exp r1.x, r1.x
					mul r1.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t5.xyzw, s3
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.w, r0.w
					mul r0.w, r4.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r8.xyz, r0.wwww, cb0[11].xyzx
					mul r8.xyz, r6.xyzx, r8.xyzx
					mad r7.xyz, cb0[9].xyzx, r7.xyzx, r8.xyzx
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r4.xxxy
					sample r4.xyzw, r1.ywyy, t6.xyzw, s6
					mul r4.xyz, r4.xyzx, cb0[16].xyzx
					mul r4.xyz, r6.xyzx, r4.xyzx
					mad r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r7.xyzx
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r5.xxxy
					sample r3.xyzw, r1.ywyy, t7.xyzw, s7
					mad r3.xyz, r7.xyzx, r3.xyzx, r4.xyzx
					sample r4.xyzw, r5.zwzz, t8.xyzw, s10
					mul r4.x, r4.w, r4.x
					mad r1.yw, r4.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
					mul r4.xy, r1.ywyy, cb0[20].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r0.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r5.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t9.xyzw, s9
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r3.xyzx
					mad r0.xyz, -r1.xxxx, r1.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_constantbuffer CB3[47], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xyz, v5.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v5.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb3[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t0.xyzw, s2
					sample r2.xyzw, r2.xyzx, t1.xyzw, s1
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb3[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb3[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb3[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb3[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					mul r4.xyz, v3.zzzz, cb4[10].xyzx
					mad r4.xyz, cb4[9].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb4[11].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.z, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r1.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t3.xyzw, s5
					add r4.w, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r4.w, r4.z
					mul r4.w, cb0[18].z, cb1[0].y
					mul r4.w, r4.w, l(0.050000)
					sincos r5.x, r7.x, r4.w
					mul r5.yzw, r0.yyyy, cb2[15].xxyz
					mad r5.yzw, cb2[14].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb2[16].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t4.xyzw, s8
					mul r8.x, r8.w, r8.x
					mad r4.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r4.zwzz, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r4.w, v3.xyzx, r8.xyzx
					dp3 r6.w, v4.xyzx, r8.xyzx
					mul r7.yzw, r4.wwww, cb2[15].xxyz
					mad r7.yzw, cb2[14].xxyz, r4.zzzz, r7.yyzw
					mad r7.yzw, cb2[16].xxyz, r6.wwww, r7.yyzw
					dp3 r4.z, r5.yzwy, r7.yzwy
					add r4.z, r4.z, r4.z
					mad r4.zw, r7.yyyz, -r4.zzzz, r5.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r5.x, r4.zwzz, r8.yzyy
					dp2 r5.y, r4.zwzz, r8.xyxx
					add r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.xy, v1.xyxx, cb0[21].xyxx, cb0[21].zwzz
					mov_sat r1.x, r1.x
					mad r5.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r5.z
					exp r1.x, r1.x
					mul r5.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t5.xyzw, s3
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.z, r0.w
					mul r0.w, r1.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r1.yzw, r0.wwww, cb0[11].xxyz
					mul r1.yzw, r6.xxyz, r1.yyzw
					mad r1.yzw, cb0[9].xxyz, r7.xxyz, r1.yyzw
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.xyxx
					sample r7.xyzw, r3.xyxx, t6.xyzw, s6
					mul r7.xyz, r7.xyzx, cb0[16].xyzx
					mul r7.xyz, r6.xyzx, r7.xyzx
					mad r1.yzw, r7.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r1.yyzw
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.zwzz
					sample r3.xyzw, r3.xyxx, t7.xyzw, s7
					mad r1.yzw, r7.xxyz, r3.xxyz, r1.yyzw
					sample r3.xyzw, r5.xyxx, t8.xyzw, s10
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[20].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.w, -r0.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r4.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t9.xyzw, s9
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r1.yzwy
					mad r0.xyz, -r1.xxxx, r5.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xyz, v5.yyyy, cb0[3].xyzx
					mad r2.xyz, cb0[2].xyzx, v5.xxxx, r2.xyzx
					mad r2.xyz, cb0[4].xyzx, v5.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[5].xyzx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb2[46].xyzw
					dp3 r1.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r1.wwww, t0.xyzw, s2
					sample r2.xyzw, r2.xyzx, t1.xyzw, s1
					mul r1.w, r2.w, r3.x
					mul r0.w, r0.w, r1.w
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					ishl r1.z, cb4[0].x, l(2)
					mul r4.xyz, v3.zzzz, cb3[r1.z + 9].xyzx
					mad r4.xyz, cb3[r1.z + 8].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb3[r1.z + 10].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.w, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r4.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t3.xyzw, s5
					add r5.x, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r5.x, r4.z
					mul r5.x, cb0[18].z, cb1[0].y
					mul r5.x, r5.x, l(0.050000)
					sincos r5.x, r7.x, r5.x
					mul r5.yzw, r0.yyyy, cb3[r1.z + 49].xxyz
					mad r5.yzw, cb3[r1.z + 48].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb3[r1.z + 50].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t4.xyzw, s8
					mul r8.x, r8.w, r8.x
					mad r7.yz, r8.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r8.xy, r7.yzyy, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r6.w, v3.xyzx, r8.xyzx
					dp3 r7.y, v4.xyzx, r8.xyzx
					mul r8.xyz, r6.wwww, cb3[r1.z + 49].xyzx
					mad r8.xyz, cb3[r1.z + 48].xyzx, r4.zzzz, r8.xyzx
					mad r7.yzw, cb3[r1.z + 50].xxyz, r7.yyyy, r8.xxyz
					dp3 r1.z, r5.yzwy, r7.yzwy
					add r1.z, r1.z, r1.z
					mad r5.yz, r7.yyzy, -r1.zzzz, r5.yyzy
					add r5.yz, -r5.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r7.x, r5.yzyy, r8.yzyy
					dp2 r7.y, r5.yzyy, r8.xyxx
					add r5.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mad r5.zw, v1.xxxy, cb0[21].xxxy, cb0[21].zzzw
					mov_sat r1.x, r1.x
					mad r1.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r1.z
					exp r1.x, r1.x
					mul r1.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t5.xyzw, s3
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.w, r0.w
					mul r0.w, r4.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r8.xyz, r0.wwww, cb0[11].xyzx
					mul r8.xyz, r6.xyzx, r8.xyzx
					mad r7.xyz, cb0[9].xyzx, r7.xyzx, r8.xyzx
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r4.xxxy
					sample r4.xyzw, r1.ywyy, t6.xyzw, s6
					mul r4.xyz, r4.xyzx, cb0[16].xyzx
					mul r4.xyz, r6.xyzx, r4.xyzx
					mad r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r7.xyzx
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r5.xxxy
					sample r3.xyzw, r1.ywyy, t7.xyzw, s7
					mad r3.xyz, r7.xyzx, r3.xyzx, r4.xyzx
					sample r4.xyzw, r5.zwzz, t8.xyzw, s10
					mul r4.x, r4.w, r4.x
					mad r1.yw, r4.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
					mul r4.xy, r1.ywyy, cb0[20].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r0.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r5.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t9.xyzw, s9
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r3.xyzx
					mad r0.xyz, -r1.xxxx, r1.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_constantbuffer CB3[47], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xy, v5.yyyy, cb0[3].xyxx
					mad r2.xy, cb0[2].xyxx, v5.xxxx, r2.xyxx
					mad r2.xy, cb0[4].xyxx, v5.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[5].xyxx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t9.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb3[46].xyzw
					sample r2.xyzw, r2.xyxx, t0.xyzw, s1
					mul r0.w, r0.w, r2.w
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb3[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb3[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb3[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb3[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					mul r4.xyz, v3.zzzz, cb4[10].xyzx
					mad r4.xyz, cb4[9].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb4[11].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.z, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r1.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t2.xyzw, s4
					add r4.w, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r4.w, r4.z
					mul r4.w, cb0[18].z, cb1[0].y
					mul r4.w, r4.w, l(0.050000)
					sincos r5.x, r7.x, r4.w
					mul r5.yzw, r0.yyyy, cb2[15].xxyz
					mad r5.yzw, cb2[14].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb2[16].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t3.xyzw, s7
					mul r8.x, r8.w, r8.x
					mad r4.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r4.zwzz, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r4.w, v3.xyzx, r8.xyzx
					dp3 r6.w, v4.xyzx, r8.xyzx
					mul r7.yzw, r4.wwww, cb2[15].xxyz
					mad r7.yzw, cb2[14].xxyz, r4.zzzz, r7.yyzw
					mad r7.yzw, cb2[16].xxyz, r6.wwww, r7.yyzw
					dp3 r4.z, r5.yzwy, r7.yzwy
					add r4.z, r4.z, r4.z
					mad r4.zw, r7.yyyz, -r4.zzzz, r5.yyyz
					add r4.zw, -r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r5.x, r4.zwzz, r8.yzyy
					dp2 r5.y, r4.zwzz, r8.xyxx
					add r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mad r5.xy, v1.xyxx, cb0[21].xyxx, cb0[21].zwzz
					mov_sat r1.x, r1.x
					mad r5.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r5.z
					exp r1.x, r1.x
					mul r5.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t4.xyzw, s2
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.z, r0.w
					mul r0.w, r1.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r1.yzw, r0.wwww, cb0[11].xxyz
					mul r1.yzw, r6.xxyz, r1.yyzw
					mad r1.yzw, cb0[9].xxyz, r7.xxyz, r1.yyzw
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.xyxx
					sample r7.xyzw, r3.xyxx, t5.xyzw, s5
					mul r7.xyz, r7.xyzx, cb0[16].xyzx
					mul r7.xyz, r6.xyzx, r7.xyzx
					mad r1.yzw, r7.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000), r1.yyzw
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r3.xy, r3.zwzz, cb0[12].xxxx, r4.zwzz
					sample r3.xyzw, r3.xyxx, t6.xyzw, s6
					mad r1.yzw, r7.xxyz, r3.xxyz, r1.yyzw
					sample r3.xyzw, r5.xyxx, t7.xyzw, s9
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[20].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r3.z, r0.w
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r0.w, -r0.xyzx, r4.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r4.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t8.xyzw, s8
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r1.yzwy
					mad r0.xyz, -r1.xxxx, r5.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.yyyy, v3.xyzx
					mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
					mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
					mul r2.xy, v5.yyyy, cb0[3].xyxx
					mad r2.xy, cb0[2].xyxx, v5.xxxx, r2.xyxx
					mad r2.xy, cb0[4].xyxx, v5.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[5].xyxx
					eq r0.w, cb5[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r0.w, r3.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r0.w, r1.w
					  sample r3.xyzw, r3.xzwx, t9.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r3.xyzw, cb2[46].xyzw
					sample r2.xyzw, r2.xyxx, t0.xyzw, s1
					mul r0.w, r0.w, r2.w
					mul r2.xyz, r0.wwww, cb0[6].xyzx
					add r3.xyz, cb0[6].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
					div r2.xyz, r2.xyzx, r3.xyzx
					max r0.w, r2.y, r2.x
					max r0.w, r2.z, r0.w
					dp2 r2.x, cb2[39].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.y, cb2[40].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					dp2 r2.z, cb2[41].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r2.xyz, r2.xyzx, -cb2[45].xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
					sample r4.xyzw, r3.zwzz, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r4.xy, r3.zwzz, cb0[12].xxxx
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r1.xyzx
					dp3_sat r2.w, r4.xyzx, r5.xyzx
					mad r1.xyz, -r1.zxyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.y, r4.zxyz, r1.xyzx
					ishl r1.z, cb4[0].x, l(2)
					mul r4.xyz, v3.zzzz, cb3[r1.z + 9].xyzx
					mad r4.xyz, cb3[r1.z + 8].xyzx, v2.zzzz, r4.xyzx
					mad r4.xyz, cb3[r1.z + 10].xyzx, v4.zzzz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					dp3 r1.w, r4.xzyx, l(1.000000, 1.000000, -0.250000, 0.000000)
					dp3 r4.w, r4.xyzx, l(1.000000, 1.000000, 0.250000, 0.000000)
					mad r5.xy, v1.xyxx, cb0[15].xyxx, cb0[15].zwzz
					sample r6.xyzw, r5.xyxx, t2.xyzw, s4
					add r5.x, cb0[18].y, cb0[18].y
					mad r4.z, r5.z, r5.x, r4.z
					mul r5.x, cb0[18].z, cb1[0].y
					mul r5.x, r5.x, l(0.050000)
					sincos r5.x, r7.x, r5.x
					mul r5.yzw, r0.yyyy, cb3[r1.z + 49].xxyz
					mad r5.yzw, cb3[r1.z + 48].xxyz, r0.xxxx, r5.yyzw
					mad r5.yzw, cb3[r1.z + 50].xxyz, r0.zzzz, r5.yyzw
					sample r8.xyzw, r4.zzzz, t3.xyzw, s7
					mul r8.x, r8.w, r8.x
					mad r7.yz, r8.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r8.xy, r7.yzyy, cb0[18].xxxx
					dp2 r4.z, r8.xyxx, r8.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r8.z, r4.z
					dp3 r4.z, v2.xyzx, r8.xyzx
					dp3 r6.w, v3.xyzx, r8.xyzx
					dp3 r7.y, v4.xyzx, r8.xyzx
					mul r8.xyz, r6.wwww, cb3[r1.z + 49].xyzx
					mad r8.xyz, cb3[r1.z + 48].xyzx, r4.zzzz, r8.xyzx
					mad r7.yzw, cb3[r1.z + 50].xxyz, r7.yyyy, r8.xxyz
					dp3 r1.z, r5.yzwy, r7.yzwy
					add r1.z, r1.z, r1.z
					mad r5.yz, r7.yyzy, -r1.zzzz, r5.yyzy
					add r5.yz, -r5.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
					mov r8.x, -r5.x
					mov r8.y, r7.x
					mov r8.z, r5.x
					dp2 r7.x, r5.yzyy, r8.yzyy
					dp2 r7.y, r5.yzyy, r8.xyxx
					add r5.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mad r5.zw, v1.xxxy, cb0[21].xxxy, cb0[21].zzzw
					mov_sat r1.x, r1.x
					mad r1.z, cb0[22].x, l(-30.000000), l(30.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r1.z
					exp r1.x, r1.x
					mul r1.z, cb0[22].z, cb0[22].y
					mad_sat r2.xyz, r0.wwww, cb0[6].xyzx, r2.xyzx
					sample r7.xyzw, r3.xyxx, t4.xyzw, s2
					mad r3.xy, cb0[14].xxxx, l(-25.000000, -27.000000, 0.000000, 0.000000), l(30.000000, 30.000000, 0.000000, 0.000000)
					log r0.w, r2.w
					mul r0.w, r0.w, r3.x
					exp r0.w, r0.w
					log r1.y, r1.y
					mul r2.w, r1.y, r3.y
					exp r2.w, r2.w
					mad r0.w, r2.w, l(2.000000), r0.w
					mul r0.w, r1.w, r0.w
					mul r0.w, r4.w, r0.w
					mul r1.y, r1.y, l(10.000000)
					exp r1.y, r1.y
					add r1.y, -r1.y, l(1.000000)
					mul r0.w, r0.w, r1.y
					mul r8.xyz, r0.wwww, cb0[11].xyzx
					mul r8.xyz, r6.xyzx, r8.xyzx
					mad r7.xyz, cb0[9].xyzx, r7.xyzx, r8.xyzx
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r4.xxxy
					sample r4.xyzw, r1.ywyy, t5.xyzw, s5
					mul r4.xyz, r4.xyzx, cb0[16].xyzx
					mul r4.xyz, r6.xyzx, r4.xyzx
					mad r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r7.xyzx
					mul r7.xyz, r6.xyzx, cb0[17].xyzx
					mul r7.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
					mad r1.yw, r3.zzzw, cb0[12].xxxx, r5.xxxy
					sample r3.xyzw, r1.ywyy, t6.xyzw, s6
					mad r3.xyz, r7.xyzx, r3.xyzx, r4.xyzx
					sample r4.xyzw, r5.zwzz, t7.xyzw, s9
					mul r4.x, r4.w, r4.x
					mad r1.yw, r4.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
					mul r4.xy, r1.ywyy, cb0[20].xxxx
					dp2 r0.w, r4.xyxx, r4.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r4.z, r0.w
					dp3 r5.x, v2.xyzx, r4.xyzx
					dp3 r5.y, v3.xyzx, r4.xyzx
					dp3 r5.z, v4.xyzx, r4.xyzx
					dp3 r0.w, -r0.xyzx, r5.xyzx
					add r0.w, r0.w, r0.w
					mad r0.xyz, r5.xyzx, -r0.wwww, -r0.xyzx
					sample r0.xyzw, r0.xyzx, t8.xyzw, s8
					mul r0.xyz, r0.xyzx, cb0[19].xyzx
					mad r0.xyz, r0.xyzx, r6.xyzx, r3.xyzx
					mad r0.xyz, -r1.xxxx, r1.zzzz, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, -r2.xyzx, r0.xyzx, r0.xyzx
					mad r0.xyz, cb0[8].xxxx, r0.xyzx, r1.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					min o0.xyz, r0.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "META" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 149509
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
					movc r0.xyz, cb3[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb2[1].xyxx, cb2[1].zwzz
					movc r0.xyz, cb3[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					dp3 r0.y, v2.xyzx, cb0[4].xyzx
					dp3 r0.z, v2.xyzx, cb0[5].xyzx
					dp3 r0.x, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb0[1].yzxy
					mad r1.xyz, cb0[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb0[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.y, r2.x
					mul r3.xyz, v0.yyyy, cb0[1].xyzx
					mad r3.xyz, cb0[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb0[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb0[3].xyzx, v0.wwww, r3.xyzx
					mov o1.w, r3.x
					mov o1.x, r1.z
					mov o1.z, r0.y
					mov o2.x, r1.x
					mov o3.x, r1.y
					mov o2.z, r0.z
					mov o3.z, r0.x
					mov o2.w, r3.y
					mov o3.w, r3.z
					mov o2.y, r2.y
					mov o3.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					dp3 r0.y, v2.xyzx, cb0[4].xyzx
					dp3 r0.z, v2.xyzx, cb0[5].xyzx
					dp3 r0.x, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb0[1].yzxy
					mad r1.xyz, cb0[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb0[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.y, r2.x
					mul r3.xyz, v0.yyyy, cb0[1].xyzx
					mad r3.xyz, cb0[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb0[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb0[3].xyzx, v0.wwww, r3.xyzx
					mov o1.w, r3.x
					mov o1.x, r1.z
					mov o1.z, r0.y
					mov o2.x, r1.x
					mov o3.x, r1.y
					mov o2.z, r0.z
					mov o3.z, r0.x
					mov o2.w, r3.y
					mov o3.w, r3.z
					mov o2.y, r2.y
					mov o3.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float       
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_output o0.xyzw
					dcl_temps 1
					min r0.xyz, cb0[19].xxxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float       
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_output o0.xyzw
					dcl_temps 1
					min r0.xyz, cb0[19].xxxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "SHADOWCASTER"
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "SHADOWCASTER" "QUEUE" = "Geometry+0" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Cull Off
			GpuProgramID 209870
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					ishl r1.x, cb4[0].x, l(2)
					mul r3.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
					mad r3.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r3.xyzw
					mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r3.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					ishl r1.x, cb4[0].x, l(2)
					mul r3.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
					mad r3.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r3.xyzw
					mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r3.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
	CustomEditor "ASEMaterialInspector"
}