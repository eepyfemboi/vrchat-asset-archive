Shader "Doppels shaders/MetallicFX 2
" {
	Properties {
		_Maintex ("Main Texture", 2D) = "white" {}
		_Normalmap ("Normal map", 2D) = "white" {}
		_ReflectionCubemap ("Reflection Cubemap", Cube) = "bump" {}
		[HDR] _Maintint ("Main tint", Vector) = (0,0,0,0)
		[HDR] _Metallictint ("Metallic tint", Vector) = (2,2,2,0)
		[HDR] _Cubemaptint ("Cubemap tint", Vector) = (0,0,0,0)
		_Metallicpower ("Metallic power", Range(0, 10)) = 0
		_Normalmapscale ("Normal map scale", Range(0, 1)) = 0
		[Toggle] _Unlitswitch ("Unlit switch", Float) = 1
		[Toggle] _WorldnormalUVswitch ("World normal UV switch", Float) = 0
		[HideInInspector] _texcoord ("", 2D) = "white" {}
		[HideInInspector] __dirty ("", Float) = 1
	}
	SubShader {
		LOD 32500
		Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "QUEUE" = "" "RenderType" = "" }
		Pass {
			Name "FORWARD"
			LOD 32500
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "" "RenderType" = "" "SHADOWSUPPORT" = "true" }
			GpuProgramID 60386
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o5.xyz, r0.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.w + 25].xyzw
					mad r2.xyzw, cb3[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb4[0].x
					mul r1.xy, r1.wwww, cb3[r0.z + 66].zwzz
					mad o5.xy, r0.xyxx, cb3[r0.z + 66].xyxx, r1.xyxx
					mov o5.zw, r1.zzzw
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[68], dynamicIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb5[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb4[r0.w + 25].xyzw
					mad r2.xyzw, cb4[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o5.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[4].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add r0.xy, r0.zzzz, r0.xwxx
					mov r0.z, cb5[0].x
					mul r1.xy, r1.wwww, cb4[r0.z + 66].zwzz
					mad o6.xy, r0.xyxx, cb4[r0.z + 66].xyxx, r1.xyxx
					mov o6.zw, r1.zzzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r6.xyz, r2.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t0.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r3.w, r7.xyxx, r7.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r7.z, r3.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r2.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r2.w, r5.xyzx, r3.xyzx
					dp3_sat r3.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					mad r3.y, cb0[9].x, l(-1.000000), l(10.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mul r6.xyz, r2.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r2.w, r3.x
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mad r3.xyz, r2.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r2.w, -r2.xyzx, r4.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r4.xyzx, -r2.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t2.xyzw, s4
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r2.w, -r2.xyzx, r8.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r8.xyzx, -r2.wwww, -r2.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb3[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -r0.xyzx, cb3[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r9.xyz, -r0.xyzx, cb3[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r10.xyzx, r7.xyzx, r9.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb3[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb3[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb3[3].x
					mul r7.xyz, r6.xyzx, r1.wwww
					lt r2.w, cb3[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb3[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r9.xyz, r2.wwww, r4.xyzx
					    add r10.xyz, -r0.xyzx, cb3[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r0.xyzx, cb3[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r2.w, r10.y, r10.x
					    min r2.w, r10.z, r2.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r4.xyz, r9.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r6.xyzx, -r0.xyzx
					  mad r7.xyz, cb3[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
					dp3_sat r0.y, cb2[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mul r1.xzw, r0.zzzz, r5.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r7.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r6.xyz, r2.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t0.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r3.w, r7.xyxx, r7.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r7.z, r3.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r2.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r2.w, r5.xyzx, r3.xyzx
					dp3_sat r3.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					mad r3.y, cb0[9].x, l(-1.000000), l(10.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mul r6.xyz, r2.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r2.w, r3.x
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mad r3.xyz, r2.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r2.w, -r2.xyzx, r4.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r4.xyzx, -r2.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t2.xyzw, s4
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r2.w, -r2.xyzx, r8.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r8.xyzx, -r2.wwww, -r2.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -r0.xyzx, cb4[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r9.xyz, -r0.xyzx, cb4[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r10.xyzx, r7.xyzx, r9.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb4[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb4[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb4[3].x
					mul r7.xyz, r6.xyzx, r1.wwww
					lt r2.w, cb4[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb4[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r9.xyz, r2.wwww, r4.xyzx
					    add r10.xyz, -r0.xyzx, cb4[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r0.xyzx, cb4[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r2.w, r10.y, r10.x
					    min r2.w, r10.z, r2.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r4.xyz, r9.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r6.xyzx, -r0.xyzx
					  mad r7.xyz, cb4[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
					dp3_sat r0.y, cb1[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mul r1.xzw, r0.zzzz, r5.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r7.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r3.w, r5.xyxx, r5.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r5.z, r3.w
					dp3 r3.w, r3.xyzx, r3.xyzx
					rsq r3.w, r3.w
					mul r6.xyz, r3.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t0.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r4.z, r7.xyxx, r7.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r7.z, r4.z
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r3.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r3.x, r5.xyzx, r3.xyzx
					dp3_sat r3.y, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add r3.z, -cb0[9].x, l(10.000000)
					log r3.x, r3.x
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mul r6.xyz, r3.xxxx, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r3.x, r3.y
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mad r3.xyz, r3.xxxx, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r3.w, -r2.xyzx, r4.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t2.xyzw, s4
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r3.w, -r2.xyzx, r8.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r8.xyzx, -r3.wwww, -r2.xyzx
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r6.xyz, v3.wwww, cb4[2].xyzx
					  mad r6.xyz, cb4[1].xyzx, v2.wwww, r6.xyzx
					  mad r6.xyz, cb4[3].xyzx, v4.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb4[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r0.xyzx
					  add r6.xyz, r6.xyzx, -cb4[6].xyzx
					  mul r6.yzw, r6.xxyz, cb4[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb4[0].z, l(0.500000)
					  mad r3.w, -cb4[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r3.w, r1.w
					  sample r7.xyzw, r6.xzwx, t5.xyzw, s1
					  add r9.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t5.xyzw, s1
					  mov r8.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r8.xyzw
					  dp4 r7.y, r9.xyzw, r8.xyzw
					  dp4 r7.z, r6.xyzw, r8.xyzw
					else 
					  mov r8.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r8.xyzw
					  dp4 r7.y, cb2[40].xyzw, r8.xyzw
					  dp4 r7.z, cb2[41].xyzw, r8.xyzw
					endif 
					add r6.xyz, r7.xyzx, v5.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb3[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb3[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r0.xyzx, cb3[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r1.w, r9.y, r9.x
					  min r1.w, r9.z, r1.w
					  add r9.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r9.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb3[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb3[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb3[3].x
					mul r9.xyz, r7.xyzx, r1.wwww
					lt r2.w, cb3[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb3[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r10.xyz, r2.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb3[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb3[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r2.w, r11.y, r11.x
					    min r2.w, r11.z, r2.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r4.xyz, r10.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r7.xyzx, -r0.xyzx
					  mad r9.xyz, cb3[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
					dp3_sat r0.y, cb2[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mad r1.xzw, r5.xxyz, r0.zzzz, r6.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r9.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[8], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb3[0].x
					add r1.xyz, -r0.xyzx, cb2[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t0.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r3.w, r5.xyxx, r5.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r5.z, r3.w
					dp3 r3.w, r3.xyzx, r3.xyzx
					rsq r3.w, r3.w
					mul r6.xyz, r3.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t0.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r4.z, r7.xyxx, r7.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r7.z, r4.z
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r3.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r3.x, r5.xyzx, r3.xyzx
					dp3_sat r3.y, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add r3.z, -cb0[9].x, l(10.000000)
					log r3.x, r3.x
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mul r6.xyz, r3.xxxx, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r3.x, r3.y
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mad r3.xyz, r3.xxxx, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r3.w, -r2.xyzx, r4.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t2.xyzw, s4
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r3.w, -r2.xyzx, r8.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r8.xyzx, -r3.wwww, -r2.xyzx
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r6.xyz, v3.wwww, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v2.wwww, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v4.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r0.xyzx
					  add r6.xyz, r6.xyzx, -cb5[6].xyzx
					  mul r6.yzw, r6.xxyz, cb5[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb5[0].z, l(0.500000)
					  mad r3.w, -cb5[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r3.w, r1.w
					  sample r7.xyzw, r6.xzwx, t5.xyzw, s1
					  add r9.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t5.xyzw, s1
					  mov r8.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r8.xyzw
					  dp4 r7.y, r9.xyzw, r8.xyzw
					  dp4 r7.z, r6.xyzw, r8.xyzw
					else 
					  mov r8.w, l(1.000000)
					  dp4 r7.x, cb1[39].xyzw, r8.xyzw
					  dp4 r7.y, cb1[40].xyzw, r8.xyzw
					  dp4 r7.z, cb1[41].xyzw, r8.xyzw
					endif 
					add r6.xyz, r7.xyzx, v5.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb4[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb4[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r0.xyzx, cb4[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r1.w, r9.y, r9.x
					  min r1.w, r9.z, r1.w
					  add r9.xyz, r0.xyzx, -cb4[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r9.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, l(6.000000)
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb4[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb4[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb4[3].x
					mul r9.xyz, r7.xyzx, r1.wwww
					lt r2.w, cb4[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb4[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r10.xyz, r2.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb4[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb4[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r2.w, r11.y, r11.x
					    min r2.w, r11.z, r2.w
					    add r0.xyz, r0.xyzx, -cb4[6].xyzx
					    mad r4.xyz, r10.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb4[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb4[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r7.xyzx, -r0.xyzx
					  mad r9.xyz, cb4[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
					dp3_sat r0.y, cb1[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mad r1.xzw, r5.xxyz, r0.zzzz, r6.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r9.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v5.xyxx, v5.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r6.xyz, r2.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s4
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r3.w, r7.xyxx, r7.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r7.z, r3.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r2.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r2.w, r5.xyzx, r3.xyzx
					dp3_sat r3.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					add r3.y, -cb0[9].x, l(10.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mul r6.xyz, r2.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r2.w, r3.x
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mad r3.xyz, r2.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r2.w, -r2.xyzx, r4.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r4.xyzx, -r2.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s5
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r2.w, -r2.xyzx, r8.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r8.xyzx, -r2.wwww, -r2.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -r0.xyzx, cb5[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r9.xyz, -r0.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r10.xyzx, r7.xyzx, r9.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, l(6.000000)
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r7.xyz, r6.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r9.xyz, r2.wwww, r4.xyzx
					    add r10.xyz, -r0.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r0.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r2.w, r10.y, r10.x
					    min r2.w, r10.z, r2.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r9.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r6.xyzx, -r0.xyzx
					  mad r7.xyz, cb5[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
					dp3_sat r0.y, cb2[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mul r1.xzw, r0.zzzz, r5.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r7.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb4[0].x
					add r1.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r4.x, cb3[r1.w + 8].z
					mov r4.y, cb3[r1.w + 9].z
					mov r4.z, cb3[r1.w + 10].z
					dp3 r1.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb2[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
					div r4.xy, v5.xyxx, v5.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r2.w, r5.xyxx, r5.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r5.z, r2.w
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r6.xyz, r2.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s4
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r3.w, r7.xyxx, r7.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r7.z, r3.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r2.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r2.w, r5.xyzx, r3.xyzx
					dp3_sat r3.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					mad r3.y, cb0[9].x, l(-1.000000), l(10.000000)
					log r2.w, r2.w
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mul r6.xyz, r2.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r2.w, r3.x
					mul r2.w, r2.w, r3.y
					exp r2.w, r2.w
					mad r3.xyz, r2.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r2.w, -r2.xyzx, r4.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r4.xyzx, -r2.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s5
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r2.w, -r2.xyzx, r8.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r8.xyzx, -r2.wwww, -r2.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r6.xyz, r1.wwww, r4.xyzx
					  add r7.xyz, -r0.xyzx, cb5[0].xyzx
					  div r7.xyz, r7.xyzx, r6.xyzx
					  add r9.xyz, -r0.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r7.xyz, r10.xyzx, r7.xyzx, r9.xyzx
					  min r1.w, r7.y, r7.x
					  min r1.w, r7.z, r1.w
					  add r7.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.xyzx
					endif 
					sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, l(6.000000)
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r7.xyz, r6.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r9.xyz, r2.wwww, r4.xyzx
					    add r10.xyz, -r0.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r0.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r2.w, r10.y, r10.x
					    min r2.w, r10.z, r2.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r9.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r6.xyzx, -r0.xyzx
					  mad r7.xyz, cb5[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
					dp3_sat r0.y, cb1[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mul r1.xzw, r0.zzzz, r5.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r7.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r3.w, r5.xyxx, r5.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r5.z, r3.w
					dp3 r3.w, r3.xyzx, r3.xyzx
					rsq r3.w, r3.w
					mul r6.xyz, r3.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s4
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r4.z, r7.xyxx, r7.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r7.z, r4.z
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r3.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r3.x, r5.xyzx, r3.xyzx
					dp3_sat r3.y, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					add r3.z, -cb0[9].x, l(10.000000)
					log r3.x, r3.x
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mul r6.xyz, r3.xxxx, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r3.x, r3.y
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mad r3.xyz, r3.xxxx, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r3.w, -r2.xyzx, r4.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s5
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r3.w, -r2.xyzx, r8.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r8.xyzx, -r3.wwww, -r2.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v3.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v2.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v4.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r0.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb6[0].z, l(0.500000)
					  mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r3.w, r1.w
					  sample r7.xyzw, r6.xzwx, t6.xyzw, s1
					  add r9.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t6.xyzw, s1
					  mov r8.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r8.xyzw
					  dp4 r7.y, r9.xyzw, r8.xyzw
					  dp4 r7.z, r6.xyzw, r8.xyzw
					else 
					  mov r8.w, l(1.000000)
					  dp4 r7.x, cb2[39].xyzw, r8.xyzw
					  dp4 r7.y, cb2[40].xyzw, r8.xyzw
					  dp4 r7.z, cb2[41].xyzw, r8.xyzw
					endif 
					add r6.xyz, r7.xyzx, v5.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r1.w, r9.y, r9.x
					  min r1.w, r9.z, r1.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r9.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, l(6.000000)
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r9.xyz, r7.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r10.xyz, r2.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r2.w, r11.y, r11.x
					    min r2.w, r11.z, r2.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r10.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r7.xyzx, -r0.xyzx
					  mad r9.xyz, cb5[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
					dp3_sat r0.y, cb2[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mad r1.xzw, r5.xxyz, r0.zzzz, r6.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r9.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, cb4[0].x
					add r1.xyz, -r0.xyzx, cb3[r0.w + 64].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r4.x, cb3[r1.w + 8].z
					mov r4.y, cb3[r1.w + 9].z
					mov r4.z, cb3[r1.w + 10].z
					dp3 r1.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb2[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s2
					add_sat r1.w, r1.w, r4.x
					min r3.w, r1.w, r3.w
					movc r1.w, r2.w, r3.w, r1.w
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r3.w, r5.xyxx, r5.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r5.z, r3.w
					dp3 r3.w, r3.xyzx, r3.xyzx
					rsq r3.w, r3.w
					mul r6.xyz, r3.wwww, r3.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s4
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r4.z, r7.xyxx, r7.xyxx
					min r4.z, r4.z, l(1.000000)
					add r4.z, -r4.z, l(1.000000)
					sqrt r7.z, r4.z
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, -r3.xyzx, r3.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r3.x, r5.xyzx, r3.xyzx
					dp3_sat r3.y, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					add r3.z, -cb0[9].x, l(10.000000)
					log r3.x, r3.x
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mul r6.xyz, r3.xxxx, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r3.x, r3.y
					mul r3.x, r3.x, r3.z
					exp r3.x, r3.x
					mad r3.xyz, r3.xxxx, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r3.w, -r2.xyzx, r4.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s5
					mad r3.xyz, r4.xyzx, cb0[11].xyzx, r3.xyzx
					dp3 r3.w, -r2.xyzx, r8.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r8.xyzx, -r3.wwww, -r2.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v3.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v2.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v4.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r0.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mul r1.w, r6.y, l(0.250000)
					  mul r2.w, cb6[0].z, l(0.500000)
					  mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r6.x, r3.w, r1.w
					  sample r7.xyzw, r6.xzwx, t6.xyzw, s1
					  add r9.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
					  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t6.xyzw, s1
					  mov r8.w, l(1.000000)
					  dp4 r7.x, r7.xyzw, r8.xyzw
					  dp4 r7.y, r9.xyzw, r8.xyzw
					  dp4 r7.z, r6.xyzw, r8.xyzw
					else 
					  mov r8.w, l(1.000000)
					  dp4 r7.x, cb1[39].xyzw, r8.xyzw
					  dp4 r7.y, cb1[40].xyzw, r8.xyzw
					  dp4 r7.z, cb1[41].xyzw, r8.xyzw
					endif 
					add r6.xyz, r7.xyzx, v5.xyzx
					max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r1.w, r9.y, r9.x
					  min r1.w, r9.z, r1.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r9.xyzx
					else 
					  mov r7.xyz, r4.xyzx
					endif 
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, l(6.000000)
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb5[3].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb5[3].x
					mul r9.xyz, r7.xyzx, r1.wwww
					lt r2.w, cb5[1].w, l(0.999990)
					if_nz r2.w
					  lt r2.w, l(0.000000), cb5[6].w
					  if_nz r2.w
					    dp3 r2.w, r4.xyzx, r4.xyzx
					    rsq r2.w, r2.w
					    mul r10.xyz, r2.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r2.w, r11.y, r11.x
					    min r2.w, r11.z, r2.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r10.xyzx, r2.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, l(6.000000)
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  log r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].y
					  exp r0.x, r0.x
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r1.wwww, r7.xyzx, -r0.xyzx
					  mad r9.xyz, cb5[1].wwww, r4.xyzx, r0.xyzx
					endif 
					dp3 r0.x, r8.xyzx, r8.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r8.xyzx
					mul r4.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
					dp3_sat r0.y, cb1[0].xyzx, r1.xyzx
					dp2 r0.z, r0.yyyy, r0.yyyy
					add r0.z, r0.z, l(-0.500000)
					add r1.x, -r0.x, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r1.x, r0.z, r1.x, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.z, r0.z, r1.y, l(1.000000)
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.x, r0.z
					add r0.w, |r0.w|, r0.x
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.w, r0.w, l(1.000000)
					mul r0.x, r0.x, r0.w
					mad r1.xzw, r5.xxyz, r0.zzzz, r6.xxyz
					mul r0.xzw, r5.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r2.x, r0.y, r0.y
					mul r2.x, r2.x, r2.x
					mul r0.y, r0.y, r2.x
					mad r0.y, r0.y, l(0.960000), l(0.040000)
					mul r0.xyz, r0.yyyy, r0.xzwx
					mad r0.xyz, r4.xyzx, r1.xzwx, r0.xyzx
					mul r1.xzw, r9.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
					mad r0.w, r1.y, l(0.000000), l(0.040000)
					mad r0.xyz, r1.xzwx, r0.wwww, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			LOD 32500
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "" "RenderType" = "" "SHADOWSUPPORT" = "true" }
			Blend One One, One One
			ZWrite Off
			GpuProgramID 106822
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[22], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[21].xyxx, cb0[21].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[22], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[21].xyxx, cb0[21].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb4[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb3[r0.x + 25].xyzw
					mad r2.xyzw, cb3[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb3[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb4[0].x
					mul r1.yz, r0.wwww, cb3[r1.x + 66].zzwz
					mad o6.xy, r0.xyxx, cb3[r1.x + 66].xyxx, r1.yzyy
					mov o6.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[32], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyz, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mul r4.xyz, v5.yyyy, cb0[3].xyzx
					mad r4.xyz, cb0[2].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[4].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[5].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t0.xyzw, s1
					mul r1.w, r1.w, r4.x
					mul r4.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t1.xyzw, s3
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r3.xyzx
					sample r8.xyzw, r5.zwzz, t1.xyzw, s3
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r3.xyz, -r3.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r3.xyzw, r5.xyxx, t2.xyzw, s2
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r3.xyz, r3.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r3.xyz, r1.wwww, cb0[14].xyzx, r3.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r2.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r2.xyzx
					sample r5.xyzw, r5.xyzx, t3.xyzw, s4
					mad r3.xyz, r5.xyzx, cb0[15].xyzx, r3.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v5.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mul r4.xyz, v5.yyyy, cb0[3].xyzx
					mad r4.xyz, cb0[2].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[4].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[5].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t0.xyzw, s1
					mul r1.w, r1.w, r4.x
					mul r4.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t1.xyzw, s3
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r3.xyzx
					sample r8.xyzw, r5.zwzz, t1.xyzw, s3
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r3.xyz, -r3.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r3.xyzw, r5.xyxx, t2.xyzw, s2
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r3.xyz, r3.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r3.xyz, r1.wwww, cb0[14].xyzx, r3.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r2.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r2.xyzx
					sample r5.xyzw, r5.xyzx, t3.xyzw, s4
					mad r3.xyz, r5.xyzx, cb0[15].xyzx, r3.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t3.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t0.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t0.xyzw, s2
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t1.xyzw, s1
					add r2.y, -cb0[9].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t2.xyzw, s3
					mad r2.xyz, r4.xyzx, cb0[11].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r3.xyz, v5.yyyy, cb4[2].xyzx
					  mad r3.xyz, cb4[1].xyzx, v5.xxxx, r3.xyzx
					  mad r3.xyz, cb4[3].xyzx, v5.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb4[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb4[6].xyzx
					  mul r3.yzw, r3.xxyz, cb4[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t3.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t0.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t0.xyzw, s2
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t1.xyzw, s1
					add r2.y, -cb0[9].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t2.xyzw, s3
					mad r2.xyz, r4.xyzx, cb0[11].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mul r4.xyzw, v5.yyyy, cb0[3].xyzw
					mad r4.xyzw, cb0[2].xyzw, v5.xxxx, r4.xyzw
					mad r4.xyzw, cb0[4].xyzw, v5.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[5].xyzw
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s1
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t1.xyzw, s2
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mul r4.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r3.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r3.xyz, -r3.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r3.xyzw, r5.xyxx, t3.xyzw, s3
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r3.xyz, r3.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r3.xyz, r1.wwww, cb0[14].xyzx, r3.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r2.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r2.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s5
					mad r3.xyz, r5.xyzx, cb0[15].xyzx, r3.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v5.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mul r4.xyzw, v5.yyyy, cb0[3].xyzw
					mad r4.xyzw, cb0[2].xyzw, v5.xxxx, r4.xyzw
					mad r4.xyzw, cb0[4].xyzw, v5.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[5].xyzw
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t0.xyzw, s1
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t1.xyzw, s2
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mul r4.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r3.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r3.xyz, -r3.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r3.xyzw, r5.xyxx, t3.xyzw, s3
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r3.xyz, r3.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r3.xyz, r1.wwww, cb0[14].xyzx, r3.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r2.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r2.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s5
					mad r3.xyz, r5.xyzx, cb0[15].xyzx, r3.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mul r4.xyz, v5.yyyy, cb0[3].xyzx
					mad r4.xyz, cb0[2].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[4].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[5].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t0.xyzw, s2
					sample r4.xyzw, r4.xyzx, t1.xyzw, s1
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mul r4.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r3.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r3.xyz, -r3.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r3.xyzw, r5.xyxx, t3.xyzw, s3
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r3.xyz, r3.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r3.xyz, r1.wwww, cb0[14].xyzx, r3.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r2.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r2.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s5
					mad r3.xyz, r5.xyzx, cb0[15].xyzx, r3.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb3[0].x
					add r2.xyz, -v5.xyzx, cb2[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r2.yyyy, v3.xyzx
					mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
					mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
					mul r4.xyz, v5.yyyy, cb0[3].xyzx
					mad r4.xyz, cb0[2].xyzx, v5.xxxx, r4.xyzx
					mad r4.xyz, cb0[4].xyzx, v5.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[5].xyzx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t0.xyzw, s2
					sample r4.xyzw, r4.xyzx, t1.xyzw, s1
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mul r4.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r3.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r3.xyz, -r3.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r3.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r3.xyzw, r5.xyxx, t3.xyzw, s3
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r3.xyz, r3.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r3.xyz, r1.wwww, cb0[14].xyzx, r3.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r2.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r2.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s5
					mad r3.xyz, r5.xyzx, cb0[15].xyzx, r3.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r2.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r3.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					mul r3.xy, v5.yyyy, cb0[3].xyxx
					mad r3.xy, cb0[2].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[4].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[5].xyxx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[6].xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[11].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[11].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[11].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					add r2.y, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[14].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mad r2.xyz, r4.xyzx, cb0[15].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[66], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb3[0].x
					add r0.xyz, -v5.xyzx, cb2[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					mul r3.xy, v5.yyyy, cb0[3].xyxx
					mad r3.xy, cb0[2].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[4].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[5].xyxx
					eq r1.w, cb4[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					sample r3.xyzw, r3.xyxx, t0.xyzw, s1
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[6].xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[11].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[11].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[11].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					add r2.y, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[14].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mad r2.xyz, r4.xyzx, cb0[15].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyzw, v5.yyyy, cb0[3].xyzw
					mad r5.xyzw, cb0[2].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[4].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[5].xyzw
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
					mul r6.xyzw, v5.yyyy, cb3[9].xyzw
					mad r6.xyzw, cb3[8].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb3[10].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb3[11].xyzw
					div r6.xyz, r6.xyzx, r6.wwww
					sample_c_lz r2.z, r6.xyxx, t6.xxxx, s1, r6.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r5.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r5.xxyx, r5.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r6.w
					dp3 r2.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r5.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v5.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyzw, v5.yyyy, cb0[3].xyzw
					mad r5.xyzw, cb0[2].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[4].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[5].xyzw
					ishl r1.w, cb4[0].x, l(2)
					mov r6.x, cb3[r1.w + 8].z
					mov r6.y, cb3[r1.w + 9].z
					mov r6.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb1[46].xyzw
					mul r6.xyzw, v5.yyyy, cb2[9].xyzw
					mad r6.xyzw, cb2[8].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb2[10].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb2[11].xyzw
					div r6.xyz, r6.xyzx, r6.wwww
					sample_c_lz r2.z, r6.xyxx, t6.xxxx, s1, r6.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r5.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r5.xxyx, r5.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r6.w
					dp3 r2.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r5.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[21], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyzw, v5.yyyy, cb0[8].xyzw
					mad r5.xyzw, cb0[7].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[9].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[10].xyzw
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  mul r6.xyzw, v5.yyyy, cb3[9].xyzw
					  mad r6.xyzw, cb3[8].xyzw, v5.xxxx, r6.xyzw
					  mad r6.xyzw, cb3[10].xyzw, v5.zzzz, r6.xyzw
					  add r6.xyzw, r6.xyzw, cb3[11].xyzw
					  div r6.xyz, r6.xyzx, r6.wwww
					  mad r2.zw, r6.xxxy, cb0[6].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r2.zw, r2.zzzw
					  mad r6.xy, r6.xyxx, cb0[6].zwzz, -r2.zwzz
					  add r7.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r7.xz, r8.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r6.xxyx
					  add r9.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r9.zw, r6.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r9.xy, -r9.zwzz, r9.zwzz, r9.xyxx
					  max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r6.xy, -r6.xyxx, r6.xyxx, r7.ywyy
					  mov r10.x, r7.x
					  mov r10.y, r9.x
					  mov r10.z, r6.x
					  mov r10.w, r8.x
					  mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r7.z
					  mov r8.y, r9.y
					  mov r8.z, r6.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r10.ywyw, r10.xzxz
					  add r9.xyzw, r7.yyww, r7.xxzz
					  div r6.xy, r10.ywyy, r8.zwzz
					  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r7.xy, r7.ywyy, r9.ywyy
					  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r10.xy, r6.xyxx, cb0[6].xxxx
					  mul r10.zw, r7.xxxy, cb0[6].yyyy
					  mul r7.xyzw, r8.xyzw, r9.xyzw
					  mad r8.xyzw, r2.zwzw, cb0[6].xyxy, r10.xzyz
					  sample_c_lz r3.w, r8.xyxx, t6.xxxx, s1, r6.z
					  sample_c_lz r4.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mul r4.w, r4.w, r7.y
					  mad r3.w, r7.x, r3.w, r4.w
					  mad r8.xyzw, r2.zwzw, cb0[6].xyxy, r10.xwyw
					  sample_c_lz r2.z, r8.xyxx, t6.xxxx, s1, r6.z
					  mad r2.z, r7.z, r2.z, r3.w
					  sample_c_lz r2.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mad r2.z, r7.w, r2.w, r2.z
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r5.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r5.xxyx, r5.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r6.w
					dp3 r2.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r5.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[11].xyzx
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.zw, v1.xxxy, cb0[17].xxxy, cb0[17].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[16].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[16].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[16].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					add r3.w, -cb0[18].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[19].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[15].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[19].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[20].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[13].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[21], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v5.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyzw, v5.yyyy, cb0[8].xyzw
					mad r5.xyzw, cb0[7].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[9].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[10].xyzw
					ishl r1.w, cb4[0].x, l(2)
					mov r6.x, cb3[r1.w + 8].z
					mov r6.y, cb3[r1.w + 9].z
					mov r6.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  mul r6.xyzw, v5.yyyy, cb2[9].xyzw
					  mad r6.xyzw, cb2[8].xyzw, v5.xxxx, r6.xyzw
					  mad r6.xyzw, cb2[10].xyzw, v5.zzzz, r6.xyzw
					  add r6.xyzw, r6.xyzw, cb2[11].xyzw
					  div r6.xyz, r6.xyzx, r6.wwww
					  mad r2.zw, r6.xxxy, cb0[6].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
					  round_ni r2.zw, r2.zzzw
					  mad r6.xy, r6.xyxx, cb0[6].zwzz, -r2.zwzz
					  add r7.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r7.xz, r8.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r6.xxyx
					  add r9.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					  min r9.zw, r6.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r9.xy, -r9.zwzz, r9.zwzz, r9.xyxx
					  max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r6.xy, -r6.xyxx, r6.xyxx, r7.ywyy
					  mov r10.x, r7.x
					  mov r10.y, r9.x
					  mov r10.z, r6.x
					  mov r10.w, r8.x
					  mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r7.z
					  mov r8.y, r9.y
					  mov r8.z, r6.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r10.ywyw, r10.xzxz
					  add r9.xyzw, r7.yyww, r7.xxzz
					  div r6.xy, r10.ywyy, r8.zwzz
					  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r7.xy, r7.ywyy, r9.ywyy
					  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  mul r10.xy, r6.xyxx, cb0[6].xxxx
					  mul r10.zw, r7.xxxy, cb0[6].yyyy
					  mul r7.xyzw, r8.xyzw, r9.xyzw
					  mad r8.xyzw, r2.zwzw, cb0[6].xyxy, r10.xzyz
					  sample_c_lz r3.w, r8.xyxx, t6.xxxx, s1, r6.z
					  sample_c_lz r4.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mul r4.w, r4.w, r7.y
					  mad r3.w, r7.x, r3.w, r4.w
					  mad r8.xyzw, r2.zwzw, cb0[6].xyxy, r10.xwyw
					  sample_c_lz r2.z, r8.xyxx, t6.xxxx, s1, r6.z
					  mad r2.z, r7.z, r2.z, r3.w
					  sample_c_lz r2.w, r8.zwzz, t6.xxxx, s1, r6.z
					  mad r2.z, r7.w, r2.w, r2.z
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					lt r2.x, l(0.000000), r5.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r5.xxyx, r5.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r6.xyzw, r2.yzyy, t0.xyzw, s2
					mul r2.x, r2.x, r6.w
					dp3 r2.y, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.yyyy, t1.xyzw, s3
					mul r2.x, r2.x, r5.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[11].xyzx
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.zw, v1.xxxy, cb0[17].xxxy, cb0[17].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[16].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[16].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[16].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					mad r3.w, cb0[18].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[19].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[15].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[19].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[20].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[13].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.x, cb5[0].y, l(1.000000)
					  mul r3.yzw, v5.yyyy, cb5[2].xxyz
					  mad r3.yzw, cb5[1].xxyz, v5.xxxx, r3.yyzw
					  mad r3.yzw, cb5[3].xxyz, v5.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb5[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
					div r3.yz, v6.xxyx, v6.wwww
					sample r4.xyzw, r3.yzyy, t0.xyzw, s1
					add_sat r1.w, r1.w, r4.x
					min r3.x, r1.w, r3.x
					movc r1.w, r2.w, r3.x, r1.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					add r2.y, -cb0[9].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mad r2.xyz, r4.xyzx, cb0[11].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[12], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r3.x, cb3[r1.w + 8].z
					mov r3.y, cb3[r1.w + 9].z
					mov r3.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r3.xyzx
					add r3.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.x, cb5[0].y, l(1.000000)
					  mul r3.yzw, v5.yyyy, cb5[2].xxyz
					  mad r3.yzw, cb5[1].xxyz, v5.xxxx, r3.yyzw
					  mad r3.yzw, cb5[3].xxyz, v5.zzzz, r3.yyzw
					  add r3.yzw, r3.yyzw, cb5[4].xxyz
					  movc r3.xyz, r3.xxxx, r3.yzwy, v5.xyzx
					  add r3.xyz, r3.xyzx, -cb5[6].xyzx
					  mul r3.yzw, r3.xxyz, cb5[5].xxyz
					  mad r3.y, r3.y, l(0.250000), l(0.750000)
					  mad r4.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r3.y, r4.x
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.x, r3.xyzw, cb1[46].xyzw
					div r3.yz, v6.xxyx, v6.wwww
					sample r4.xyzw, r3.yzyy, t0.xyzw, s1
					add_sat r1.w, r1.w, r4.x
					min r3.x, r1.w, r3.x
					movc r1.w, r2.w, r3.x, r1.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[7].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s3
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[7].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[7].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t2.xyzw, s2
					mad r2.y, cb0[9].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[10].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[6].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[10].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mad r2.xyz, r4.xyzx, cb0[11].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					mul r3.xy, v5.yyyy, cb0[3].xyxx
					mad r3.xy, cb0[2].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[4].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[5].xyxx
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.z, cb5[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.zzzz, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.z, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r3.z
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.z, r4.xyzw, cb2[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s1
					add_sat r1.w, r1.w, r4.x
					min r3.z, r1.w, r3.z
					movc r1.w, r2.w, r3.z, r1.w
					sample r3.xyzw, r3.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[6].xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[11].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t2.xyzw, s4
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[11].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[11].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t3.xyzw, s3
					mad r2.y, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[14].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mad r2.xyz, r4.xyzx, cb0[15].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 9
					mov r0.x, cb4[0].x
					add r0.xyz, -v5.xyzx, cb3[r0.x + 64].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yyyy, v3.xyzx
					mad r2.xyz, v2.xyzx, r1.xxxx, r2.xyzx
					mad r2.xyz, v4.xyzx, r1.zzzz, r2.xyzx
					mul r3.xy, v5.yyyy, cb0[3].xyxx
					mad r3.xy, cb0[2].xyxx, v5.xxxx, r3.xyxx
					mad r3.xy, cb0[4].xyxx, v5.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[5].xyxx
					ishl r1.w, cb4[0].x, l(2)
					mov r4.x, cb3[r1.w + 8].z
					mov r4.y, cb3[r1.w + 9].z
					mov r4.z, cb3[r1.w + 10].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb2[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.z, cb5[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.zzzz, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.z, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r3.z
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.z, r4.xyzw, cb1[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t0.xyzw, s1
					add_sat r1.w, r1.w, r4.x
					min r3.z, r1.w, r3.z
					movc r1.w, r2.w, r3.z, r1.w
					sample r3.xyzw, r3.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[6].xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r5.xyxx, cb0[11].yyyy
					dp2 r1.w, r5.xyxx, r5.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r5.z, r1.w
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r2.xyzx
					sample r7.xyzw, r4.zwzz, t2.xyzw, s4
					mul r7.x, r7.w, r7.x
					mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r7.xy, r4.zwzz, cb0[11].yyyy
					dp2 r2.w, r7.xyxx, r7.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r7.z, r2.w
					dp3 r8.x, v2.xyzx, r5.xyzx
					dp3 r8.y, v3.xyzx, r5.xyzx
					dp3 r8.z, v4.xyzx, r5.xyzx
					add r5.xyz, -r7.xyzx, r8.xyzx
					mad r5.xyz, cb0[11].xxxx, r5.xyzx, r7.xyzx
					mad r2.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r5.xyzx, r2.xyzx
					dp3_sat r2.x, r5.xyzx, r6.xyzx
					sample r4.xyzw, r4.xyxx, t3.xyzw, s3
					mad r2.y, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mul r6.xyz, r1.wwww, cb0[14].xyzx
					mul r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r6.xyzx
					log r1.w, r2.x
					mul r1.w, r1.w, r2.y
					exp r1.w, r1.w
					mad r2.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r4.x, v2.xyzx, r5.xyzx
					dp3 r4.y, v3.xyzx, r5.xyzx
					dp3 r4.z, v4.xyzx, r5.xyzx
					dp3 r1.w, -r1.xyzx, r4.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mad r2.xyz, r4.xyzx, cb0[15].xyzx, r2.xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r8.xyzx
					mul r5.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r4.xyzx, r1.xyzx
					dp3_sat r1.x, r4.xyzx, cb1[0].xyzx
					dp3_sat r0.x, cb1[0].xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.y, r0.z, r0.z
					mul r1.y, r1.y, r1.y
					mul r0.z, r0.z, r1.y
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.y, -|r0.w|, l(1.000000)
					mul r1.z, r1.y, r1.y
					mul r1.z, r1.z, r1.z
					mul r1.y, r1.y, r1.z
					mad r0.y, r0.y, r1.y, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.x
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.xxxx, r0.yyzy
					mul r1.xyz, r0.yyyy, r3.xyzx
					mul r0.yzw, r3.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r2.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
					add r6.xyz, v5.xyzx, -cb2[1].xyzx
					max r2.z, |r6.y|, |r6.x|
					max r2.z, |r6.z|, r2.z
					add r2.z, r2.z, -cb2[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb2[2].w
					div r2.z, cb2[2].y, r2.z
					add r2.z, r2.z, -cb2[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r6.xyzx, t5.xxxx, s1, r2.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t1.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t1.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t2.xyzw, s3
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t3.xyzw, s5
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v5.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r6.x, cb3[r1.w + 8].z
					mov r6.y, cb3[r1.w + 9].z
					mov r6.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb1[46].xyzw
					add r6.xyz, v5.xyzx, -cb1[1].xyzx
					max r2.z, |r6.y|, |r6.x|
					max r2.z, |r6.z|, r2.z
					add r2.z, r2.z, -cb1[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb1[2].w
					div r2.z, cb1[2].y, r2.z
					add r2.z, r2.z, -cb1[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r6.xyzx, t5.xxxx, s1, r2.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t1.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t1.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t2.xyzw, s3
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t3.xyzw, s5
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r6.xyz, v5.xyzx, -cb2[1].xyzx
					  max r2.z, |r6.y|, |r6.x|
					  max r2.z, |r6.z|, r2.z
					  add r2.z, r2.z, -cb2[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb2[2].w
					  div r2.z, cb2[2].y, r2.z
					  add r2.z, r2.z, -cb2[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t5.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t5.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t5.xxxx, s1, r2.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t5.xxxx, s1, r2.z
					  dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t1.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t1.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t2.xyzw, s3
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t3.xyzw, s5
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v5.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r6.x, cb3[r1.w + 8].z
					mov r6.y, cb3[r1.w + 9].z
					mov r6.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r6.xyz, v5.xyzx, -cb1[1].xyzx
					  max r2.z, |r6.y|, |r6.x|
					  max r2.z, |r6.z|, r2.z
					  add r2.z, r2.z, -cb1[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb1[2].w
					  div r2.z, cb1[2].y, r2.z
					  add r2.z, r2.z, -cb1[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t5.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t5.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t5.xxxx, s1, r2.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t5.xxxx, s1, r2.z
					  dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s2
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t1.xyzw, s4
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t1.xyzw, s4
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t2.xyzw, s3
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t3.xyzw, s5
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
					add r6.xyz, v5.xyzx, -cb2[1].xyzx
					max r2.z, |r6.y|, |r6.x|
					max r2.z, |r6.z|, r2.z
					add r2.z, r2.z, -cb2[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb2[2].w
					div r2.z, cb2[2].y, r2.z
					add r2.z, r2.z, -cb2[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r6.xyzx, t6.xxxx, s1, r2.z
					add r2.w, -cb3[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb3[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r5.xyzw, r5.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r5.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v5.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r6.x, cb3[r1.w + 8].z
					mov r6.y, cb3[r1.w + 9].z
					mov r6.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb1[46].xyzw
					add r6.xyz, v5.xyzx, -cb1[1].xyzx
					max r2.z, |r6.y|, |r6.x|
					max r2.z, |r6.z|, r2.z
					add r2.z, r2.z, -cb1[2].z
					max r2.z, r2.z, l(0.000010)
					mul r2.z, r2.z, cb1[2].w
					div r2.z, cb1[2].y, r2.z
					add r2.z, r2.z, -cb1[2].x
					add r2.z, -r2.z, l(1.000000)
					sample_c_lz r2.z, r6.xyzx, t6.xxxx, s1, r2.z
					add r2.w, -cb2[24].x, l(1.000000)
					mad r2.z, r2.z, r2.w, cb2[24].x
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r5.xyzw, r5.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r5.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					mad r3.w, cb0[13].x, l(-1.000000), l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r6.xyz, v5.xyzx, -cb2[1].xyzx
					  max r2.z, |r6.y|, |r6.x|
					  max r2.z, |r6.z|, r2.z
					  add r2.z, r2.z, -cb2[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb2[2].w
					  div r2.z, cb2[2].y, r2.z
					  add r2.z, r2.z, -cb2[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t6.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t6.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t6.xxxx, s1, r2.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t6.xxxx, s1, r2.z
					  dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb3[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb3[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r5.xyzw, r5.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r5.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[16], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[26], immediateIndexed
					dcl_constantbuffer CB3[66], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					add r0.xyz, -v5.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mov r1.w, cb4[0].x
					add r2.xyz, -v5.xyzx, cb3[r1.w + 64].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mul r4.xyz, r3.yyyy, v3.xyzx
					mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
					mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
					mul r5.xyz, v5.yyyy, cb0[3].xyzx
					mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[5].xyzx
					ishl r1.w, cb4[0].x, l(2)
					mov r6.x, cb3[r1.w + 8].z
					mov r6.y, cb3[r1.w + 9].z
					mov r6.z, cb3[r1.w + 10].z
					dp3 r1.w, r2.xyzx, r6.xyzx
					add r2.xyz, v5.xyzx, -cb2[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb2[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb5[2].xyzx
					  mad r6.xyz, cb5[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb5[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r6.xxyz, v5.xxyz
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r6.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r6.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.z, r2.y
					  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r6.xyzw, cb1[46].xyzw
					lt r2.z, r1.w, l(0.990000)
					if_nz r2.z
					  add r6.xyz, v5.xyzx, -cb1[1].xyzx
					  max r2.z, |r6.y|, |r6.x|
					  max r2.z, |r6.z|, r2.z
					  add r2.z, r2.z, -cb1[2].z
					  max r2.z, r2.z, l(0.000010)
					  mul r2.z, r2.z, cb1[2].w
					  div r2.z, cb1[2].y, r2.z
					  add r2.z, r2.z, -cb1[2].x
					  add r2.z, -r2.z, l(1.000000)
					  add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t6.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t6.xxxx, s1, r2.z
					  add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t6.xxxx, s1, r2.z
					  add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.w, r6.xyzx, t6.xxxx, s1, r2.z
					  dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.w, -cb2[24].x, l(1.000000)
					  mad r2.z, r2.z, r2.w, cb2[24].x
					else 
					  mov r2.z, l(1.000000)
					endif 
					add_sat r1.w, r1.w, r2.z
					min r2.y, r1.w, r2.y
					movc r1.w, r2.x, r2.y, r1.w
					dp3 r2.x, r5.xyzx, r5.xyzx
					sample r2.xyzw, r2.xxxx, t0.xyzw, s3
					sample r5.xyzw, r5.xyzx, t1.xyzw, s2
					mul r2.x, r2.x, r5.w
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[6].xyzx
					mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r5.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r6.xyzw, v1.xyxx, t2.xyzw, s5
					mul r6.x, r6.w, r6.x
					mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r6.xy, r6.xyxx, cb0[11].yyyy
					dp2 r1.w, r6.xyxx, r6.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r6.z, r1.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r7.xyz, r1.wwww, r4.xyzx
					sample r8.xyzw, r5.zwzz, t2.xyzw, s5
					mul r8.x, r8.w, r8.x
					mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r8.xy, r5.zwzz, cb0[11].yyyy
					dp2 r2.w, r8.xyxx, r8.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r8.z, r2.w
					dp3 r9.x, v2.xyzx, r6.xyzx
					dp3 r9.y, v3.xyzx, r6.xyzx
					dp3 r9.z, v4.xyzx, r6.xyzx
					add r6.xyz, -r8.xyzx, r9.xyzx
					mad r6.xyz, cb0[11].xxxx, r6.xyzx, r8.xyzx
					mad r4.xyz, -r4.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
					dp3_sat r1.w, r6.xyzx, r4.xyzx
					dp3_sat r2.w, r6.xyzx, r7.xyzx
					sample r4.xyzw, r5.xyxx, t3.xyzw, s4
					add r3.w, -cb0[13].x, l(10.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mul r5.xyz, r1.wwww, cb0[14].xyzx
					mul r5.xyz, r5.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
					mad r4.xyz, r4.xyzx, cb0[10].xyzx, r5.xyzx
					log r1.w, r2.w
					mul r1.w, r1.w, r3.w
					exp r1.w, r1.w
					mad r4.xyz, r1.wwww, cb0[14].xyzx, r4.xyzx
					dp3 r5.x, v2.xyzx, r6.xyzx
					dp3 r5.y, v3.xyzx, r6.xyzx
					dp3 r5.z, v4.xyzx, r6.xyzx
					dp3 r1.w, -r3.xyzx, r5.xyzx
					add r1.w, r1.w, r1.w
					mad r5.xyz, r5.xyzx, -r1.wwww, -r3.xyzx
					sample r5.xyzw, r5.xyzx, t4.xyzw, s6
					mad r4.xyz, r5.xyzx, cb0[15].xyzx, r4.xyzx
					dp3 r1.w, r9.xyzx, r9.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r9.xyzx
					mul r6.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r5.xyzx, r3.xyzx
					dp3_sat r1.w, r5.xyzx, r1.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					dp2 r0.y, r0.xxxx, r0.xxxx
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					add r0.z, |r0.w|, r1.w
					add r0.z, r0.z, l(0.000010)
					div r0.z, l(0.500000), r0.z
					mul r0.z, r0.z, l(1.000000)
					mul r0.yz, r1.wwww, r0.yyzy
					mul r1.xyz, r0.yyyy, r2.xyzx
					mul r0.yzw, r2.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					mad r0.x, r0.x, l(0.960000), l(0.040000)
					mul r0.xyz, r0.xxxx, r0.yzwy
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					add r1.xyz, -r0.xyzx, r4.xyzx
					mad o0.xyz, cb0[8].xxxx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			LOD 32500
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "META" "QUEUE" = "" "RenderType" = "" }
			Cull Off
			GpuProgramID 185372
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
					movc r0.xyz, cb3[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb2[1].xyxx, cb2[1].zwzz
					movc r0.xyz, cb3[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					dp3 r0.y, v2.xyzx, cb0[4].xyzx
					dp3 r0.z, v2.xyzx, cb0[5].xyzx
					dp3 r0.x, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb0[1].yzxy
					mad r1.xyz, cb0[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb0[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.y, r2.x
					mul r3.xyz, v0.yyyy, cb0[1].xyzx
					mad r3.xyz, cb0[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb0[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb0[3].xyzx, v0.wwww, r3.xyzx
					mov o1.w, r3.x
					mov o1.x, r1.z
					mov o1.z, r0.y
					mov o2.x, r1.x
					mov o3.x, r1.y
					mov o2.z, r0.z
					mov o3.z, r0.x
					mov o2.w, r3.y
					mov o3.w, r3.z
					mov o2.y, r2.y
					mov o3.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[32], dynamicIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					ishl r1.x, cb2[0].x, l(2)
					mul r2.xyzw, r0.yyyy, cb1[r1.x + 25].xyzw
					mad r2.xyzw, cb1[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
					mad r2.xyzw, cb1[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
					mad o0.xyzw, cb1[r1.x + 27].xyzw, r0.wwww, r2.xyzw
					dp3 r0.y, v2.xyzx, cb0[4].xyzx
					dp3 r0.z, v2.xyzx, cb0[5].xyzx
					dp3 r0.x, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb0[1].yzxy
					mad r1.xyz, cb0[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb0[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb0[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o1.y, r2.x
					mul r3.xyz, v0.yyyy, cb0[1].xyzx
					mad r3.xyz, cb0[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb0[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb0[3].xyzx, v0.wwww, r3.xyzx
					mov o1.w, r3.x
					mov o1.x, r1.z
					mov o1.z, r0.y
					mov o2.x, r1.x
					mov o3.x, r1.y
					mov o2.z, r0.z
					mov o3.z, r0.x
					mov o2.w, r3.y
					mov o3.w, r3.z
					mov o2.y, r2.y
					mov o3.y, r2.z
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float       
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_output o0.xyzw
					dcl_temps 1
					min r0.xyz, cb0[12].yyyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float       
					// TEXCOORD                 1   xyzw        2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_output o0.xyzw
					dcl_temps 1
					min r0.xyz, cb0[12].yyyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "SHADOWCASTER"
			LOD 32500
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "SHADOWCASTER" "QUEUE" = "" "RenderType" = "" "SHADOWSUPPORT" = "true" }
			GpuProgramID 240202
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					ishl r1.x, cb4[0].x, l(2)
					mul r3.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
					mad r3.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r3.xyzw
					mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r3.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[32], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.x, r2.xyzx, r1.xyzx
					mad r1.x, -r1.x, r1.x, l(1.000000)
					sqrt r1.x, r1.x
					mul r1.x, r1.x, cb1[5].z
					mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
					ne r1.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					ishl r1.x, cb4[0].x, l(2)
					mul r3.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
					mad r3.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r3.xyzw
					mad r3.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r3.xyzw
					mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r3.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mov o1.xy, v3.xyxx
					mul r0.xyz, v1.yyyy, cb2[1].yzxy
					mad r0.xyz, cb2[0].yzxy, v1.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].yzxy, v1.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, r2.zxyz
					mad r1.xyz, r2.yzxy, r0.yzxy, -r1.xyzx
					mul r0.w, v1.w, cb2[9].w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.y, r1.x
					mov o2.z, r2.x
					mul r3.xyz, v0.yyyy, cb2[1].xyzx
					mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
					mov o2.w, r3.x
					mov o2.x, r0.z
					mov o3.x, r0.x
					mov o4.x, r0.y
					mov o3.z, r2.y
					mov o4.z, r2.z
					mov o3.w, r3.y
					mov o4.w, r3.z
					mov o3.y, r1.y
					mov o4.y, r1.z
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "UNITY_SINGLE_PASS_STEREO" "UNITY_PASS_SHADOWCASTER" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float       
					// TEXCOORD                 2   xyzw        2     NONE   float       
					// TEXCOORD                 3   xyzw        3     NONE   float       
					// TEXCOORD                 4   xyzw        4     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
	CustomEditor "ASEMaterialInspector"
}