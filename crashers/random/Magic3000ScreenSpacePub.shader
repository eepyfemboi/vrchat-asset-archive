Shader "Magic3000/ScreenSpacePub" {
	Properties {
		[Normal] _DistortionNormalMap ("Distortion Normal Map", 2D) = "bump" {}
		[Normal] _ShakeNormalMap ("Shake Normal Map", 2D) = "bump" {}
		_DistortionSpeed ("Distortion Speed", Range(0, 10)) = 0
		_DistortionOffset ("Distortion Offset", Range(0, 1)) = 0
		[Toggle] _StableDistortionOffset ("Stable Distortion Offset", Float) = 1
		_ShakeSpeed ("Shake Speed", Range(0, 10)) = 0
		_ShakeOffset ("Shake Offset", Range(0, 1)) = 0
		[Toggle] _StableShakeOffset ("Stable Shake Offset", Float) = 1
		_Skake3018SpeedX ("Skake 3018 Speed X", Range(0, 100)) = 0
		_Skake3018OffsetX ("Skake 3018 Offset X", Range(-100, 100)) = 0
		_Skake3018SpeedY ("Skake 3018 Speed Y", Range(0, 100)) = 0
		_Skake3018OffsetY ("Skake 3018 Offset Y", Range(-100, 100)) = 0
		_Float0 ("Girlscam Speed", Float) = 1
		_GirlscamOffset ("Girlscam Offset", Range(0, 1)) = 0
		[Toggle] _StableGirlscamOffset ("Stable Girlscam Offset", Float) = 1
		_DesaturateOffset ("Desaturate Offset", Range(-10, 10)) = 0
		_GrayscaleOffset ("Grayscale Offset", Range(-10, 10)) = 0
		[HDR] _GrayscaleLerp ("Grayscale Lerp", Vector) = (1,1,1,1)
		[Toggle] _RGB ("RGB", Float) = 0
		_RedXOffset ("Red X Offset", Range(-0.1, 0.1)) = 0
		_RedYOffset ("Red Y Offset", Range(-0.1, 0.1)) = 0
		[Toggle] _StableRGBRedOffset ("Stable RGB Red Offset", Float) = 1
		_GreenXOffset ("Green X Offset", Range(-0.1, 0.1)) = 0
		_GreenYOffset ("Green Y Offset", Range(-0.1, 0.1)) = 0
		[Toggle] _StableRGBGreenOffset ("Stable RGB Green Offset", Float) = 1
		_BlueXOffset ("Blue X Offset", Range(-0.1, 0.1)) = 0
		_BlueYOffset ("Blue Y Offset", Range(-0.1, 0.1)) = 0
		[Toggle] _StableRGBBlueOffset ("Stable RGB Blue Offset", Float) = 1
		[Toggle] _ChromaticAberration ("Chromatic Aberration", Float) = 0
		_CASpeed ("CA Speed", Range(0, 100)) = 15
		_CAOffset ("CA Offset", Range(-0.01, 0.01)) = 0.0015
		[Toggle] _Blur ("Blur", Float) = 0
		_BlurLerp ("Blur Lerp", Range(0, 1)) = 1
		[Toggle] _BlurAuto ("Blur Auto", Float) = 0
		_BlurSpeed ("Blur Speed", Range(0, 100)) = 5
		_BlurOffset ("Blur Offset", Range(0, 1)) = 0
		[Toggle] _StableBlurOffset ("Stable Blur Offset", Float) = 1
		[Toggle] _RGBBlur ("RGB Blur", Float) = 0
		_RGBBlurLerp ("RGB Blur Lerp", Range(0, 1)) = 1
		[Toggle] _RGBBlurAuto ("RGB Blur Auto", Float) = 0
		_RGBBlurSpeed ("RGB Blur Speed", Range(0, 100)) = 5
		_RGBBlurOffset ("RGB Blur Offset", Range(0, 1)) = 0.1
		_RGBBlurOffset2 ("RGB Blur Offset 2", Range(0, 2)) = 2
		[Toggle] _StableRGBBlurOffset ("Stable RGB Blur Offset", Float) = 1
		_Neon ("Neon", Range(0, 1)) = 0
		_NeonOffset ("Neon Offset", Range(0, 0.01)) = 0.001
		[Toggle] _StableNeonOffset ("Stable Neon Offset", Float) = 1
		_NeonNormalize ("Neon Normalize", Range(0, 1)) = 0
		[HDR] _NormalizeColor ("Normalize Color", Vector) = (0,0,0,1)
		[HDR] _NeonColor ("Neon Color", Vector) = (0,0,0,1)
		[HDR] _Color ("Color", Vector) = (1,1,1,1)
		_ZoomOffset ("Zoom Offset", Range(-1, 1)) = 0
		_ZoomDegree ("Zoom Degree", Range(0, 1)) = 0.75
		_ZoomDirection ("Zoom Direction", Range(0, 1)) = 1
		_Brightness ("Brightness", Range(0, 1)) = 1
		_Pixelate ("Pixelate", Range(0.0001, 100)) = 0.0001
		_GammaCorrection ("Gamma Correction", Range(0, 2)) = 0
		[Toggle] _8bittextureemulating ("8-bit texture emulating", Float) = 0
		_8bitOffset ("8-bit Offset", Range(1, 256)) = 1
		_Negative ("Negative", Range(0, 1)) = 0
		_NegativeOffset ("Negative Offset", Range(0, 1)) = 1
		_HUE ("HUE", Range(0, 1)) = 0
		_HUEOffset ("HUE Offset", Range(0, 1)) = 0
		[Toggle] _AutoHUE ("Auto HUE", Float) = 0
		_HUESpeed ("HUE Speed", Float) = 0.1
		_Xflipscreen ("X flip-screen", Range(0, 1)) = 0
		_Yflipscreen ("Y flip-screen", Range(0, 1)) = 0
		_Screenrotate ("Screen rotate", Range(0, 1)) = 0
		_Xrotatescreen ("X rotate-screen", Range(0, 1)) = 0
		_Yrotatescreen ("Y rotate-screen", Range(0, 1)) = 0
		_MinDistance ("Min Distance", Float) = 4
		_MaxDistance ("Max Distance", Float) = 5
		_VREffectsMultiply ("VR Effects Multiply", Float) = 0.5
		_DesktopEffectsMultiply ("Desktop Effects Multiply", Float) = 1
		[HideInInspector] _texcoord ("", 2D) = "white" {}
		[HideInInspector] __dirty ("", Float) = 1
	}
	SubShader {
		Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "QUEUE" = "Overlay+0" "RenderType" = "Overlay" }
		GrabPass {
			"_MagicScreenSpace"
		}
		Pass {
			Name "FORWARD"
			Tags { "FORCENOSHADOWCASTING" = "true" "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Overlay+0" "RenderType" = "Overlay" }
			ZTest Always
			ZWrite Off
			Cull Front
			GpuProgramID 17679
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o3.zw, r0.zzzw
					add o3.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.x, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.x + 25].xyzw
					mad r2.xyzw, cb2[r0.x + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.x + 26].xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, cb2[r0.x + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r0.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o1.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb0[4].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					add r0.xy, r1.zzzz, r1.xwxx
					mov r1.x, cb3[0].x
					mul r1.yz, r0.wwww, cb2[r1.x + 66].zzwz
					mad o3.xy, r0.xyxx, cb2[r1.x + 66].xyxx, r1.yzyy
					mov o3.zw, r0.zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[22], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.x, v3.w, l(0.000000)
					div r0.xy, v3.xyxx, r0.xxxx
					mul r0.z, cb0[10].y, cb1[0].y
					sincos r1.x, r2.x, r0.z
					mov r3.z, r1.x
					mov r3.y, r2.x
					mov r3.x, -r1.x
					dp2 r1.y, r0.xyxx, r3.xyxx
					dp2 r1.x, r0.xyxx, r3.yzyy
					sample r0.xyzw, r1.xyxx, t0.xzwy, s1
					mul r0.z, r0.z, r0.x
					mad r0.xy, r0.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xyz, v2.yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, v2.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					mul r2.xyzw, r1.yyyy, cb3[1].xyzw
					mad r2.xyzw, cb3[0].xyzw, r1.xxxx, r2.xyzw
					mad r1.xyzw, cb3[2].xyzw, r1.zzzz, r2.xyzw
					add r1.xyzw, r1.xyzw, cb3[3].xyzw
					mul r2.xyz, r1.yyyy, cb4[18].xwyx
					mad r2.xyz, cb4[17].xwyx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb4[19].xwyx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb4[20].xwyx, r1.wwww, r1.xyzx
					mul r1.xzw, r1.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r0.zw, r1.zzzz, r1.xxxw
					div r0.zw, r0.zzzw, r1.yyyy
					mul r1.xyz, cb3[3].yyyy, cb4[18].xwyx
					mad r1.xyz, cb4[17].xwyx, cb3[3].xxxx, r1.xyzx
					mad r1.xyz, cb4[19].xwyx, cb3[3].zzzz, r1.xyzx
					mad r1.xyz, cb4[20].xwyx, cb3[3].wwww, r1.xyzx
					mul r1.xzw, r1.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r1.xz, r1.zzzz, r1.xxwx
					div r1.xy, r1.xzxx, r1.yyyy
					add r1.xy, -r0.zwzz, r1.xyxx
					add r2.xyz, cb2[20].xyzx, cb2[21].xyzx
					add r2.xyz, r2.xyzx, -cb1[4].xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r3.xyz, -cb1[4].xyzx, cb3[3].xyzx
					dp3 r1.z, r3.xyzx, r3.xyzx
					rsq r1.z, r1.z
					mul r3.xyz, r1.zzzz, r3.xyzx
					dp3 r1.z, r2.xyzx, r3.xyzx
					add r1.w, r1.z, -cb0[6].w
					lt r1.z, cb0[6].w, r1.z
					add r2.x, -cb0[6].w, l(1.000000)
					div r1.w, r1.w, r2.x
					and r1.z, r1.w, r1.z
					mul r1.z, r1.z, cb0[6].z
					add r1.w, -cb0[6].x, cb0[6].y
					add r2.xyz, cb1[4].xyzx, -cb3[3].xyzx
					dp3 r2.x, |r2.xyzx|, |r2.xyzx|
					sqrt r2.x, r2.x
					add r2.y, r2.x, -cb0[6].x
					div_sat r1.w, r2.y, r1.w
					mul r1.z, r1.z, r1.w
					mad r0.zw, r1.zzzz, r1.xxxy, r0.zzzw
					mul r1.x, cb0[5].x, cb1[0].y
					sincos r1.x, null, r1.x
					mul r1.y, cb0[5].w, cb0[5].y
					mul r1.x, r1.x, r1.y
					mul r1.x, r1.x, r1.w
					mad r1.y, r1.x, l(0.020000), r0.z
					mul r0.z, cb0[7].x, cb1[0].y
					sincos r0.z, null, r0.z
					mul r1.x, cb0[5].w, cb0[7].y
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.z, r1.w
					mad r1.z, r0.z, l(0.020000), r0.w
					add r0.zw, -r1.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					add r0.zw, -r1.yyyz, r0.zzzw
					mad r2.yz, cb0[8].xxyx, r0.wwzw, r1.zzyz
					mad r0.zw, cb0[7].zzzw, r0.zzzw, r1.yyyz
					add r2.yz, -r0.zzwz, r2.yyzy
					mad r0.zw, cb0[8].zzzz, r2.yyyz, r0.zzzw
					add r0.zw, -r1.yyyz, r0.zzzw
					mad r3.yz, r1.wwww, r0.zzwz, r1.yyzy
					mul r0.z, cb0[8].w, cb1[0].y
					sincos r0.z, null, r0.z
					add r0.z, r0.z, l(1.000000)
					mul r0.w, cb0[5].w, cb0[9].y
					div r0.w, r0.w, r2.x
					mad r1.x, cb0[5].w, cb0[9].y, -r0.w
					mad r0.w, cb0[9].x, r1.x, r0.w
					mad r0.w, -r1.w, r0.w, l(0.999999)
					mad r3.w, r0.z, l(0.000001), r0.w
					dp2 r0.z, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
					add r0.w, -r3.w, l(1.000000)
					mul_sat r0.w, r0.w, l(1.200000)
					sincos r0.z, null, r0.z
					mul r1.x, r0.z, l(43758.550781)
					round_ni r1.x, r1.x
					mad r0.z, r0.z, l(43758.550781), -r1.x
					mad r0.z, r0.z, l(2.000000), l(-1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r0.w, r1.x
					mad r1.x, r1.x, l(0.050000), l(0.002000)
					ge r1.x, |r0.z|, r1.x
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					mad r0.z, r0.z, r0.w, r3.y
					round_ni r0.w, r0.z
					add r3.x, -r0.w, r0.z
					div r0.zw, cb1[6].xxxy, cb0[9].zzzz
					mul r1.xy, r0.zwzz, r3.xzxx
					round_ne r1.xy, r1.xyxx
					div r0.zw, r1.xxxy, r0.zzzw
					mul r1.x, cb0[5].w, cb0[10].x
					div r1.x, r1.x, r2.x
					mad r1.y, cb0[10].x, cb0[5].w, -r1.x
					mad r1.x, cb0[9].w, r1.y, r1.x
					mul r1.x, r1.x, r1.w
					mad r0.xy, r0.xyxx, r1.xxxx, r0.zwzz
					add r0.zw, -r0.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					add r0.xy, -r0.zwzz, r0.xyxx
					add r1.x, cb0[11].y, l(-1.000000)
					mad r1.x, r1.w, r1.x, l(1.000000)
					mad r0.zw, r1.xxxx, r0.xxxy, r0.zzzw
					mul r1.x, cb0[5].w, cb0[14].x
					mul r1.y, cb0[14].y, cb1[0].y
					sincos r3.x, r4.x, r1.y
					mov r4.y, r3.x
					dp2 r1.x, -r1.xxxx, r4.xyxx
					mad r1.x, cb0[14].x, cb0[5].w, r1.x
					div r3.x, r1.x, r2.x
					div r3.z, -r1.x, r2.x
					mov r3.yw, l(0,0,0,0)
					mad r1.xy, r1.wwww, r3.xyxx, r0.zwzz
					mad r2.yz, r1.wwww, r3.zzwz, r0.zzwz
					sample r3.xyzw, r2.yzyy, t1.xyzw, s0
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mov r3.x, r4.x
					mul r1.xy, cb0[5].wwww, cb0[13].zwzz
					div r1.xy, r1.xyxx, r2.xxxx
					mad r2.yz, cb0[13].zzwz, cb0[5].wwww, -r1.xxyx
					mad r1.xy, cb0[13].yyyy, r2.yzyy, r1.xyxx
					mad r1.xy, r1.wwww, r1.xyxx, r0.zwzz
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mul r5.w, cb0[5].w, cb0[13].x
					mul r5.xyz, cb0[5].wwww, cb0[12].xywx
					div r1.xy, r5.zwzz, r2.xxxx
					add r2.yz, -r1.xxyx, r5.zzwz
					div r5.xy, r5.xyxx, r2.xxxx
					mad r1.xy, cb0[12].zzzz, r2.yzyy, r1.xyxx
					mad r1.xy, r1.wwww, r1.xyxx, r0.zwzz
					sample r6.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.y, r6.y
					mad r1.xy, cb0[12].xyxx, cb0[5].wwww, -r5.xyxx
					mad r1.xy, cb0[11].wwww, r1.xyxx, r5.xyxx
					mad r1.xy, r1.wwww, r1.xyxx, r0.zwzz
					sample r5.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.x, r5.x
					sample r5.xyzw, r0.zwzz, t1.xyzw, s0
					mov r3.y, r5.y
					add r1.xyz, r3.xyzx, -r4.xyzx
					mad r1.xyz, cb0[11].zzzz, r1.xyzx, r4.xyzx
					add r1.xyz, -r5.xyzx, r1.xyzx
					mad r1.xyz, cb0[4].wwww, r1.xyzx, r5.xyzx
					mov r4.y, l(0)
					mad r2.y, cb1[0].y, cb0[15].x, -cb0[15].x
					mad r2.y, cb0[14].w, r2.y, cb0[15].x
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].w, cb0[15].y
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r2.x
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[14].z, r2.y, r2.w
					mul r4.x, r1.w, r2.y
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					add r7.xyz, r5.xyzx, r7.xyzx
					mov r4.zw, -r4.xxxx
					mad r8.xyzw, r4.xxxx, l(-1.000000, 1.000000, 1.000000, -1.000000), r0.zwzw
					add r4.xyzw, r0.zwzw, r4.zyyw
					sample r9.xyzw, r4.xyxx, t1.xyzw, s0
					sample r4.xyzw, r4.zwzz, t1.xyzw, s0
					add r7.xyz, r7.xyzx, r9.xyzx
					add r6.xyz, r6.xyzx, r7.xyzx
					add r4.xyz, r4.xyzx, r6.xyzx
					mad r2.zw, -r1.wwww, r2.yyyy, r0.zzzw
					mad r6.xy, r1.wwww, r2.yyyy, r0.zwzz
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					sample r7.xyzw, r2.zwzz, t1.xyzw, s0
					add r2.yzw, r4.xxyz, r7.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					sample r4.xyzw, r8.xyxx, t1.xyzw, s0
					sample r6.xyzw, r8.zwzz, t1.xyzw, s0
					add r2.yzw, r2.yyzw, r4.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					mad r2.yzw, r2.yyzw, l(0.000000, 0.111111, 0.111111, 0.111111), -r1.xxyz
					mul r2.yzw, r2.yyzw, cb0[15].zzzz
					mad r1.xyz, cb0[4].zzzz, r2.yzwy, r1.xyzx
					mad r2.y, cb1[0].y, cb0[16].y, -cb0[16].y
					mad r2.y, cb0[16].x, r2.y, cb0[16].y
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].w, cb0[16].z
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r2.x
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[15].w, r2.y, r2.w
					mad r2.zw, -r1.wwww, r2.yyyy, r0.zzzw
					mul r4.x, r1.w, r2.y
					sample r6.xyzw, r2.zwzz, t1.xyzw, s0
					mad r2.yz, r4.xxxx, l(0.000000, -1.000000, 1.000000, 0.000000), r0.zzwz
					sample r7.xyzw, r2.yzyy, t1.xyzw, s0
					add r2.y, r6.z, r7.z
					mul r3.z, r2.y, l(0.500000)
					mov r4.y, l(0)
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.zwzz, t1.xyzw, s0
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					mov r4.zw, -r4.xxxx
					add r8.xyzw, r0.zwzw, r4.yzwy
					add r9.xyzw, r0.zwzw, r4.xwxx
					sample r10.xyzw, r8.xyxx, t1.xyzw, s0
					sample r8.xyzw, r8.zwzz, t1.xyzw, s0
					mov r6.z, r8.z
					add r2.y, r7.y, r10.y
					mul r6.y, r2.y, l(0.500000)
					sample r7.xyzw, r9.xyxx, t1.xyzw, s0
					sample r8.xyzw, r9.zwzz, t1.xyzw, s0
					add r2.y, r7.x, r8.x
					mul r3.x, r2.y, l(0.500000)
					add r2.yzw, r3.xxyz, r6.xxyz
					mad r4.yz, -r4.xxxx, cb0[16].wwww, r0.zzwz
					mul r6.x, r4.x, cb0[16].w
					sample r4.xyzw, r4.yzyy, t1.xyzw, s0
					mad r4.xy, r6.xxxx, l(-1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
					sample r7.xyzw, r4.xyxx, t1.xyzw, s0
					add r3.w, r4.z, r7.z
					mul r3.z, r3.w, l(0.500000)
					mov r6.y, l(0)
					add r4.xyzw, r0.zwzw, r6.xyyx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s0
					sample r4.xyzw, r4.xyxx, t1.xyzw, s0
					mov r6.zw, -r6.xxxx
					add r8.xyzw, r0.zwzw, r6.xwxx
					add r6.xyzw, r0.zwzw, r6.yzwy
					sample r9.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					mov r4.z, r6.z
					add r3.w, r7.y, r9.y
					mul r4.y, r3.w, l(0.500000)
					sample r6.xyzw, r8.xyxx, t1.xyzw, s0
					sample r7.xyzw, r8.zwzz, t1.xyzw, s0
					add r3.w, r6.x, r7.x
					mul r3.x, r3.w, l(0.500000)
					add r3.xyz, r3.xyzx, r4.xyzx
					add r2.yzw, r2.yyzw, r3.xxyz
					mad r2.yzw, r2.yyzw, l(0.000000, 0.250000, 0.250000, 0.250000), -r1.xxyz
					mul r2.yzw, r2.yyzw, cb0[17].xxxx
					mad r1.xyz, cb0[4].yyyy, r2.yzwy, r1.xyzx
					mul r2.y, cb0[5].w, cb0[19].y
					div r2.x, r2.y, r2.x
					mad r2.y, cb0[19].y, cb0[5].w, -r2.x
					mad r2.x, cb0[19].x, r2.y, r2.x
					mad r0.xy, r1.wwww, r2.xxxx, r0.zwzz
					mad r2.xy, -r1.wwww, r2.xxxx, r0.zwzz
					sample r3.xyzw, r0.xwxx, t1.xyzw, s0
					sample r4.xyzw, r0.zyzz, t1.xyzw, s0
					mov r2.zw, r0.wwwz
					mad r0.xyzw, r5.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r3.xyzw
					add r0.xyzw, -r4.xyzw, r0.xyzw
					sample r3.xyzw, r2.xzxx, t1.xyzw, s0
					sample r2.xyzw, r2.wyww, t1.xyzw, s0
					add r0.xyzw, r0.xyzw, -r3.xyzw
					add r0.xyzw, -r2.xyzw, r0.xyzw
					dp4 r0.w, r0.xyzw, r0.xyzw
					sqrt r2.x, r0.w
					rsq r0.w, r0.w
					mul r2.yzw, r0.wwww, r0.xxyz
					lt r0.w, r2.x, l(0.010000)
					lt r2.x, l(0.010000), r2.x
					mul r3.xyz, r1.wwww, cb0[20].xyzx
					and r3.xyz, r0.wwww, r3.xyzx
					movc r2.xyz, r2.xxxx, r2.yzwy, r3.xyzx
					add r2.xyz, -r0.xyzx, r2.xyzx
					mad r0.xyz, cb0[21].xxxx, r2.xyzx, r0.xyzx
					add r2.xyz, cb0[18].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					add r0.xyz, -r1.xyzx, r0.xyzx
					mad r0.xyz, cb0[21].yyyy, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, cb0[22].x, cb0[23].x
					mul r0.w, r0.w, r1.w
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, r1.w, cb0[23].y
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					add r1.xyz, cb0[24].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r1.xyz, r1.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					add r1.xy, cb0[25].xzxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.wwww, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					div r0.xyz, r0.xyzx, r1.xxxx
					round_z r0.w, r1.y
					div r0.w, l(256.000000), r0.w
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, -r0.xyzx
					mul r1.xyz, r1.xyzx, r1.wwww
					mul r1.w, r1.w, cb0[27].x
					mad r0.xyz, cb0[25].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyz, r0.wwww, r0.xyzx
					round_ni r1.xyz, r1.xyzx
					div r1.xyz, r1.xyzx, r0.wwww
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad r0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), cb0[25].wwww
					mad r0.xyz, cb0[26].xxxx, r1.xyzx, r0.xyzx
					ge r0.w, r0.y, r0.z
					and r0.w, r0.w, l(0x3f800000)
					add r1.xy, -r0.zyzz, r0.yzyy
					mad r1.xy, r0.wwww, r1.xyxx, r0.zyzz
					ge r0.w, r0.x, r1.x
					and r0.w, r0.w, l(0x3f800000)
					mov r1.z, r0.x
					add r2.xyz, -r1.xyzx, r1.zyxz
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					min r0.w, r1.y, r1.z
					add r0.w, -r0.w, r1.x
					add r1.y, r1.x, l(0.000000)
					div r0.w, r0.w, r1.y
					mad r1.y, cb0[26].w, cb1[0].y, -cb0[26].z
					mad r1.y, cb0[26].y, r1.y, cb0[26].z
					add r2.xyz, r1.yyyy, l(1.000000, 0.666667, 0.333333, 0.000000)
					frc r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -3.000000, -3.000000, 0.000000)
					add_sat r2.xyz, |r2.xyzx|, l(-1.000000, -1.000000, -1.000000, 0.000000)
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r1.xxxx, r2.xyzx, -r0.xyzx
					mad o0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.x, v3.w, l(0.000000)
					div r0.xy, v3.xyxx, r0.xxxx
					mul r0.z, cb0[10].y, cb1[0].y
					sincos r1.x, r2.x, r0.z
					mov r3.z, r1.x
					mov r3.y, r2.x
					mov r3.x, -r1.x
					dp2 r1.y, r0.xyxx, r3.xyxx
					dp2 r1.x, r0.xyxx, r3.yzyy
					sample r0.xyzw, r1.xyxx, t0.xzwy, s1
					mul r0.z, r0.z, r0.x
					mad r0.xy, r0.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xyz, v2.yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, v2.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					mul r2.xyzw, r1.yyyy, cb2[1].xyzw
					mad r2.xyzw, cb2[0].xyzw, r1.xxxx, r2.xyzw
					mad r1.xyzw, cb2[2].xyzw, r1.zzzz, r2.xyzw
					add r1.xyzw, r1.xyzw, cb2[3].xyzw
					ishl r0.z, cb4[0].x, l(2)
					mul r2.xyz, r1.yyyy, cb3[r0.z + 25].xwyx
					mad r2.xyz, cb3[r0.z + 24].xwyx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb3[r0.z + 26].xwyx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb3[r0.z + 27].xwyx, r1.wwww, r1.xyzx
					mul r1.xzw, r1.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r1.xz, r1.zzzz, r1.xxwx
					mov r0.w, cb4[0].x
					mul r2.xy, r1.yyyy, cb3[r0.w + 66].zwzz
					mad r1.xz, r1.xxzx, cb3[r0.w + 66].xxyx, r2.xxyx
					div r1.xy, r1.xzxx, r1.yyyy
					mul r2.xyz, cb2[3].yyyy, cb3[r0.z + 25].xwyx
					mad r2.xyz, cb3[r0.z + 24].xwyx, cb2[3].xxxx, r2.xyzx
					mad r2.xyz, cb3[r0.z + 26].xwyx, cb2[3].zzzz, r2.xyzx
					mad r2.xyz, cb3[r0.z + 27].xwyx, cb2[3].wwww, r2.xyzx
					add r3.xyz, cb3[r0.z + 58].xyzx, cb3[r0.z + 59].xyzx
					add r3.xyz, r3.xyzx, -cb3[r0.w + 64].xyzx
					mul r2.xzw, r2.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r1.zw, r2.zzzz, r2.xxxw
					mul r2.xz, r2.yyyy, cb3[r0.w + 66].zzwz
					mad r0.zw, r1.zzzw, cb3[r0.w + 66].xxxy, r2.xxxz
					div r0.zw, r0.zzzw, r2.yyyy
					add r0.zw, -r1.xxxy, r0.zzzw
					add r2.xyz, -cb3[64].xyzx, cb3[65].xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					dp3 r1.z, r2.xyzx, r3.xyzx
					mad r2.xyz, -r1.zzzz, r2.xyzx, r3.xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r3.xyz, cb3[64].xyzx, cb3[65].xyzx
					mad r4.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb2[3].xyzx
					mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), -cb2[3].xyzx
					dp3 r1.z, |r3.xyzx|, |r3.xyzx|
					sqrt r1.z, r1.z
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, r3.xyzx
					add r2.x, r1.w, -cb0[6].w
					lt r1.w, cb0[6].w, r1.w
					add r2.y, -cb0[6].w, l(1.000000)
					div r2.x, r2.x, r2.y
					and r1.w, r1.w, r2.x
					mul r1.w, r1.w, cb0[6].z
					add r2.x, -cb0[6].x, cb0[6].y
					add r2.y, r1.z, -cb0[6].x
					div_sat r2.x, r2.y, r2.x
					mul r1.w, r1.w, r2.x
					mad r0.zw, r1.wwww, r0.zzzw, r1.xxxy
					mul r1.x, cb0[5].x, cb1[0].y
					sincos r1.x, null, r1.x
					mul r1.y, cb0[5].z, cb0[5].y
					mul r1.x, r1.x, r1.y
					mul r1.x, r1.x, r2.x
					mad r2.y, r1.x, l(0.020000), r0.z
					mul r0.z, cb0[7].x, cb1[0].y
					sincos r0.z, null, r0.z
					mul r1.x, cb0[5].z, cb0[7].y
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.z, r2.x
					mad r2.z, r0.z, l(0.020000), r0.w
					mad r0.zw, r2.yyyz, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
					mad r1.xy, cb0[8].xyxx, r0.wzww, r2.zyzz
					mad r0.zw, cb0[7].zzzw, r0.zzzw, r2.yyyz
					add r1.xy, -r0.zwzz, r1.xyxx
					mad r0.zw, cb0[8].zzzz, r1.xxxy, r0.zzzw
					add r0.zw, -r2.yyyz, r0.zzzw
					mad r3.yz, r2.xxxx, r0.zzwz, r2.yyzy
					mul r0.z, cb0[8].w, cb1[0].y
					sincos r0.z, null, r0.z
					add r0.z, r0.z, l(1.000000)
					mul r0.w, cb0[5].z, cb0[9].y
					div r0.w, r0.w, r1.z
					mad r1.x, cb0[5].z, cb0[9].y, -r0.w
					mad r0.w, cb0[9].x, r1.x, r0.w
					mad r0.w, -r2.x, r0.w, l(0.999999)
					mad r3.w, r0.z, l(0.000001), r0.w
					dp2 r0.z, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
					add r0.w, -r3.w, l(1.000000)
					mul_sat r0.w, r0.w, l(1.200000)
					sincos r0.z, null, r0.z
					mul r1.x, r0.z, l(43758.550781)
					round_ni r1.x, r1.x
					mad r0.z, r0.z, l(43758.550781), -r1.x
					mad r0.z, r0.z, l(2.000000), l(-1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r0.w, r1.x
					mad r1.x, r1.x, l(0.050000), l(0.002000)
					ge r1.x, |r0.z|, r1.x
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					mad r0.z, r0.z, r0.w, r3.y
					round_ni r0.w, r0.z
					add r3.x, -r0.w, r0.z
					div r0.zw, cb1[5].xxxy, cb0[9].zzzz
					mul r1.xy, r0.zwzz, r3.xzxx
					round_ne r1.xy, r1.xyxx
					div r0.zw, r1.xxxy, r0.zzzw
					mul r1.x, cb0[5].z, cb0[10].x
					div r1.x, r1.x, r1.z
					mad r1.y, cb0[10].x, cb0[5].z, -r1.x
					mad r1.x, cb0[9].w, r1.y, r1.x
					mul r1.x, r1.x, r2.x
					mad r0.xy, r0.xyxx, r1.xxxx, r0.zwzz
					add r0.zw, -r0.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					add r0.xy, -r0.zwzz, r0.xyxx
					add r1.x, cb0[11].y, l(-1.000000)
					mad r1.x, r2.x, r1.x, l(1.000000)
					mad r0.zw, r1.xxxx, r0.xxxy, r0.zzzw
					mul r1.x, cb0[5].z, cb0[14].x
					mul r1.y, cb0[14].y, cb1[0].y
					sincos r3.x, r4.x, r1.y
					mov r4.y, r3.x
					dp2 r1.x, -r1.xxxx, r4.xyxx
					mad r1.x, cb0[14].x, cb0[5].z, r1.x
					div r3.x, r1.x, r1.z
					div r3.z, -r1.x, r1.z
					mov r3.yw, l(0,0,0,0)
					mad r1.xy, r2.xxxx, r3.xyxx, r0.zwzz
					mad r2.yz, r2.xxxx, r3.zzwz, r0.zzwz
					sample r3.xyzw, r2.yzyy, t1.xyzw, s0
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mov r3.x, r4.x
					mul r1.xy, cb0[5].zzzz, cb0[13].zwzz
					div r1.xy, r1.xyxx, r1.zzzz
					mad r2.yz, cb0[13].zzwz, cb0[5].zzzz, -r1.xxyx
					mad r1.xy, cb0[13].yyyy, r2.yzyy, r1.xyxx
					mad r1.xy, r2.xxxx, r1.xyxx, r0.zwzz
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mul r5.w, cb0[5].z, cb0[13].x
					mul r5.xyz, cb0[5].zzzz, cb0[12].xywx
					div r1.xy, r5.zwzz, r1.zzzz
					add r2.yz, -r1.xxyx, r5.zzwz
					div r5.xy, r5.xyxx, r1.zzzz
					mad r1.xy, cb0[12].zzzz, r2.yzyy, r1.xyxx
					mad r1.xy, r2.xxxx, r1.xyxx, r0.zwzz
					sample r6.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.y, r6.y
					mad r1.xy, cb0[12].xyxx, cb0[5].zzzz, -r5.xyxx
					mad r1.xy, cb0[11].wwww, r1.xyxx, r5.xyxx
					mad r1.xy, r2.xxxx, r1.xyxx, r0.zwzz
					sample r5.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.x, r5.x
					sample r5.xyzw, r0.zwzz, t1.xyzw, s0
					mov r3.y, r5.y
					add r1.xyw, r3.xyxz, -r4.xyxz
					mad r1.xyw, cb0[11].zzzz, r1.xyxw, r4.xyxz
					add r1.xyw, -r5.xyxz, r1.xyxw
					mad r1.xyw, cb0[4].wwww, r1.xyxw, r5.xyxz
					mad r2.y, cb1[0].y, cb0[15].x, -cb0[15].x
					mad r2.y, cb0[14].w, r2.y, cb0[15].x
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].z, cb0[15].y
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r1.z
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[14].z, r2.y, r2.w
					mul r4.x, r2.y, r2.x
					mov r4.y, l(0)
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					add r7.xyz, r5.xyzx, r7.xyzx
					mov r4.zw, -r4.xxxx
					mad r8.xyzw, r4.xxxx, l(-1.000000, 1.000000, 1.000000, -1.000000), r0.zwzw
					add r4.xyzw, r0.zwzw, r4.zyyw
					sample r9.xyzw, r4.xyxx, t1.xyzw, s0
					sample r4.xyzw, r4.zwzz, t1.xyzw, s0
					add r7.xyz, r7.xyzx, r9.xyzx
					add r6.xyz, r6.xyzx, r7.xyzx
					add r4.xyz, r4.xyzx, r6.xyzx
					mad r2.zw, -r2.xxxx, r2.yyyy, r0.zzzw
					mad r6.xy, r2.xxxx, r2.yyyy, r0.zwzz
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					sample r7.xyzw, r2.zwzz, t1.xyzw, s0
					add r2.yzw, r4.xxyz, r7.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					sample r4.xyzw, r8.xyxx, t1.xyzw, s0
					sample r6.xyzw, r8.zwzz, t1.xyzw, s0
					add r2.yzw, r2.yyzw, r4.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					mad r2.yzw, r2.yyzw, l(0.000000, 0.111111, 0.111111, 0.111111), -r1.xxyw
					mul r2.yzw, r2.yyzw, cb0[15].zzzz
					mad r1.xyw, cb0[4].zzzz, r2.yzyw, r1.xyxw
					mad r2.y, cb1[0].y, cb0[16].y, -cb0[16].y
					mad r2.y, cb0[16].x, r2.y, cb0[16].y
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].z, cb0[16].z
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r1.z
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[15].w, r2.y, r2.w
					mad r2.zw, -r2.xxxx, r2.yyyy, r0.zzzw
					mul r4.x, r2.y, r2.x
					sample r6.xyzw, r2.zwzz, t1.xyzw, s0
					mad r2.yz, r4.xxxx, l(0.000000, -1.000000, 1.000000, 0.000000), r0.zzwz
					sample r7.xyzw, r2.yzyy, t1.xyzw, s0
					add r2.y, r6.z, r7.z
					mul r3.z, r2.y, l(0.500000)
					mov r4.y, l(0)
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.zwzz, t1.xyzw, s0
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					mov r4.zw, -r4.xxxx
					add r8.xyzw, r0.zwzw, r4.yzwy
					add r9.xyzw, r0.zwzw, r4.xwxx
					sample r10.xyzw, r8.xyxx, t1.xyzw, s0
					sample r8.xyzw, r8.zwzz, t1.xyzw, s0
					mov r6.z, r8.z
					add r2.y, r7.y, r10.y
					mul r6.y, r2.y, l(0.500000)
					sample r7.xyzw, r9.xyxx, t1.xyzw, s0
					sample r8.xyzw, r9.zwzz, t1.xyzw, s0
					add r2.y, r7.x, r8.x
					mul r3.x, r2.y, l(0.500000)
					add r2.yzw, r3.xxyz, r6.xxyz
					mad r4.yz, -r4.xxxx, cb0[16].wwww, r0.zzwz
					mul r6.x, r4.x, cb0[16].w
					sample r4.xyzw, r4.yzyy, t1.xyzw, s0
					mad r4.xy, r6.xxxx, l(-1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
					sample r7.xyzw, r4.xyxx, t1.xyzw, s0
					add r3.w, r4.z, r7.z
					mul r3.z, r3.w, l(0.500000)
					mov r6.y, l(0)
					add r4.xyzw, r0.zwzw, r6.xyyx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s0
					sample r4.xyzw, r4.xyxx, t1.xyzw, s0
					mov r6.zw, -r6.xxxx
					add r8.xyzw, r0.zwzw, r6.xwxx
					add r6.xyzw, r0.zwzw, r6.yzwy
					sample r9.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					mov r4.z, r6.z
					add r3.w, r7.y, r9.y
					mul r4.y, r3.w, l(0.500000)
					sample r6.xyzw, r8.xyxx, t1.xyzw, s0
					sample r7.xyzw, r8.zwzz, t1.xyzw, s0
					add r3.w, r6.x, r7.x
					mul r3.x, r3.w, l(0.500000)
					add r3.xyz, r3.xyzx, r4.xyzx
					add r2.yzw, r2.yyzw, r3.xxyz
					mad r2.yzw, r2.yyzw, l(0.000000, 0.250000, 0.250000, 0.250000), -r1.xxyw
					mul r2.yzw, r2.yyzw, cb0[17].xxxx
					mad r1.xyw, cb0[4].yyyy, r2.yzyw, r1.xyxw
					mul r2.y, cb0[5].z, cb0[19].y
					div r1.z, r2.y, r1.z
					mad r2.y, cb0[19].y, cb0[5].z, -r1.z
					mad r1.z, cb0[19].x, r2.y, r1.z
					mad r0.xy, r2.xxxx, r1.zzzz, r0.zwzz
					mad r3.xy, -r2.xxxx, r1.zzzz, r0.zwzz
					sample r4.xyzw, r0.xwxx, t1.xyzw, s0
					sample r6.xyzw, r0.zyzz, t1.xyzw, s0
					mov r3.zw, r0.wwwz
					mad r0.xyzw, r5.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r4.xyzw
					add r0.xyzw, -r6.xyzw, r0.xyzw
					sample r4.xyzw, r3.xzxx, t1.xyzw, s0
					sample r3.xyzw, r3.wyww, t1.xyzw, s0
					add r0.xyzw, r0.xyzw, -r4.xyzw
					add r0.xyzw, -r3.xyzw, r0.xyzw
					dp4 r0.w, r0.xyzw, r0.xyzw
					sqrt r1.z, r0.w
					rsq r0.w, r0.w
					mul r2.yzw, r0.wwww, r0.xxyz
					lt r0.w, r1.z, l(0.010000)
					lt r1.z, l(0.010000), r1.z
					mul r3.xyz, r2.xxxx, cb0[20].xyzx
					and r3.xyz, r0.wwww, r3.xyzx
					movc r2.yzw, r1.zzzz, r2.yyzw, r3.xxyz
					add r2.yzw, -r0.xxyz, r2.yyzw
					mad r0.xyz, cb0[21].xxxx, r2.yzwy, r0.xyzx
					add r2.yzw, cb0[18].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r0.xyz, r1.xywx, r2.yzwy, r0.xyzx
					add r0.xyz, -r1.xywx, r0.xyzx
					mad r0.xyz, cb0[21].yyyy, r0.xyzx, r1.xywx
					dp3 r0.w, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, cb0[22].x, cb0[23].x
					mul r0.w, r0.w, r2.x
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, r2.x, cb0[23].y
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					add r1.xyz, cb0[24].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r1.xyz, r2.xxxx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					add r1.xy, cb0[25].xzxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r1.xy, r2.xxxx, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					div r0.xyz, r0.xyzx, r1.xxxx
					round_z r0.w, r1.y
					div r0.w, l(256.000000), r0.w
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, -r0.xyzx
					mul r1.xyz, r1.xyzx, r2.xxxx
					mul r1.w, r2.x, cb0[27].x
					mad r0.xyz, cb0[25].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyz, r0.wwww, r0.xyzx
					round_ni r1.xyz, r1.xyzx
					div r1.xyz, r1.xyzx, r0.wwww
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad r0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), cb0[25].wwww
					mad r0.xyz, cb0[26].xxxx, r1.xyzx, r0.xyzx
					ge r0.w, r0.y, r0.z
					and r0.w, r0.w, l(0x3f800000)
					add r1.xy, -r0.zyzz, r0.yzyy
					mad r1.xy, r0.wwww, r1.xyxx, r0.zyzz
					ge r0.w, r0.x, r1.x
					and r0.w, r0.w, l(0x3f800000)
					mov r1.z, r0.x
					add r2.xyz, -r1.xyzx, r1.zyxz
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					min r0.w, r1.y, r1.z
					add r0.w, -r0.w, r1.x
					add r1.y, r1.x, l(0.000000)
					div r0.w, r0.w, r1.y
					mad r1.y, cb0[26].w, cb1[0].y, -cb0[26].z
					mad r1.y, cb0[26].y, r1.y, cb0[26].z
					add r2.xyz, r1.yyyy, l(1.000000, 0.666667, 0.333333, 0.000000)
					frc r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -3.000000, -3.000000, 0.000000)
					add_sat r2.xyz, |r2.xyzx|, l(-1.000000, -1.000000, -1.000000, 0.000000)
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r1.xxxx, r2.xyzx, -r0.xyzx
					mad o0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[22], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.x, v3.w, l(0.000000)
					div r0.xy, v3.xyxx, r0.xxxx
					mul r0.z, cb0[10].y, cb1[0].y
					sincos r1.x, r2.x, r0.z
					mov r3.z, r1.x
					mov r3.y, r2.x
					mov r3.x, -r1.x
					dp2 r1.y, r0.xyxx, r3.xyxx
					dp2 r1.x, r0.xyxx, r3.yzyy
					sample r0.xyzw, r1.xyxx, t0.xzwy, s1
					mul r0.z, r0.z, r0.x
					mad r0.xy, r0.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xyz, v2.yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, v2.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					mul r2.xyzw, r1.yyyy, cb3[1].xyzw
					mad r2.xyzw, cb3[0].xyzw, r1.xxxx, r2.xyzw
					mad r1.xyzw, cb3[2].xyzw, r1.zzzz, r2.xyzw
					add r1.xyzw, r1.xyzw, cb3[3].xyzw
					mul r2.xyz, r1.yyyy, cb4[18].xwyx
					mad r2.xyz, cb4[17].xwyx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb4[19].xwyx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb4[20].xwyx, r1.wwww, r1.xyzx
					mul r1.xzw, r1.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r0.zw, r1.zzzz, r1.xxxw
					div r0.zw, r0.zzzw, r1.yyyy
					mul r1.xyz, cb3[3].yyyy, cb4[18].xwyx
					mad r1.xyz, cb4[17].xwyx, cb3[3].xxxx, r1.xyzx
					mad r1.xyz, cb4[19].xwyx, cb3[3].zzzz, r1.xyzx
					mad r1.xyz, cb4[20].xwyx, cb3[3].wwww, r1.xyzx
					mul r1.xzw, r1.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r1.xz, r1.zzzz, r1.xxwx
					div r1.xy, r1.xzxx, r1.yyyy
					add r1.xy, -r0.zwzz, r1.xyxx
					add r2.xyz, cb2[20].xyzx, cb2[21].xyzx
					add r2.xyz, r2.xyzx, -cb1[4].xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r3.xyz, -cb1[4].xyzx, cb3[3].xyzx
					dp3 r1.z, r3.xyzx, r3.xyzx
					rsq r1.z, r1.z
					mul r3.xyz, r1.zzzz, r3.xyzx
					dp3 r1.z, r2.xyzx, r3.xyzx
					add r1.w, r1.z, -cb0[6].w
					lt r1.z, cb0[6].w, r1.z
					add r2.x, -cb0[6].w, l(1.000000)
					div r1.w, r1.w, r2.x
					and r1.z, r1.w, r1.z
					mul r1.z, r1.z, cb0[6].z
					add r1.w, -cb0[6].x, cb0[6].y
					add r2.xyz, cb1[4].xyzx, -cb3[3].xyzx
					dp3 r2.x, |r2.xyzx|, |r2.xyzx|
					sqrt r2.x, r2.x
					add r2.y, r2.x, -cb0[6].x
					div_sat r1.w, r2.y, r1.w
					mul r1.z, r1.z, r1.w
					mad r0.zw, r1.zzzz, r1.xxxy, r0.zzzw
					mul r1.x, cb0[5].x, cb1[0].y
					sincos r1.x, null, r1.x
					mul r1.y, cb0[5].w, cb0[5].y
					mul r1.x, r1.x, r1.y
					mul r1.x, r1.x, r1.w
					mad r1.y, r1.x, l(0.020000), r0.z
					mul r0.z, cb0[7].x, cb1[0].y
					sincos r0.z, null, r0.z
					mul r1.x, cb0[5].w, cb0[7].y
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.z, r1.w
					mad r1.z, r0.z, l(0.020000), r0.w
					add r0.zw, -r1.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
					add r0.zw, -r1.yyyz, r0.zzzw
					mad r2.yz, cb0[8].xxyx, r0.wwzw, r1.zzyz
					mad r0.zw, cb0[7].zzzw, r0.zzzw, r1.yyyz
					add r2.yz, -r0.zzwz, r2.yyzy
					mad r0.zw, cb0[8].zzzz, r2.yyyz, r0.zzzw
					add r0.zw, -r1.yyyz, r0.zzzw
					mad r3.yz, r1.wwww, r0.zzwz, r1.yyzy
					mul r0.z, cb0[8].w, cb1[0].y
					sincos r0.z, null, r0.z
					add r0.z, r0.z, l(1.000000)
					mul r0.w, cb0[5].w, cb0[9].y
					div r0.w, r0.w, r2.x
					mad r1.x, cb0[5].w, cb0[9].y, -r0.w
					mad r0.w, cb0[9].x, r1.x, r0.w
					mad r0.w, -r1.w, r0.w, l(0.999999)
					mad r3.w, r0.z, l(0.000001), r0.w
					dp2 r0.z, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
					add r0.w, -r3.w, l(1.000000)
					mul_sat r0.w, r0.w, l(1.200000)
					sincos r0.z, null, r0.z
					mul r1.x, r0.z, l(43758.550781)
					round_ni r1.x, r1.x
					mad r0.z, r0.z, l(43758.550781), -r1.x
					mad r0.z, r0.z, l(2.000000), l(-1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r0.w, r1.x
					mad r1.x, r1.x, l(0.050000), l(0.002000)
					ge r1.x, |r0.z|, r1.x
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					mad r0.z, r0.z, r0.w, r3.y
					round_ni r0.w, r0.z
					add r3.x, -r0.w, r0.z
					div r0.zw, cb1[6].xxxy, cb0[9].zzzz
					mul r1.xy, r0.zwzz, r3.xzxx
					round_ne r1.xy, r1.xyxx
					div r0.zw, r1.xxxy, r0.zzzw
					mul r1.x, cb0[5].w, cb0[10].x
					div r1.x, r1.x, r2.x
					mad r1.y, cb0[10].x, cb0[5].w, -r1.x
					mad r1.x, cb0[9].w, r1.y, r1.x
					mul r1.x, r1.x, r1.w
					mad r0.xy, r0.xyxx, r1.xxxx, r0.zwzz
					add r0.zw, -r0.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					add r0.xy, -r0.zwzz, r0.xyxx
					add r1.x, cb0[11].y, l(-1.000000)
					mad r1.x, r1.w, r1.x, l(1.000000)
					mad r0.zw, r1.xxxx, r0.xxxy, r0.zzzw
					mul r1.x, cb0[5].w, cb0[14].x
					mul r1.y, cb0[14].y, cb1[0].y
					sincos r3.x, r4.x, r1.y
					mov r4.y, r3.x
					dp2 r1.x, -r1.xxxx, r4.xyxx
					mad r1.x, cb0[14].x, cb0[5].w, r1.x
					div r3.x, r1.x, r2.x
					div r3.z, -r1.x, r2.x
					mov r3.yw, l(0,0,0,0)
					mad r1.xy, r1.wwww, r3.xyxx, r0.zwzz
					mad r2.yz, r1.wwww, r3.zzwz, r0.zzwz
					sample r3.xyzw, r2.yzyy, t1.xyzw, s0
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mov r3.x, r4.x
					mul r1.xy, cb0[5].wwww, cb0[13].zwzz
					div r1.xy, r1.xyxx, r2.xxxx
					mad r2.yz, cb0[13].zzwz, cb0[5].wwww, -r1.xxyx
					mad r1.xy, cb0[13].yyyy, r2.yzyy, r1.xyxx
					mad r1.xy, r1.wwww, r1.xyxx, r0.zwzz
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mul r5.w, cb0[5].w, cb0[13].x
					mul r5.xyz, cb0[5].wwww, cb0[12].xywx
					div r1.xy, r5.zwzz, r2.xxxx
					add r2.yz, -r1.xxyx, r5.zzwz
					div r5.xy, r5.xyxx, r2.xxxx
					mad r1.xy, cb0[12].zzzz, r2.yzyy, r1.xyxx
					mad r1.xy, r1.wwww, r1.xyxx, r0.zwzz
					sample r6.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.y, r6.y
					mad r1.xy, cb0[12].xyxx, cb0[5].wwww, -r5.xyxx
					mad r1.xy, cb0[11].wwww, r1.xyxx, r5.xyxx
					mad r1.xy, r1.wwww, r1.xyxx, r0.zwzz
					sample r5.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.x, r5.x
					sample r5.xyzw, r0.zwzz, t1.xyzw, s0
					mov r3.y, r5.y
					add r1.xyz, r3.xyzx, -r4.xyzx
					mad r1.xyz, cb0[11].zzzz, r1.xyzx, r4.xyzx
					add r1.xyz, -r5.xyzx, r1.xyzx
					mad r1.xyz, cb0[4].wwww, r1.xyzx, r5.xyzx
					mov r4.y, l(0)
					mad r2.y, cb1[0].y, cb0[15].x, -cb0[15].x
					mad r2.y, cb0[14].w, r2.y, cb0[15].x
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].w, cb0[15].y
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r2.x
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[14].z, r2.y, r2.w
					mul r4.x, r1.w, r2.y
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					add r7.xyz, r5.xyzx, r7.xyzx
					mov r4.zw, -r4.xxxx
					mad r8.xyzw, r4.xxxx, l(-1.000000, 1.000000, 1.000000, -1.000000), r0.zwzw
					add r4.xyzw, r0.zwzw, r4.zyyw
					sample r9.xyzw, r4.xyxx, t1.xyzw, s0
					sample r4.xyzw, r4.zwzz, t1.xyzw, s0
					add r7.xyz, r7.xyzx, r9.xyzx
					add r6.xyz, r6.xyzx, r7.xyzx
					add r4.xyz, r4.xyzx, r6.xyzx
					mad r2.zw, -r1.wwww, r2.yyyy, r0.zzzw
					mad r6.xy, r1.wwww, r2.yyyy, r0.zwzz
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					sample r7.xyzw, r2.zwzz, t1.xyzw, s0
					add r2.yzw, r4.xxyz, r7.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					sample r4.xyzw, r8.xyxx, t1.xyzw, s0
					sample r6.xyzw, r8.zwzz, t1.xyzw, s0
					add r2.yzw, r2.yyzw, r4.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					mad r2.yzw, r2.yyzw, l(0.000000, 0.111111, 0.111111, 0.111111), -r1.xxyz
					mul r2.yzw, r2.yyzw, cb0[15].zzzz
					mad r1.xyz, cb0[4].zzzz, r2.yzwy, r1.xyzx
					mad r2.y, cb1[0].y, cb0[16].y, -cb0[16].y
					mad r2.y, cb0[16].x, r2.y, cb0[16].y
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].w, cb0[16].z
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r2.x
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[15].w, r2.y, r2.w
					mad r2.zw, -r1.wwww, r2.yyyy, r0.zzzw
					mul r4.x, r1.w, r2.y
					sample r6.xyzw, r2.zwzz, t1.xyzw, s0
					mad r2.yz, r4.xxxx, l(0.000000, -1.000000, 1.000000, 0.000000), r0.zzwz
					sample r7.xyzw, r2.yzyy, t1.xyzw, s0
					add r2.y, r6.z, r7.z
					mul r3.z, r2.y, l(0.500000)
					mov r4.y, l(0)
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.zwzz, t1.xyzw, s0
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					mov r4.zw, -r4.xxxx
					add r8.xyzw, r0.zwzw, r4.yzwy
					add r9.xyzw, r0.zwzw, r4.xwxx
					sample r10.xyzw, r8.xyxx, t1.xyzw, s0
					sample r8.xyzw, r8.zwzz, t1.xyzw, s0
					mov r6.z, r8.z
					add r2.y, r7.y, r10.y
					mul r6.y, r2.y, l(0.500000)
					sample r7.xyzw, r9.xyxx, t1.xyzw, s0
					sample r8.xyzw, r9.zwzz, t1.xyzw, s0
					add r2.y, r7.x, r8.x
					mul r3.x, r2.y, l(0.500000)
					add r2.yzw, r3.xxyz, r6.xxyz
					mad r4.yz, -r4.xxxx, cb0[16].wwww, r0.zzwz
					mul r6.x, r4.x, cb0[16].w
					sample r4.xyzw, r4.yzyy, t1.xyzw, s0
					mad r4.xy, r6.xxxx, l(-1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
					sample r7.xyzw, r4.xyxx, t1.xyzw, s0
					add r3.w, r4.z, r7.z
					mul r3.z, r3.w, l(0.500000)
					mov r6.y, l(0)
					add r4.xyzw, r0.zwzw, r6.xyyx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s0
					sample r4.xyzw, r4.xyxx, t1.xyzw, s0
					mov r6.zw, -r6.xxxx
					add r8.xyzw, r0.zwzw, r6.xwxx
					add r6.xyzw, r0.zwzw, r6.yzwy
					sample r9.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					mov r4.z, r6.z
					add r3.w, r7.y, r9.y
					mul r4.y, r3.w, l(0.500000)
					sample r6.xyzw, r8.xyxx, t1.xyzw, s0
					sample r7.xyzw, r8.zwzz, t1.xyzw, s0
					add r3.w, r6.x, r7.x
					mul r3.x, r3.w, l(0.500000)
					add r3.xyz, r3.xyzx, r4.xyzx
					add r2.yzw, r2.yyzw, r3.xxyz
					mad r2.yzw, r2.yyzw, l(0.000000, 0.250000, 0.250000, 0.250000), -r1.xxyz
					mul r2.yzw, r2.yyzw, cb0[17].xxxx
					mad r1.xyz, cb0[4].yyyy, r2.yzwy, r1.xyzx
					mul r2.y, cb0[5].w, cb0[19].y
					div r2.x, r2.y, r2.x
					mad r2.y, cb0[19].y, cb0[5].w, -r2.x
					mad r2.x, cb0[19].x, r2.y, r2.x
					mad r0.xy, r1.wwww, r2.xxxx, r0.zwzz
					mad r2.xy, -r1.wwww, r2.xxxx, r0.zwzz
					sample r3.xyzw, r0.xwxx, t1.xyzw, s0
					sample r4.xyzw, r0.zyzz, t1.xyzw, s0
					mov r2.zw, r0.wwwz
					mad r0.xyzw, r5.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r3.xyzw
					add r0.xyzw, -r4.xyzw, r0.xyzw
					sample r3.xyzw, r2.xzxx, t1.xyzw, s0
					sample r2.xyzw, r2.wyww, t1.xyzw, s0
					add r0.xyzw, r0.xyzw, -r3.xyzw
					add r0.xyzw, -r2.xyzw, r0.xyzw
					dp4 r0.w, r0.xyzw, r0.xyzw
					sqrt r2.x, r0.w
					rsq r0.w, r0.w
					mul r2.yzw, r0.wwww, r0.xxyz
					lt r0.w, r2.x, l(0.010000)
					lt r2.x, l(0.010000), r2.x
					mul r3.xyz, r1.wwww, cb0[20].xyzx
					and r3.xyz, r0.wwww, r3.xyzx
					movc r2.xyz, r2.xxxx, r2.yzwy, r3.xyzx
					add r2.xyz, -r0.xyzx, r2.xyzx
					mad r0.xyz, cb0[21].xxxx, r2.xyzx, r0.xyzx
					add r2.xyz, cb0[18].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r2.xyz, r1.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					add r0.xyz, -r1.xyzx, r0.xyzx
					mad r0.xyz, cb0[21].yyyy, r0.xyzx, r1.xyzx
					dp3 r0.w, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, cb0[22].x, cb0[23].x
					mul r0.w, r0.w, r1.w
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, r1.w, cb0[23].y
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					add r1.xyz, cb0[24].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r1.xyz, r1.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					add r1.xy, cb0[25].xzxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r1.xy, r1.wwww, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					div r0.xyz, r0.xyzx, r1.xxxx
					round_z r0.w, r1.y
					div r0.w, l(256.000000), r0.w
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, -r0.xyzx
					mul r1.xyz, r1.xyzx, r1.wwww
					mul r1.w, r1.w, cb0[27].x
					mad r0.xyz, cb0[25].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyz, r0.wwww, r0.xyzx
					round_ni r1.xyz, r1.xyzx
					div r1.xyz, r1.xyzx, r0.wwww
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad r0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), cb0[25].wwww
					mad r0.xyz, cb0[26].xxxx, r1.xyzx, r0.xyzx
					ge r0.w, r0.y, r0.z
					and r0.w, r0.w, l(0x3f800000)
					add r1.xy, -r0.zyzz, r0.yzyy
					mad r1.xy, r0.wwww, r1.xyxx, r0.zyzz
					ge r0.w, r0.x, r1.x
					and r0.w, r0.w, l(0x3f800000)
					mov r1.z, r0.x
					add r2.xyz, -r1.xyzx, r1.zyxz
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					min r0.w, r1.y, r1.z
					add r0.w, -r0.w, r1.x
					add r1.y, r1.x, l(0.000000)
					div r0.w, r0.w, r1.y
					mad r1.y, cb0[26].w, cb1[0].y, -cb0[26].z
					mad r1.y, cb0[26].y, r1.y, cb0[26].z
					add r2.xyz, r1.yyyy, l(1.000000, 0.666667, 0.333333, 0.000000)
					frc r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -3.000000, -3.000000, 0.000000)
					add_sat r2.xyz, |r2.xyzx|, l(-1.000000, -1.000000, -1.000000, 0.000000)
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r1.xxxx, r2.xyzx, -r0.xyzx
					mad o0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "UNITY_SINGLE_PASS_STEREO" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float       
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[28], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[68], dynamicIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyw
					dcl_output o0.xyzw
					dcl_temps 11
					add r0.x, v3.w, l(0.000000)
					div r0.xy, v3.xyxx, r0.xxxx
					mul r0.z, cb0[10].y, cb1[0].y
					sincos r1.x, r2.x, r0.z
					mov r3.z, r1.x
					mov r3.y, r2.x
					mov r3.x, -r1.x
					dp2 r1.y, r0.xyxx, r3.xyxx
					dp2 r1.x, r0.xyxx, r3.yzyy
					sample r0.xyzw, r1.xyxx, t0.xzwy, s1
					mul r0.z, r0.z, r0.x
					mad r0.xy, r0.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xyz, v2.yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, v2.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					mul r2.xyzw, r1.yyyy, cb2[1].xyzw
					mad r2.xyzw, cb2[0].xyzw, r1.xxxx, r2.xyzw
					mad r1.xyzw, cb2[2].xyzw, r1.zzzz, r2.xyzw
					add r1.xyzw, r1.xyzw, cb2[3].xyzw
					ishl r0.z, cb4[0].x, l(2)
					mul r2.xyz, r1.yyyy, cb3[r0.z + 25].xwyx
					mad r2.xyz, cb3[r0.z + 24].xwyx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb3[r0.z + 26].xwyx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb3[r0.z + 27].xwyx, r1.wwww, r1.xyzx
					mul r1.xzw, r1.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r1.xz, r1.zzzz, r1.xxwx
					mov r0.w, cb4[0].x
					mul r2.xy, r1.yyyy, cb3[r0.w + 66].zwzz
					mad r1.xz, r1.xxzx, cb3[r0.w + 66].xxyx, r2.xxyx
					div r1.xy, r1.xzxx, r1.yyyy
					mul r2.xyz, cb2[3].yyyy, cb3[r0.z + 25].xwyx
					mad r2.xyz, cb3[r0.z + 24].xwyx, cb2[3].xxxx, r2.xyzx
					mad r2.xyz, cb3[r0.z + 26].xwyx, cb2[3].zzzz, r2.xyzx
					mad r2.xyz, cb3[r0.z + 27].xwyx, cb2[3].wwww, r2.xyzx
					add r3.xyz, cb3[r0.z + 58].xyzx, cb3[r0.z + 59].xyzx
					add r3.xyz, r3.xyzx, -cb3[r0.w + 64].xyzx
					mul r2.xzw, r2.xxyz, l(0.500000, 0.000000, 0.500000, -0.500000)
					add r1.zw, r2.zzzz, r2.xxxw
					mul r2.xz, r2.yyyy, cb3[r0.w + 66].zzwz
					mad r0.zw, r1.zzzw, cb3[r0.w + 66].xxxy, r2.xxxz
					div r0.zw, r0.zzzw, r2.yyyy
					add r0.zw, -r1.xxxy, r0.zzzw
					add r2.xyz, -cb3[64].xyzx, cb3[65].xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					dp3 r1.z, r2.xyzx, r3.xyzx
					mad r2.xyz, -r1.zzzz, r2.xyzx, r3.xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					add r3.xyz, cb3[64].xyzx, cb3[65].xyzx
					mad r4.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb2[3].xyzx
					mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), -cb2[3].xyzx
					dp3 r1.z, |r3.xyzx|, |r3.xyzx|
					sqrt r1.z, r1.z
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, r3.xyzx
					add r2.x, r1.w, -cb0[6].w
					lt r1.w, cb0[6].w, r1.w
					add r2.y, -cb0[6].w, l(1.000000)
					div r2.x, r2.x, r2.y
					and r1.w, r1.w, r2.x
					mul r1.w, r1.w, cb0[6].z
					add r2.x, -cb0[6].x, cb0[6].y
					add r2.y, r1.z, -cb0[6].x
					div_sat r2.x, r2.y, r2.x
					mul r1.w, r1.w, r2.x
					mad r0.zw, r1.wwww, r0.zzzw, r1.xxxy
					mul r1.x, cb0[5].x, cb1[0].y
					sincos r1.x, null, r1.x
					mul r1.y, cb0[5].z, cb0[5].y
					mul r1.x, r1.x, r1.y
					mul r1.x, r1.x, r2.x
					mad r2.y, r1.x, l(0.020000), r0.z
					mul r0.z, cb0[7].x, cb1[0].y
					sincos r0.z, null, r0.z
					mul r1.x, cb0[5].z, cb0[7].y
					mul r0.z, r0.z, r1.x
					mul r0.z, r0.z, r2.x
					mad r2.z, r0.z, l(0.020000), r0.w
					mad r0.zw, r2.yyyz, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
					mad r1.xy, cb0[8].xyxx, r0.wzww, r2.zyzz
					mad r0.zw, cb0[7].zzzw, r0.zzzw, r2.yyyz
					add r1.xy, -r0.zwzz, r1.xyxx
					mad r0.zw, cb0[8].zzzz, r1.xxxy, r0.zzzw
					add r0.zw, -r2.yyyz, r0.zzzw
					mad r3.yz, r2.xxxx, r0.zzwz, r2.yyzy
					mul r0.z, cb0[8].w, cb1[0].y
					sincos r0.z, null, r0.z
					add r0.z, r0.z, l(1.000000)
					mul r0.w, cb0[5].z, cb0[9].y
					div r0.w, r0.w, r1.z
					mad r1.x, cb0[5].z, cb0[9].y, -r0.w
					mad r0.w, cb0[9].x, r1.x, r0.w
					mad r0.w, -r2.x, r0.w, l(0.999999)
					mad r3.w, r0.z, l(0.000001), r0.w
					dp2 r0.z, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
					add r0.w, -r3.w, l(1.000000)
					mul_sat r0.w, r0.w, l(1.200000)
					sincos r0.z, null, r0.z
					mul r1.x, r0.z, l(43758.550781)
					round_ni r1.x, r1.x
					mad r0.z, r0.z, l(43758.550781), -r1.x
					mad r0.z, r0.z, l(2.000000), l(-1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r0.w, r1.x
					mad r1.x, r1.x, l(0.050000), l(0.002000)
					ge r1.x, |r0.z|, r1.x
					and r1.x, r1.x, l(0x3f800000)
					mul r0.w, r0.w, r1.x
					mad r0.z, r0.z, r0.w, r3.y
					round_ni r0.w, r0.z
					add r3.x, -r0.w, r0.z
					div r0.zw, cb1[5].xxxy, cb0[9].zzzz
					mul r1.xy, r0.zwzz, r3.xzxx
					round_ne r1.xy, r1.xyxx
					div r0.zw, r1.xxxy, r0.zzzw
					mul r1.x, cb0[5].z, cb0[10].x
					div r1.x, r1.x, r1.z
					mad r1.y, cb0[10].x, cb0[5].z, -r1.x
					mad r1.x, cb0[9].w, r1.y, r1.x
					mul r1.x, r1.x, r2.x
					mad r0.xy, r0.xyxx, r1.xxxx, r0.zwzz
					add r0.zw, -r0.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					add r0.xy, -r0.zwzz, r0.xyxx
					add r1.x, cb0[11].y, l(-1.000000)
					mad r1.x, r2.x, r1.x, l(1.000000)
					mad r0.zw, r1.xxxx, r0.xxxy, r0.zzzw
					mul r1.x, cb0[5].z, cb0[14].x
					mul r1.y, cb0[14].y, cb1[0].y
					sincos r3.x, r4.x, r1.y
					mov r4.y, r3.x
					dp2 r1.x, -r1.xxxx, r4.xyxx
					mad r1.x, cb0[14].x, cb0[5].z, r1.x
					div r3.x, r1.x, r1.z
					div r3.z, -r1.x, r1.z
					mov r3.yw, l(0,0,0,0)
					mad r1.xy, r2.xxxx, r3.xyxx, r0.zwzz
					mad r2.yz, r2.xxxx, r3.zzwz, r0.zzwz
					sample r3.xyzw, r2.yzyy, t1.xyzw, s0
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mov r3.x, r4.x
					mul r1.xy, cb0[5].zzzz, cb0[13].zwzz
					div r1.xy, r1.xyxx, r1.zzzz
					mad r2.yz, cb0[13].zzwz, cb0[5].zzzz, -r1.xxyx
					mad r1.xy, cb0[13].yyyy, r2.yzyy, r1.xyxx
					mad r1.xy, r2.xxxx, r1.xyxx, r0.zwzz
					sample r4.xyzw, r1.xyxx, t1.xyzw, s0
					mul r5.w, cb0[5].z, cb0[13].x
					mul r5.xyz, cb0[5].zzzz, cb0[12].xywx
					div r1.xy, r5.zwzz, r1.zzzz
					add r2.yz, -r1.xxyx, r5.zzwz
					div r5.xy, r5.xyxx, r1.zzzz
					mad r1.xy, cb0[12].zzzz, r2.yzyy, r1.xyxx
					mad r1.xy, r2.xxxx, r1.xyxx, r0.zwzz
					sample r6.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.y, r6.y
					mad r1.xy, cb0[12].xyxx, cb0[5].zzzz, -r5.xyxx
					mad r1.xy, cb0[11].wwww, r1.xyxx, r5.xyxx
					mad r1.xy, r2.xxxx, r1.xyxx, r0.zwzz
					sample r5.xyzw, r1.xyxx, t1.xyzw, s0
					mov r4.x, r5.x
					sample r5.xyzw, r0.zwzz, t1.xyzw, s0
					mov r3.y, r5.y
					add r1.xyw, r3.xyxz, -r4.xyxz
					mad r1.xyw, cb0[11].zzzz, r1.xyxw, r4.xyxz
					add r1.xyw, -r5.xyxz, r1.xyxw
					mad r1.xyw, cb0[4].wwww, r1.xyxw, r5.xyxz
					mad r2.y, cb1[0].y, cb0[15].x, -cb0[15].x
					mad r2.y, cb0[14].w, r2.y, cb0[15].x
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].z, cb0[15].y
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r1.z
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[14].z, r2.y, r2.w
					mul r4.x, r2.y, r2.x
					mov r4.y, l(0)
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					add r7.xyz, r5.xyzx, r7.xyzx
					mov r4.zw, -r4.xxxx
					mad r8.xyzw, r4.xxxx, l(-1.000000, 1.000000, 1.000000, -1.000000), r0.zwzw
					add r4.xyzw, r0.zwzw, r4.zyyw
					sample r9.xyzw, r4.xyxx, t1.xyzw, s0
					sample r4.xyzw, r4.zwzz, t1.xyzw, s0
					add r7.xyz, r7.xyzx, r9.xyzx
					add r6.xyz, r6.xyzx, r7.xyzx
					add r4.xyz, r4.xyzx, r6.xyzx
					mad r2.zw, -r2.xxxx, r2.yyyy, r0.zzzw
					mad r6.xy, r2.xxxx, r2.yyyy, r0.zwzz
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					sample r7.xyzw, r2.zwzz, t1.xyzw, s0
					add r2.yzw, r4.xxyz, r7.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					sample r4.xyzw, r8.xyxx, t1.xyzw, s0
					sample r6.xyzw, r8.zwzz, t1.xyzw, s0
					add r2.yzw, r2.yyzw, r4.xxyz
					add r2.yzw, r6.xxyz, r2.yyzw
					mad r2.yzw, r2.yyzw, l(0.000000, 0.111111, 0.111111, 0.111111), -r1.xxyw
					mul r2.yzw, r2.yyzw, cb0[15].zzzz
					mad r1.xyw, cb0[4].zzzz, r2.yzyw, r1.xyxw
					mad r2.y, cb1[0].y, cb0[16].y, -cb0[16].y
					mad r2.y, cb0[16].x, r2.y, cb0[16].y
					sincos r2.y, null, r2.y
					add r2.y, r2.y, l(1.000000)
					mad r2.y, r2.y, l(0.475000), l(0.050000)
					mul r2.z, cb0[5].z, cb0[16].z
					mul r2.w, r2.z, r2.y
					div r2.w, r2.w, r1.z
					mad r2.y, r2.y, r2.z, -r2.w
					mad r2.y, cb0[15].w, r2.y, r2.w
					mad r2.zw, -r2.xxxx, r2.yyyy, r0.zzzw
					mul r4.x, r2.y, r2.x
					sample r6.xyzw, r2.zwzz, t1.xyzw, s0
					mad r2.yz, r4.xxxx, l(0.000000, -1.000000, 1.000000, 0.000000), r0.zzwz
					sample r7.xyzw, r2.yzyy, t1.xyzw, s0
					add r2.y, r6.z, r7.z
					mul r3.z, r2.y, l(0.500000)
					mov r4.y, l(0)
					add r6.xyzw, r0.zwzw, r4.xyyx
					sample r7.xyzw, r6.zwzz, t1.xyzw, s0
					sample r6.xyzw, r6.xyxx, t1.xyzw, s0
					mov r4.zw, -r4.xxxx
					add r8.xyzw, r0.zwzw, r4.yzwy
					add r9.xyzw, r0.zwzw, r4.xwxx
					sample r10.xyzw, r8.xyxx, t1.xyzw, s0
					sample r8.xyzw, r8.zwzz, t1.xyzw, s0
					mov r6.z, r8.z
					add r2.y, r7.y, r10.y
					mul r6.y, r2.y, l(0.500000)
					sample r7.xyzw, r9.xyxx, t1.xyzw, s0
					sample r8.xyzw, r9.zwzz, t1.xyzw, s0
					add r2.y, r7.x, r8.x
					mul r3.x, r2.y, l(0.500000)
					add r2.yzw, r3.xxyz, r6.xxyz
					mad r4.yz, -r4.xxxx, cb0[16].wwww, r0.zzwz
					mul r6.x, r4.x, cb0[16].w
					sample r4.xyzw, r4.yzyy, t1.xyzw, s0
					mad r4.xy, r6.xxxx, l(-1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
					sample r7.xyzw, r4.xyxx, t1.xyzw, s0
					add r3.w, r4.z, r7.z
					mul r3.z, r3.w, l(0.500000)
					mov r6.y, l(0)
					add r4.xyzw, r0.zwzw, r6.xyyx
					sample r7.xyzw, r4.zwzz, t1.xyzw, s0
					sample r4.xyzw, r4.xyxx, t1.xyzw, s0
					mov r6.zw, -r6.xxxx
					add r8.xyzw, r0.zwzw, r6.xwxx
					add r6.xyzw, r0.zwzw, r6.yzwy
					sample r9.xyzw, r6.xyxx, t1.xyzw, s0
					sample r6.xyzw, r6.zwzz, t1.xyzw, s0
					mov r4.z, r6.z
					add r3.w, r7.y, r9.y
					mul r4.y, r3.w, l(0.500000)
					sample r6.xyzw, r8.xyxx, t1.xyzw, s0
					sample r7.xyzw, r8.zwzz, t1.xyzw, s0
					add r3.w, r6.x, r7.x
					mul r3.x, r3.w, l(0.500000)
					add r3.xyz, r3.xyzx, r4.xyzx
					add r2.yzw, r2.yyzw, r3.xxyz
					mad r2.yzw, r2.yyzw, l(0.000000, 0.250000, 0.250000, 0.250000), -r1.xxyw
					mul r2.yzw, r2.yyzw, cb0[17].xxxx
					mad r1.xyw, cb0[4].yyyy, r2.yzyw, r1.xyxw
					mul r2.y, cb0[5].z, cb0[19].y
					div r1.z, r2.y, r1.z
					mad r2.y, cb0[19].y, cb0[5].z, -r1.z
					mad r1.z, cb0[19].x, r2.y, r1.z
					mad r0.xy, r2.xxxx, r1.zzzz, r0.zwzz
					mad r3.xy, -r2.xxxx, r1.zzzz, r0.zwzz
					sample r4.xyzw, r0.xwxx, t1.xyzw, s0
					sample r6.xyzw, r0.zyzz, t1.xyzw, s0
					mov r3.zw, r0.wwwz
					mad r0.xyzw, r5.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r4.xyzw
					add r0.xyzw, -r6.xyzw, r0.xyzw
					sample r4.xyzw, r3.xzxx, t1.xyzw, s0
					sample r3.xyzw, r3.wyww, t1.xyzw, s0
					add r0.xyzw, r0.xyzw, -r4.xyzw
					add r0.xyzw, -r3.xyzw, r0.xyzw
					dp4 r0.w, r0.xyzw, r0.xyzw
					sqrt r1.z, r0.w
					rsq r0.w, r0.w
					mul r2.yzw, r0.wwww, r0.xxyz
					lt r0.w, r1.z, l(0.010000)
					lt r1.z, l(0.010000), r1.z
					mul r3.xyz, r2.xxxx, cb0[20].xyzx
					and r3.xyz, r0.wwww, r3.xyzx
					movc r2.yzw, r1.zzzz, r2.yyzw, r3.xxyz
					add r2.yzw, -r0.xxyz, r2.yyzw
					mad r0.xyz, cb0[21].xxxx, r2.yzwy, r0.xyzx
					add r2.yzw, cb0[18].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r0.xyz, r1.xywx, r2.yzwy, r0.xyzx
					add r0.xyz, -r1.xywx, r0.xyzx
					mad r0.xyz, cb0[21].yyyy, r0.xyzx, r1.xywx
					dp3 r0.w, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, cb0[22].x, cb0[23].x
					mul r0.w, r0.w, r2.x
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
					add r1.xyz, -r0.xyzx, r0.wwww
					mul r0.w, r2.x, cb0[23].y
					mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					add r1.xyz, cb0[24].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r1.xyz, r2.xxxx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					add r1.xy, cb0[25].xzxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r1.xy, r2.xxxx, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					div r0.xyz, r0.xyzx, r1.xxxx
					round_z r0.w, r1.y
					div r0.w, l(256.000000), r0.w
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, -r0.xyzx
					mul r1.xyz, r1.xyzx, r2.xxxx
					mul r1.w, r2.x, cb0[27].x
					mad r0.xyz, cb0[25].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyz, r0.wwww, r0.xyzx
					round_ni r1.xyz, r1.xyzx
					div r1.xyz, r1.xyzx, r0.wwww
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad r0.xyz, cb0[4].xxxx, r1.xyzx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), cb0[25].wwww
					mad r0.xyz, cb0[26].xxxx, r1.xyzx, r0.xyzx
					ge r0.w, r0.y, r0.z
					and r0.w, r0.w, l(0x3f800000)
					add r1.xy, -r0.zyzz, r0.yzyy
					mad r1.xy, r0.wwww, r1.xyxx, r0.zyzz
					ge r0.w, r0.x, r1.x
					and r0.w, r0.w, l(0x3f800000)
					mov r1.z, r0.x
					add r2.xyz, -r1.xyzx, r1.zyxz
					mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
					min r0.w, r1.y, r1.z
					add r0.w, -r0.w, r1.x
					add r1.y, r1.x, l(0.000000)
					div r0.w, r0.w, r1.y
					mad r1.y, cb0[26].w, cb1[0].y, -cb0[26].z
					mad r1.y, cb0[26].y, r1.y, cb0[26].z
					add r2.xyz, r1.yyyy, l(1.000000, 0.666667, 0.333333, 0.000000)
					frc r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -3.000000, -3.000000, 0.000000)
					add_sat r2.xyz, |r2.xyzx|, l(-1.000000, -1.000000, -1.000000, 0.000000)
					add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
					mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r1.xxxx, r2.xyzx, -r0.xyzx
					mad o0.xyz, r1.wwww, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	CustomEditor "ASEMaterialInspector"
}